{"version":3,"sources":["../../server/defaultRequestLoggerPublic.js"],"names":["defaultrequestLoggerPublic","require","load","condition","JSON","parse","process","env","TRACE_CONDITION_REQUEST_PUBLIC","requestAndResponse","logLevel","log"],"mappings":";;;;;;;;;;;;;;;;AAgBwBA,0B,CAdxB,0B,uCACA,qD,4IAIAC,QAAS,QAAT,EAAoBC,IAApB,GAGA,GAAMC,WAAYC,KAAKC,KAAL,CAAYC,QAAQC,GAAR,CAAYC,8BAAxB,CAAlB,CAMe,QAASR,2BAAT,CAAqCS,kBAArC,CAA0D;AACvE,GAAIC,UAAW,IAAf;;;;;;;;AAQA,GAAI,2BAAcD,kBAAd,CAAkCN,SAAlC,CAAJ;AACEO,SAAW,MAAX;;AAEF,GAAIA,QAAJ;AACE,cAAIC,GAAJ,CAASD,QAAT,CAAmB,gBAAnB,CAAqCD,kBAArC;AACH","file":"defaultRequestLoggerPublic.js","sourcesContent":["// @flow weak\n\nimport log from './log'\nimport matchInDepth from '../scripts/matchInDepth'\n\n\n// Read environment\nrequire( 'dotenv' ).load()\n\n\nconst condition = JSON.parse( process.env.TRACE_CONDITION_REQUEST_PUBLIC )\n\n// Example for logging requests that:\n// { \"trace\" : \"none\" } - do not trace any requests\n// { \"clientIP\": \"127.0.0.1\" } - trace requests coming from localhost\n\nexport default function defaultrequestLoggerPublic( requestAndResponse ) {\n  let logLevel = null\n\n  // TODO: Whhat errors for Auth should be logged? definitily not 401.\n  // // If there is an error, log it as an error\n  // if( requestAndResponse.response.indexOf( '\"errors\": [' ) > 0 )\n  //   logLevel = 'error'\n  // Otherwise, if it is a trace, log it as info\n  //else\n  if( matchInDepth( requestAndResponse, condition ) )\n    logLevel = 'info'\n\n  if( logLevel )\n    log.log( logLevel, 'Public request', requestAndResponse )\n}\n"]}