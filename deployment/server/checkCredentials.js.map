{"version":3,"sources":["../../server/checkCredentials.js"],"names":["getUserByCookie","verifyUserAuthToken","serveAuthenticationFailed","require","load","objectManager","req","user_id","uuidNull","cookies","UserToken1","length","decoded","decode","process","env","JWT_SECRET","uuidFromString","err","Promise","reject","getOneObject","id","User_site_id","siteInformation","site_id","then","a_User","setViewerUserId","request_UserToken2","get","UserToken2","USER_TOKEN_2_BYPASS_IP","ip","resolve","httpError403FileName","__dirname","res","error","respondWithJSON","headers","connection","remoteAddress","requestDetails","query","body","log","cookie","httpOnly","expires","Date","status","send","sendFile"],"mappings":";;;;;;;;;;;AAWgBA,e,CAAAA,e;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BAC,mB,CAAAA,mB;;;;;;;;;;;;;;;;;;;;;;;;AAwBAC,yB,CAAAA,yB,CA3DhB,qC,mDACA,0B,yCAEA,2E,iEACA,0B,0HAGAC,QAAQ,QAAR,EAAkBC,IAAlB,GAEO,QAASJ,gBAAT,CAAyBK,aAAzB,CAAwCC,GAAxC,CAA6C,CAClD,GAAIC,SAAU,2BAAiBC,QAAjB,EAAd,CAEA,GAAI,CACF,GAAIF,IAAIG,OAAJ,CAAYC,UAAhB,CACE,GAAIJ,IAAIG,OAAJ,CAAYC,UAAZ,CAAuBC,MAAvB,CAAgC,EAApC,CAAwC,CACtC,GAAIC,SAAU,oBAAIC,MAAJ,CAAWP,IAAIG,OAAJ,CAAYC,UAAvB,CAAmCI,QAAQC,GAAR,CAAYC,UAA/C,CAAd,CACAT,QAAU,2BAAiBU,cAAjB,CAAgCL,QAAQL,OAAxC,CAAV,CACD,CACJ,CAAC,MAAOW,GAAP,CAAY,CACZ,MAAOC,SAAQC,MAAR,CAAe,mCAAqCF,GAApD,CAAP,CACD,CAED,MAAOb,eACJgB,YADI,CACS,MADT,CACiB,CACpBC,GAAIf,OADgB,CAEpBgB,aAAclB,cAAcmB,eAAd,CAA8BC,OAFxB,CADjB,EAKJC,IALI,CAKC,gBAAU,CACd,GAAIC,MAAJ,CAAY,CACVtB,cAAcuB,eAAd,CAA8BrB,OAA9B,EACA,MAAOoB,OAAP,CACD,CAHD,IAGO,OAAOR,SAAQC,MAAR,CAAe,oBAAf,CAAP,CACR,CAVI,CAAP,CAWD,CAEM,QAASnB,oBAAT,CAA6B0B,MAA7B,CAAqCrB,GAArC,CAA0C,CAC/C,GAAI,CAACqB,MAAL,CAAa,MAAOR,SAAQC,MAAR,CAAe,oBAAf,CAAP,CAAb,IACK,CACH,GAAMS,oBAAqBvB,IAAIwB,GAAJ,CAAQ,YAAR,CAA3B,CACA,GACED,oBAAsBF,OAAOI,UAA7B,EACAjB,QAAQC,GAAR,CAAYiB,sBAAZ,EAAsC1B,IAAI2B,EAF5C,CAIE,MAAOd,SAAQe,OAAR,CAAgBP,OAAOL,EAAvB,CAAP,CAJF,IAME,OAAOH,SAAQC,MAAR,CACL,sCACEO,OAAOI,UADT,CAEE,aAFF,CAGEF,kBAJG,CAAP,CAMH,CACF,CAED,GAAMM,sBAAuB,eAAKD,OAAL,CAC3BE,SAD2B,CAE3B,4CAF2B,CAA7B,CAKO,QAASlC,0BAAT,CAAmCI,GAAnC,CAAwC+B,GAAxC,CAA6CC,KAA7C,CAAoDC,eAApD,CAAqE;;AAE1E,GAAIN,IAAK3B,IAAIkC,OAAJ,CAAY,WAAZ,GAA4BlC,IAAImC,UAAJ,CAAeC,aAApD;;AAEA,GAAMC,gBAAiB;AACrBH,QAASlC,IAAIkC,OADQ;AAErB/B,QAASH,IAAIG,OAFQ;AAGrBwB,GAAIA,EAHiB;AAIrBW,MAAOtC,IAAIuC,IAJU,CAAvB;;;AAOA,cAAIC,GAAJ,CAAQ,MAAR,CAAgB,6BAAhB,CAA+C,CAAER,WAAF,CAASK,6BAAT,CAA/C;;;AAGAN,IAAIU,MAAJ,CAAW,YAAX,CAAyB,EAAzB,CAA6B,CAAEC,SAAU,IAAZ,CAAkBC,QAAS,GAAIC,KAAJ,CAAS,CAAT,CAA3B,CAA7B;;AAEA,GAAIX,eAAJ;AACEF,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,0CAArB,EADF;AAEKf,IAAIc,MAAJ,CAAW,GAAX,EAAgBE,QAAhB,CAAyBlB,oBAAzB;AACN","file":"checkCredentials.js","sourcesContent":["// @flow\n\nimport jwt from \"jwt-simple\"\nimport path from \"path\"\n\nimport defaultPersister from \"../configuration/graphql/defaultPersister\"\nimport log from \"./log\"\n\n// Read environment\nrequire(\"dotenv\").load()\n\nexport function getUserByCookie(objectManager, req) {\n  let user_id = defaultPersister.uuidNull() // Anonymous, unless cookie is passed\n\n  try {\n    if (req.cookies.UserToken1)\n      if (req.cookies.UserToken1.length > 10) {\n        var decoded = jwt.decode(req.cookies.UserToken1, process.env.JWT_SECRET)\n        user_id = defaultPersister.uuidFromString(decoded.user_id)\n      }\n  } catch (err) {\n    return Promise.reject(\"ðŸ’”  Could not read auth cookie. \" + err)\n  }\n\n  return objectManager\n    .getOneObject(\"User\", {\n      id: user_id,\n      User_site_id: objectManager.siteInformation.site_id,\n    })\n    .then(a_User => {\n      if (a_User) {\n        objectManager.setViewerUserId(user_id)\n        return a_User\n      } else return Promise.reject(\"ðŸ’”  User not found\")\n    })\n}\n\nexport function verifyUserAuthToken(a_User, req) {\n  if (!a_User) return Promise.reject(\"ðŸ’”  User not found\")\n  else {\n    const request_UserToken2 = req.get(\"UserToken2\")\n    if (\n      request_UserToken2 == a_User.UserToken2 ||\n      process.env.USER_TOKEN_2_BYPASS_IP == req.ip\n    )\n      return Promise.resolve(a_User.id)\n    else\n      return Promise.reject(\n        \"ðŸ’”  Authentication token expected: \" +\n          a_User.UserToken2 +\n          \", provided:\" +\n          request_UserToken2,\n      )\n  }\n}\n\nconst httpError403FileName = path.resolve(\n  __dirname,\n  \"../configuration/server/httpError/403.html\",\n)\n\nexport function serveAuthenticationFailed(req, res, error, respondWithJSON) {\n  // Collect information about the request\n  var ip = req.headers[\"x-real-ip\"] || req.connection.remoteAddress\n\n  const requestDetails = {\n    headers: req.headers,\n    cookies: req.cookies,\n    ip: ip,\n    query: req.body,\n  }\n\n  log.log(\"warn\", \"Checking credentials failed\", { error, requestDetails })\n\n  // Expire cookie. This is the only way to 'delete' a cookie\n  res.cookie(\"UserToken1\", \"\", { httpOnly: true, expires: new Date(1) })\n\n  if (respondWithJSON)\n    res.status(403).send('{ \"error\": \"ðŸ’”  Authentication Failed\" }')\n  else res.status(403).sendFile(httpError403FileName)\n}\n"]}