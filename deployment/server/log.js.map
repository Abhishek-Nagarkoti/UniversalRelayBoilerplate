{"version":3,"sources":["../../server/log.js"],"names":["require","load","transports","process","env","NODE_ENV","push","Console","defaultPersisterLogger","createLogger","log","Logger"],"mappings":";;AAEA,gC;;AAEA,2E;;;;AAIAA,QAAS,QAAT,EAAoBC,IAApB;;;AAGA,GAAMC,YAAa,EAAnB;;;AAGA,GAAIC,QAAQC,GAAR,CAAYC,QAAZ,EAAwB,aAA5B;AACEH,WAAWI,IAAX,CAAiB,GAAK,mBAAQJ,UAAR,CAAmBK,OAAxB,EAAjB;;;AAGF,GAAMC,wBAAyB,2BAAiBC,YAAjB,EAA/B;AACA,GAAID,sBAAJ;AACEN,WAAWI,IAAX,CAAiBE,sBAAjB;;;AAGF,GAAME,KAAM,GAAK,mBAAQC,MAAb,CAAuB,CAAET,qBAAF,CAAvB,CAAZ,C;;AAEeQ,G","file":"log.js","sourcesContent":["// @flow\n\nimport winston from 'winston'\n\nimport defaultPersister from '../configuration/graphql/defaultPersister'\n\n\n// Read environment\nrequire( 'dotenv' ).load()\n\n// Determine transports.\nconst transports = []\n\n// Add console when in development mode.\nif( process.env.NODE_ENV == 'development' )\n  transports.push( new( winston.transports.Console )() )\n\n// If persister specified logger, use it\nconst defaultPersisterLogger = defaultPersister.createLogger()\nif( defaultPersisterLogger )\n  transports.push( defaultPersisterLogger )\n\n// Create winston\nconst log = new( winston.Logger )( { transports } )\n\nexport default log\n"]}