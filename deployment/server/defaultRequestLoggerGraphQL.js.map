{"version":3,"sources":["../../server/defaultRequestLoggerGraphQL.js"],"names":["defaultRequestLoggerGraphQL","require","load","condition","JSON","parse","process","env","TRACE_CONDITION_REQUEST_GRAPHQL","requestAndResponse","logLevel","response","indexOf","log"],"mappings":";;;;;;;;;;;;;;;;;AAiBwBA,2B,CAfxB,0B,uCACA,qD,4IAIAC,QAAS,QAAT,EAAoBC,IAApB,GAGA,GAAMC,WAAYC,KAAKC,KAAL,CAAYC,QAAQC,GAAR,CAAYC,+BAAxB,CAAlB,CAOe,QAASR,4BAAT,CAAsCS,kBAAtC,CAA2D;AACxE,GAAIC,UAAW,IAAf;;;AAGA,GAAID,mBAAmBE,QAAnB,CAA4BC,OAA5B,CAAqC,aAArC,EAAuD,CAA3D;AACEF,SAAW,OAAX,CADF;;AAGK,GAAI,2BAAcD,kBAAd,CAAkCN,SAAlC,CAAJ;AACHO,SAAW,MAAX;;AAEF,GAAIA,QAAJ;AACE,cAAIG,GAAJ,CAASH,QAAT,CAAmB,iBAAnB,CAAsCD,kBAAtC;AACH","file":"defaultRequestLoggerGraphQL.js","sourcesContent":["// @flow weak\n\nimport log from './log'\nimport matchInDepth from '../scripts/matchInDepth'\n\n\n// Read environment\nrequire( 'dotenv' ).load()\n\n\nconst condition = JSON.parse( process.env.TRACE_CONDITION_REQUEST_GRAPHQL )\n\n// Example for logging requests that:\n// { \"trace\" : \"none\" } - do not trace any requests\n// { \"clientIP\": \"127.0.0.1\" } - trace requests coming from localhost\n// { \"user\": { \"User_AccountName\": \"jack\" } } - trace requests for user account named 'jack'\n\nexport default function defaultRequestLoggerGraphQL( requestAndResponse ) {\n  let logLevel = null\n\n  // If there is an error, log it as an error\n  if( requestAndResponse.response.indexOf( '\"errors\": [' ) > 0 )\n    logLevel = 'error'\n    // Otherwise, if it is a trace, log it as info\n  else if( matchInDepth( requestAndResponse, condition ) )\n    logLevel = 'info'\n\n  if( logLevel )\n    log.log( logLevel, 'GraphQL request', requestAndResponse )\n}\n"]}