{"version":3,"sources":["../../../webapp/components/Wrapper.jsx"],"names":["Wrapper","props","context","handle_onResize","viewportDimensions","rbContext","children","Component","childContextTypes","PropTypes","object"],"mappings":";;AAEA,4B;AACA,wD;;AAEA,iE;;;AAGqBA,O;;;;;;;;AAQnB,iBAAaC,KAAb,CAAyBC,OAAzB,CAAwC;;AAE/BD,KAF+B,CAExBC,OAFwB;;;;;;;;;;;;;;;;;;;;;AAuBxCC,eAvBwC,CAuBtB,UAAM;;AAEtB,MAAKC,kBAAL,CAAwBD,eAAxB;AACD,CA1BuC,CAMtC,MAAKC,kBAAL,CAA0B,kCAA1B,CANsC,aAOvC,C,iFAEmB,CAElB,KAAKD,eAAL,GACD,C,yDAEiB,CAEhB,MAAQ,CACNE,UAAW,CACTD,mBAAoB,KAAKA,kBADhB,CADL,CAAR,CAKD,C;;AAOQ;;AAEP;AACE,4DAAe,OAAO,QAAtB,CAA+B,SAAW,KAAKD,eAA/C;AACI,KAAKF,KAAL,CAAWK,QADf,CADF;;;AAKD,C,qBA3CkC,gBAAMC,S,EAAtBP,O,CAIZQ,iB,CAAoB,CACzBH,UAAW,gBAAMI,SAAN,CAAgBC,MADF,C,iBAJRV,O","file":"Wrapper.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport EventListener from 'react-event-listener'\n\nimport ViewportDimensions from '../scripts/ViewportDimensions'\n\n\nexport default class Wrapper extends React.Component {\n\n  viewportDimensions: ViewportDimensions;\n\n  static childContextTypes = {\n    rbContext: React.PropTypes.object,\n  };\n\n  constructor( props: any, context: any ) {\n\n    super( props, context )\n\n    // TODO x0100 If a property for innerWidth is provided, use it for the initial request\n\n    this.viewportDimensions = new ViewportDimensions()\n  }\n\n  componentDidMount() {\n\n    this.handle_onResize() // Will populate the data structures for dimensions with current values\n  }\n\n  getChildContext() {\n\n    return( {\n      rbContext: {\n        viewportDimensions: this.viewportDimensions\n      }\n    } )\n  }\n\n  handle_onResize = () => {\n\n    this.viewportDimensions.handle_onResize()\n  }\n\n  render() {\n\n    return(\n      <EventListener target='window' onResize={ this.handle_onResize }>\n        { this.props.children }\n      </EventListener>\n    )\n  }\n}\n"]}