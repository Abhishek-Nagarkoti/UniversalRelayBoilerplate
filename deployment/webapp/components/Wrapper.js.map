{"version":3,"sources":["../../../webapp/components/Wrapper.jsx"],"names":["Wrapper","props","context","handle_onResize","rbContext","viewportDimensions","children","Component","childContextTypes","PropTypes","object"],"mappings":";;AAEA,4B;AACA,wD;;AAEA,iE;;;AAGqBA,O;;;;;;;;AAQnB,iBAAaC,KAAb,CAAyBC,OAAzB,CAAwC;;AAE/BD,KAF+B,CAExBC,OAFwB;;;;;;;;;;;;;;;;;;;;;;AAwBxCC,eAxBwC,CAwBtB,UAAM;;AAEtB,MAAKC,SAAL,CAAeC,kBAAf,CAAkCF,eAAlC;AACD,CA3BuC,CAOtC,MAAKC,SAAL,CAAiB,EAAjB,CAEA,MAAKA,SAAL,CAAeC,kBAAf,CAAoC,kCAApC,CATsC,aAUvC,C,iFAEmB,CAElB,KAAKF,eAAL,GACD,C,yDAEiB,CAEhB,MAAQ,CACNC,UAAW,KAAKA,SADV,CAAR,CAGD,C;;AAOQ;;AAEP;AACE,4DAAe,OAAO,QAAtB,CAA+B,SAAW,KAAKD,eAA/C;AACI,KAAKF,KAAL,CAAWK,QADf,CADF;;;AAKD,C,qBA5CkC,gBAAMC,S,EAAtBP,O,CAIZQ,iB,CAAoB,CACzBJ,UAAW,gBAAMK,SAAN,CAAgBC,MADF,C,iBAJRV,O","file":"Wrapper.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport EventListener from 'react-event-listener'\n\nimport ViewportDimensions from '../scripts/ViewportDimensions'\n\n\nexport default class Wrapper extends React.Component {\n\n  rbContext: object;\n\n  static childContextTypes = {\n    rbContext: React.PropTypes.object,\n  };\n\n  constructor( props: any, context: any ) {\n\n    super( props, context )\n\n    // TODO x0100 If a property for innerWidth is provided, use it for the initial request\n\n    // Descendants can add other items to rbContext\n    this.rbContext = {}\n\n    this.rbContext.viewportDimensions = new ViewportDimensions()\n  }\n\n  componentDidMount() {\n\n    this.handle_onResize() // Will populate the data structures for dimensions with current values\n  }\n\n  getChildContext() {\n\n    return( {\n      rbContext: this.rbContext\n    } )\n  }\n\n  handle_onResize = () => {\n\n    this.rbContext.viewportDimensions.handle_onResize()\n  }\n\n  render() {\n\n    return(\n      <EventListener target='window' onResize={ this.handle_onResize }>\n        { this.props.children }\n      </EventListener>\n    )\n  }\n}\n"]}