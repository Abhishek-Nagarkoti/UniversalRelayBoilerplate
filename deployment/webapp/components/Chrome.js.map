{"version":3,"sources":["../../../webapp/components/Chrome.jsx"],"names":["Chrome","props","context","_handle_onTouchTap_NavigationToggle","_handle_RequestChangeNavDrawer","state","navDrawerIsOpen","open","setState","_handle_onChangeList_AppNavDrawer","event","value","router","push","muiTheme","userAgent","navigator","styles","appBar","position","zIndex","top","viewport","paddingLeft","minHeight","navDrawer","viewportContainer","backgroundColor","rawTheme","palette","backCanvas","viewportBackgroundColor","getStyles","showMenuIconButton","rbContext","viewportDimensions","get","Viewer","children","location","Component","contextTypes","PropTypes","object","isRequired","childContextTypes","createContainer","fragments","getFragment"],"mappings":";;AAEA,0C;AACA,2D;AACA,4B;AACA,uC;;AAEA,4C;AACA,gF;AACA,sF;AACA,oE;AACA;AACA,6D;AACA,iE;;;AAGMA,M;;;;;;;;;;;;;;;;AAgBJ,gBAAaC,KAAb,CAAoBC,OAApB,CAA8B;AACrBD,KADqB,CACdC,OADc;;;;;;;;;;;;;;;;AAiB9BC,mCAjB8B,CAiBQ,UAAM;;AAE1C,MAAKC,8BAAL,CAAqC,CAAC,MAAKC,KAAL,CAAWC,eAAjD;AACD,CApB6B;;AAsB9BF,8BAtB8B,CAsBG,SAAEG,IAAF,CAAY;;AAE3C,MAAKC,QAAL,CAAe,CAAEF,gBAAiBC,IAAnB,CAAf;AACD,CAzB6B;;AA2B9BE,iCA3B8B,CA2BM,SAAEC,KAAF,CAASC,KAAT,CAAoB;;AAEtD,MAAKT,OAAL,CAAaU,MAAb,CAAoBC,IAApB,CAA0BF,KAA1B;AACA,MAAKH,QAAL,CAAe,CAAEF,gBAAiB,KAAnB,CAAf;AACD,CA/B6B,CAG5B,MAAKD,KAAL,CAAa,CACXC,gBAAiB,KADN,CAAb,CAIA,MAAKQ,QAAL,CAAgB,6CAAuB,CAAEC,UAAWC,UAAUD,SAAvB,CAAvB,CAAhB,CAP4B,aAQ7B,C,4EAEiB,CAEhB,MAAQ,CACND,SAAU,KAAKA,QADT,CAAR,CAGD,C;;AAkBW;;AAEV,GAAMG,QAAS;AACbC,OAAQ;AACNC,SAAU,OADJ;AAENC,OAAQ,KAAKN,QAAL,CAAcM,MAAd,CAAqBF,MAArB,CAA8B,CAFhC;AAGNG,IAAK,CAHC,CADK;;AAMbC,SAAU;AACRC,YAAa,CADL;AAERC,UAAW,GAFH,CANG;;AAUbC,UAAW,EAVE;AAWbC,kBAAmB;AACjBC,gBAAiB,KAAKb,QAAL,CAAcc,QAAd,CAAuBC,OAAvB,CAA+BC,UAA/B,CAA0CC,uBAD1C,CAXN,CAAf;;;;AAgBA,MAAOd,OAAP;AACD,C;;AAEQ;;AAEP,GAAMA,QAAS,KAAKe,SAAL,EAAf,CAFO;;AAID1B,eAJC,CAImB,KAAKD,KAJxB,CAIDC,eAJC;;AAMP,GAAI2B,oBAAqB,IAAzB;;AAEA,GAAI,KAAK/B,OAAL,CAAagC,SAAb,CAAuBC,kBAAvB,CAA0CC,GAA1C,CAA+C,IAA/C,CAAqD,SAArD,6BAAJ,CAAiF;;AAE/E9B,gBAAkB,IAAlB;AACA2B,mBAAqB,KAArB;;AAEAhB,OAAOQ,SAAP,CAAiBL,MAAjB,CAA0BH,OAAOC,MAAP,CAAcE,MAAd,CAAuB,CAAjD;AACAH,OAAOC,MAAP,CAAcK,WAAd,CAA4B,GAA5B;AACAN,OAAOK,QAAP,CAAgBC,WAAhB,CAA8B,GAA9B;AACD;;AAED;AACE,qCAAK,MAAQN,OAAOS,iBAApB;AACE,0DADF;AAEE;AACE,yBAA2B,KAAKvB,mCADlC;AAEE,qCAFF;AAGE,OAAS,CAHX;AAIE,iBAAmB,yDAAiB,OAAQ,KAAKF,KAAL,CAAWoC,MAApC,EAJrB;AAKE,MAAOpB,OAAOC,MALhB;AAME,mBAAoBe,kBANtB,EAFF;;AAUE,qCAAK,MAAQhB,OAAOK,QAApB;AACI,KAAKrB,KAAL,CAAWqC,QADf,CAVF;;AAaE;AACE,OAAS,KAAKrC,KAAL,CAAWoC,MADtB;AAEE,MAAQpB,OAAOQ,SAFjB;AAGE,SAAWc,QAHb;AAIE,OAAS,IAJX;AAKE,yBAA2B,KAAKnC,8BALlC;AAME,aAAe,KAAKK,iCANtB;AAOE,KAAOH,eAPT,EAbF;;AAsBE;AACE,OAAS,KAAKL,KAAL,CAAWoC,MADtB,EAtBF,CADF;;;;AA4BD,C,oBApHkB,gBAAMG,S,EAArBxC,M,CAOGyC,Y,CAAe,CACpB7B,OAAQ,gBAAM8B,SAAN,CAAgBC,MAAhB,CAAuBC,UADX,CAEpBV,UAAW,gBAAMQ,SAAN,CAAgBC,MAFP,C,CAPlB3C,M,CAYG6C,iB,CAAoB,CACzB/B,SAAU,gBAAM4B,SAAN,CAAgBC,MADD,C;;;;;;AA8Gd,qBAAMG,eAAN,CAAuB9C,MAAvB,CAA+B;AAC5C+C,UAAW;AACTV,OAAQ;;;;AAID,0BAAgBW,WAAhB,CAA6B,QAA7B,CAJC;AAKD,uBAAaA,WAAb,CAA0B,QAA1B,CALC;AAMD,iBAAOA,WAAP,CAAoB,QAApB,CANC,GADC,CADiC,CAA/B,C","file":"Chrome.js","sourcesContent":["// @flow weak\n\nimport AppBar from 'material-ui/AppBar'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport React from 'react'\nimport Relay from 'react-relay'\n\nimport AppNavDrawer from './AppNavDrawer'\nimport ChromeHelmet from '../../configuration/webapp/components/ChromeHelmet'\nimport ChromeRightIcon from '../../configuration/webapp/components/ChromeRightIcon'\nimport Footer from '../../configuration/webapp/components/Footer'\nimport { MainScreenTitle } from '../../configuration/webapp/components/ChromeSettings'\nimport muiTheme from '../../configuration/webapp/muiTheme'\nimport { LARGE, MEDIUM, SMALL } from '../scripts/ViewportDimensions'\n\n\nclass Chrome extends React.Component {\n\n  muiTheme: Object;\n  state: {\n    navDrawerIsOpen: boolean,\n  };\n\n  static contextTypes = {\n    router: React.PropTypes.object.isRequired,\n    rbContext: React.PropTypes.object,\n  }\n\n  static childContextTypes = {\n    muiTheme: React.PropTypes.object,\n  }\n\n  constructor( props, context ) {\n    super( props, context )\n\n    this.state = {\n      navDrawerIsOpen: false,\n    }\n\n    this.muiTheme = getMuiTheme( muiTheme, { userAgent: navigator.userAgent } )\n  }\n\n  getChildContext() {\n\n    return( {\n      muiTheme: this.muiTheme,\n    } )\n  }\n\n  _handle_onTouchTap_NavigationToggle = () => {\n\n    this._handle_RequestChangeNavDrawer( !this.state.navDrawerIsOpen )\n  }\n\n  _handle_RequestChangeNavDrawer = ( open ) => {\n\n    this.setState( { navDrawerIsOpen: open } )\n  }\n\n  _handle_onChangeList_AppNavDrawer = ( event, value ) => {\n\n    this.context.router.push( value )\n    this.setState( { navDrawerIsOpen: false } )\n  }\n\n  getStyles() {\n\n    const styles = {\n      appBar: {\n        position: 'fixed',\n        zIndex: this.muiTheme.zIndex.appBar + 1,\n        top: 0,\n      },\n      viewport: {\n        paddingLeft: 0,\n        minHeight: 500,\n      },\n      navDrawer: {},\n      viewportContainer: {\n        backgroundColor: this.muiTheme.rawTheme.palette.backCanvas.viewportBackgroundColor\n      }\n    }\n\n    return styles\n  }\n\n  render() {\n\n    const styles = this.getStyles()\n\n    let { navDrawerIsOpen } = this.state\n\n    let showMenuIconButton = true\n\n    if( this.context.rbContext.viewportDimensions.get( this, 'muiSize' ) === LARGE ) {\n\n      navDrawerIsOpen = true\n      showMenuIconButton = false\n\n      styles.navDrawer.zIndex = styles.appBar.zIndex - 1\n      styles.appBar.paddingLeft = 276\n      styles.viewport.paddingLeft = 256\n    }\n\n    return(\n      <div style={ styles.viewportContainer }>\n        <ChromeHelmet />\n        <AppBar\n          onLeftIconButtonTouchTap={ this._handle_onTouchTap_NavigationToggle }\n          title={ MainScreenTitle }\n          zDepth={ 0 }\n          iconElementRight={ <ChromeRightIcon Viewer={this.props.Viewer} /> }\n          style={styles.appBar}\n          showMenuIconButton={showMenuIconButton}\n        />\n        <div style={ styles.viewport }>\n          { this.props.children }\n        </div>\n        <AppNavDrawer\n          Viewer={ this.props.Viewer }\n          style={ styles.navDrawer }\n          location={ location }\n          docked={ true }\n          onRequestChangeNavDrawer={ this._handle_RequestChangeNavDrawer }\n          onChangeList={ this._handle_onChangeList_AppNavDrawer }\n          open={ navDrawerIsOpen }\n        />\n        <Footer\n          Viewer={ this.props.Viewer }\n        />\n      </div>\n    )\n  }\n}\n\n//\n\n// It is important to retrieve UserToken2, since it is used in client.js\nexport default Relay.createContainer( Chrome, {\n  fragments: {\n    Viewer: () => Relay.QL `\n      fragment on Viewer {\n        User_IsAnonymous,\n        UserToken2,\n        ${ ChromeRightIcon.getFragment( 'Viewer' ) },\n        ${ AppNavDrawer.getFragment( 'Viewer' ) },\n        ${ Footer.getFragment( 'Viewer' ) },\n      }\n    `,\n  },\n} )\n"]}