{"version":3,"sources":["../../../webapp/components/FullWidthSection.jsx"],"names":["desktopGutter","FullWidthSection","root","padding","boxSizing","content","maxWidth","margin","rootWhenSmall","paddingTop","paddingBottom","rootWhenMedium","rootWhenLarge","props","style","useContent","contentType","contentStyle","other","muiSize","context","rbContext","viewportDimensions","get","styles","getStyles","createElement","children","propTypes","node","object","string","bool","contextTypes","PropTypes","isRequired","defaultProps"],"mappings":";;AAEA,4B;AACA,uD;AACA,mD;;AAEA,iE;;AAEA,GAAMA,eAAgB,kBAAQA,aAA9B,C;;AAEqBC,gB;;;;;;;;;;;;;;;;;;AAkBP;AACV,MAAO;AACLC,KAAM;AACJC,QAASH,aADL;AAEJI,UAAW,YAFP,CADD;;AAKLC,QAAS;AACPC,SAAU,IADH;AAEPC,OAAQ,QAFD,CALJ;;AASLC,cAAe;AACbC,WAAYT,cAAgB,CADf;AAEbU,cAAeV,cAAgB,CAFlB,CATV;;AAaLW,eAAgB;AACdF,WAAYT,cAAgB,CADd;AAEdU,cAAeV,cAAgB,CAFjB,CAbX;;AAiBLY,cAAe;AACbH,WAAYT,cAAgB,CADf;AAEbU,cAAeV,cAAgB,CAFlB,CAjBV,CAAP;;;AAsBD,C;;AAEQ;AAC4D,KAAKa,KADjE,CACCC,KADD,QACCA,KADD,CACQC,UADR,QACQA,UADR,CACoBC,WADpB,QACoBA,WADpB,CACiCC,YADjC,QACiCA,YADjC,CACkDC,KADlD;;AAGP,GAAMC,SAAU,KAAKC,OAAL,CAAaC,SAAb,CAAuBC,kBAAvB,CAA0CC,GAA1C,CAA8C,IAA9C,CAAoD,SAApD,CAAhB;;AAEA,GAAMC,QAAS,KAAKC,SAAL,EAAf;;AAEA,GAAIpB,eAAJ;AACA,GAAIU,UAAJ;AACEV,QAAU,gBAAMqB,aAAN;AACRV,WADQ;AAER,CAAEF,MAAO,SAAcU,OAAOnB,OAArB,CAA8BY,YAA9B,CAAT,CAFQ;AAGR,KAAKJ,KAAL,CAAWc,QAHH,CAAV,CADF;;AAMKtB,QAAU,KAAKQ,KAAL,CAAWc,QAArB;;AAEL;AACE;AACMT,KADN;AAEE,MAAO;AACLM,OAAOtB,IADF;AAELY,KAFK;AAGLK,qCAAqBK,OAAOhB,aAHvB;AAILW,sCAAsBK,OAAOb,cAJxB;AAKLQ,qCAAqBK,OAAOZ,aALvB,CAFT;;;AAUGP,OAVH,CADF;;;AAcD,C,gDAzEkBJ,gB,CACZ2B,S,CAAY,CACjBD,SAAU,iBAAUE,IADH,CAEjBZ,aAAc,iBAAUa,MAFP,CAGjBd,YAAa,iBAAUe,MAHN,CAIjBjB,MAAO,iBAAUgB,MAJA,CAKjBf,WAAY,iBAAUiB,IALL,C,CADA/B,gB,CASZgC,Y,CAAe,CACpBZ,UAAW,gBAAMa,SAAN,CAAgBJ,MAAhB,CAAuBK,UADd,C,CATHlC,gB,CAaZmC,Y,CAAe,CACpBrB,WAAY,KADQ,CAEpBC,YAAa,KAFO,C,iBAbHf,gB","file":"FullWidthSection.js","sourcesContent":["// @flow\n\nimport React, { Component, PropTypes } from 'react'\nimport ClearFix from 'material-ui/internal/ClearFix'\nimport spacing from 'material-ui/styles/spacing'\n\nimport { SMALL, MEDIUM, LARGE } from '../scripts/ViewportDimensions'\n\nconst desktopGutter = spacing.desktopGutter\n\nexport default class FullWidthSection extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    contentStyle: PropTypes.object,\n    contentType: PropTypes.string,\n    style: PropTypes.object,\n    useContent: PropTypes.bool,\n  }\n\n  static contextTypes = {\n    rbContext: React.PropTypes.object.isRequired,\n  }\n\n  static defaultProps = {\n    useContent: false,\n    contentType: 'div',\n  }\n\n  getStyles() {\n    return {\n      root: {\n        padding: desktopGutter,\n        boxSizing: 'border-box',\n      },\n      content: {\n        maxWidth: 1200,\n        margin: '0 auto',\n      },\n      rootWhenSmall: {\n        paddingTop: desktopGutter * 1,\n        paddingBottom: desktopGutter * 1,\n      },\n      rootWhenMedium: {\n        paddingTop: desktopGutter * 2,\n        paddingBottom: desktopGutter * 2,\n      },\n      rootWhenLarge: {\n        paddingTop: desktopGutter * 3,\n        paddingBottom: desktopGutter * 3,\n      },\n    }\n  }\n\n  render() {\n    const { style, useContent, contentType, contentStyle, ...other } = this.props\n\n    const muiSize = this.context.rbContext.viewportDimensions.get(this, 'muiSize')\n\n    const styles = this.getStyles()\n\n    let content\n    if (useContent)\n      content = React.createElement(\n        contentType,\n        { style: Object.assign(styles.content, contentStyle) },\n        this.props.children,\n      )\n    else content = this.props.children\n\n    return (\n      <ClearFix\n        {...other}\n        style={Object.assign(\n          styles.root,\n          style,\n          muiSize === SMALL && styles.rootWhenSmall,\n          muiSize === MEDIUM && styles.rootWhenMedium,\n          muiSize === LARGE && styles.rootWhenLarge,\n        )}\n      >\n        {content}\n      </ClearFix>\n    )\n  }\n}\n"]}