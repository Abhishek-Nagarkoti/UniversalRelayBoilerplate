{"version":3,"sources":["../../webapp/server.js"],"names":["require","load","assetsPath","process","env","NODE_ENV","host","HOST","app","use","req","res","next","get"],"mappings":";;AAEA,gC;;AAEA,4D;AACA;AACA,gD;AACA,sE;;;;AAIAA,QAAS,QAAT,EAAoBC,IAApB;;;;AAIA,GAAIC,kBAAJ;AACA,GAAIC,QAAQC,GAAR,CAAYC,QAAZ,EAAwB,YAA5B;AACEH,uCADF;AAEK;AACH,GAAMI,MAAOH,QAAQC,GAAR,CAAYG,IAAZ,EAAoB,IAAjC;AACAL,qBAAuBI,IAAvB;AACD;;;AAGD,GAAME,KAAM,uBAAZ;;;AAGAA,IAAIC,GAAJ,CAAS,SAAEC,GAAF,CAAOC,GAAP,CAAYC,IAAZ,QAAsB,+BAAkBF,GAAlB,CAAuBC,GAAvB,CAA4BC,IAA5B,6CAAtB,EAAT;;;AAGAJ,IAAIK,GAAJ,CAAS,IAAT,CAAe,SAAEH,GAAF,CAAOC,GAAP,CAAYC,IAAZ,CAAsB;AACnC,6BAAgBF,GAAhB,CAAqBC,GAArB,CAA0BC,IAA1B,CAAgCV,UAAhC;AACD,CAFD,E;;;AAKeM,G","file":"server.js","sourcesContent":["/* @flow */\n\nimport express from 'express'\n\nimport logServerRequest from '../server/logServerRequest'\nimport { version } from '../configuration/package'\nimport renderOnServer from './renderOnServer'\nimport { requestLoggerRenderOnServer } from '../configuration/server/requestLoggers'\n\n\n// Read environment\nrequire( 'dotenv' ).load()\n\n\n// Use relative URL for asset path\nlet assetsPath\nif( process.env.NODE_ENV == 'production' )\n  assetsPath = `/assets/${version}`\nelse {\n  const host = process.env.HOST || 4444\n  assetsPath = `http://${host}:8080/${version}`\n}\n\n// Create express router\nconst app = express()\n\n// Log requests for statically served files\napp.use( ( req, res, next ) => logServerRequest( req, res, next, requestLoggerRenderOnServer ) )\n\n// Serve HTML file, JavaScript bundle and other assets\napp.get( '/*', ( req, res, next ) => {\n  renderOnServer( req, res, next, assetsPath )\n} )\n\n\nexport default app\n"]}