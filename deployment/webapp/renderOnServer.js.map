{"version":3,"sources":["../../webapp/renderOnServer.js"],"names":["serveFailure","require","load","isoVars","JSON","stringify","httpError500FileName","resolve","__dirname","httpError404FileName","type","res","message","err","log","status","sendFile","req","next","assetsPath","siteInformation","process","env","NODE_ENV","isSiteBuilderDisabled","inEditingMode","configurationAsObject","version","host","HOST","port_webpack","PORT_WEBPACK","routes","location","originalUrl","error","redirectLocation","renderProps","redirect","pathname","search","reunderOnServerCorrectRequest","objectManager","setSiteInformation","then","codeFoundriesInjected","user","getOneObject","id","getViewerUserId","networkLayer","NetworkLayer","schema","rootValue","onError","errors","request","render","data","props","global","navigator","userAgent","headers","md","innerWidth","phone","tablet","window","isomorphicResponse","reactOutput","renderToString","helmet","rewind","preloadedData","replace","title","meta","link","backgroundColor","palette","backCanvas","viewportBackgroundColor","isomorphicVars","appData","prepareData","catch"],"mappings":"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","file":"renderOnServer.js","sourcesContent":["// @flow\n\nimport Helmet from 'react-helmet'\nimport IsomorphicRouter from 'isomorphic-relay-router'\nimport MobileDetect from 'mobile-detect'\nimport path from 'path'\nimport React from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport RelayLocalSchema from 'relay-local-schema'\nimport { match } from 'react-router'\n\nimport { getUserByCookie, serveAuthenticationFailed } from '../server/checkCredentials'\nimport isomorphicVars from '../configuration/webapp/scripts/isomorphicVars'\nimport { getSiteInformation } from '../configuration/webapp/siteSettings'\nimport log from '../server/log'\nimport ObjectManager from '../graphql/ObjectManager'\nimport muiTheme from '../configuration/webapp/muiTheme'\nimport routes from '../configuration/webapp/routes'\nimport schema from '../graphql/schema' // Schema for GraphQL server\nimport { version } from '../configuration/package'\nimport Wrapper from '../configuration/webapp/components/Wrapper'\n\n\n// Read environment\nrequire( 'dotenv' ).load()\n\n\n// Load up isomorphic vars here, for server rendering\nconst isoVars = JSON.stringify( isomorphicVars() )\n\n\nconst httpError500FileName = path.resolve( __dirname, '../configuration/server/httpError/500.html' )\nconst httpError404FileName = path.resolve( __dirname, '../configuration/server/httpError/404.html' )\n\n\nexport function serveFailure( type, res, message, err ) {\n  log.log( type, 'Server error: ' + message, err )\n  res.status( 500 ).sendFile( httpError500FileName )\n}\n\n\nexport default async( req, res, next ) => {\n\n  let assetsPath\n\n  const siteInformation = await getSiteInformation( req, res )\n  if( siteInformation ) {\n\n    if( process.env.NODE_ENV === 'production' ) {\n\n      assetsPath = ( siteInformation.isSiteBuilderDisabled || siteInformation.inEditingMode ) ?\n        // When editing in production, use the assets with the configuration readign code intact (built when cutting a site version)\n        `/assets/${version}` :\n        // When in production mode, serve the assets compiled by factory's publisher\n        `/assets-site/${version}.${siteInformation.configurationAsObject.version}`\n\n    } else {\n\n      // When in development, always go to webpack\n      const host = process.env.HOST\n      const port_webpack = process.env.PORT_WEBPACK\n      assetsPath = `http://${host}:${port_webpack}/${version}`\n    }\n\n    match( { routes, location: req.originalUrl }, ( error, redirectLocation, renderProps ) => {\n      if( error )\n        next( error )\n      else if( redirectLocation )\n        res.redirect( 302, redirectLocation.pathname + redirectLocation.search )\n      else if( renderProps )\n        reunderOnServerCorrectRequest( req, res, next, assetsPath, renderProps, siteInformation )\n      else\n        res.status( 404 ).sendFile( httpError404FileName )\n    } )\n  } // If siteInformation was null, an error response has already been given\n}\n\nfunction reunderOnServerCorrectRequest( req, res, next, assetsPath, renderProps, siteInformation ) {\n\n  // Create individual object manager for each request\n  const objectManager = new ObjectManager()\n\n  // Place site builder configuration into object manager\n  objectManager.setSiteInformation( siteInformation )\n\n  getUserByCookie( objectManager, req, res )\n    .then( () => {\n\n      // Inject request information in res\n      res.codeFoundriesInjected = { user: objectManager.getOneObject( 'User', { id: objectManager.getViewerUserId() } ) }\n    } )\n    .then( () => {\n\n      try {\n\n        const networkLayer = new RelayLocalSchema.NetworkLayer( {\n          schema,\n          rootValue: objectManager,\n          onError: ( errors, request ) => serveFailure( 'error', res, 'Local network layer GraphQL failure', { errors, request } )\n        } )\n\n        function render( { data, props } ) {\n          try {\n            // Setting up static, global navigator object to pass user agent to material-ui. Since the function is synchronous,\n            // it is OK to do so.\n            global.navigator = { userAgent: req.headers[ 'user-agent' ] }\n\n            // Also, set width to emulate phone, tablet or desktop\n            const md = new MobileDetect( req.headers[ 'user-agent' ] )\n\n            let innerWidth\n            if( md.phone() )\n              innerWidth = 700 // Will qualify as SMALL\n            else if( md.tablet() )\n              innerWidth = 900 // Will qualify as MEDIUM\n            else\n              innerWidth = 1100 // Will qualify as LARGE\n\n            // TODO x0100 This should be removed, won't work in multi-request situation anyway\n            global.window = { innerWidth: innerWidth }\n\n            // Also set global location for the leftNav\n            global.location = { pathname: req.originalUrl }\n\n            // Get the react output HTML\n            const isomorphicResponse = IsomorphicRouter.render( props )\n            const reactOutput = ReactDOMServer.renderToString(\n              <Wrapper\n                innerWidth={ innerWidth }\n              >\n                { isomorphicResponse }\n              </Wrapper>\n            )\n            const helmet = Helmet.rewind()\n\n            res.render( path.resolve( __dirname, 'renderOnServer.ejs' ), {\n              preloadedData: JSON.stringify( data ).replace( /\\//g, '\\\\/' ),\n              assetsPath: assetsPath,\n              reactOutput,\n              title: helmet.title,\n              meta: helmet.meta,\n              link: helmet.link,\n              backgroundColor: muiTheme.palette.backCanvas.viewportBackgroundColor,\n              isomorphicVars: isoVars,\n              configurationAsObject: JSON.stringify( siteInformation.inEditingMode || process.env.NODE_ENV == 'development' ? siteInformation.configurationAsObject : {\n\n                // TODO 0x0050 Mask configurationAsObject.serverData\n                appData: siteInformation.configurationAsObject.appData\n              } ),\n              NODE_ENV: process.env.NODE_ENV,\n            } )\n          } catch( err ) {\n            serveFailure( 'error', res, 'renderOnServer render funcion failed', err )\n          }\n        }\n\n        IsomorphicRouter.prepareData( renderProps, networkLayer ).then( render, next )\n      } catch( err ) {\n        serveFailure( 'error', res, 'renderOnServer failed', err )\n      }\n    } )\n    .catch( ( error ) => serveAuthenticationFailed( req, res, error, false ) )\n}\n"]}