{"version":3,"sources":["../../scripts/matchInDepth.js"],"names":["matchInDepth","payload","condition","ix","payloadValue","typeOfValue","conditionValue","typeOfCondition"],"mappings":";;AAEwBA,Y,CAAT,QAASA,aAAT,CAAsBC,OAAtB,CAA+BC,SAA/B,CAA0C;AACvD,IAAK,GAAIC,GAAT,GAAeD,UAAf,CAA0B;AACxB,GAAME,cAAeH,QAAQE,EAAR,CAArB;AACA,GAAME,aAAc,MAAOD,aAA3B;;AAEA,GAAME,gBAAiBJ,UAAUC,EAAV,CAAvB;AACA,GAAMI,iBAAkB,MAAOD,eAA/B;;AAEA,GAAID,cAAgBE,eAApB,CAAqC,MAAO,MAAP;;AAErC,GAAIA,kBAAoB,QAAxB,CAAkC;AAChC,GAAI,CAACP,aAAaI,YAAb,CAA2BE,cAA3B,CAAL,CAAiD,MAAO,MAAP;AAClD,CAFD,IAEO;AACL,GAAIF,cAAgBE,cAApB,CAAoC,MAAO,MAAP;AACrC;AACF;;AAED,MAAO,KAAP;AACD","file":"matchInDepth.js","sourcesContent":["// @flow\n\nexport default function matchInDepth(payload, condition) {\n  for (let ix in condition) {\n    const payloadValue = payload[ix]\n    const typeOfValue = typeof payloadValue\n\n    const conditionValue = condition[ix]\n    const typeOfCondition = typeof conditionValue\n\n    if (typeOfValue !== typeOfCondition) return false\n\n    if (typeOfCondition === 'object') {\n      if (!matchInDepth(payloadValue, conditionValue)) return false\n    } else {\n      if (payloadValue != conditionValue) return false\n    }\n  }\n\n  return true\n}\n"]}