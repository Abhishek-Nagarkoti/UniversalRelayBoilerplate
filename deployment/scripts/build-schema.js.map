{"version":3,"sources":["../../scripts/build-schema.js"],"names":["file_schema_json","join","__dirname","file_schema_graphql","createJson","result","errors","console","error","JSON","stringify","writeFileSync","log"],"mappings":"AAAA,sB;AACA,0B;AACA;AACA;;AAEA,yC;;AAEA,GAAIA,kBAAmB,eAAKC,IAAL,CAAUC,SAAV,CAAqB,sCAArB,CAAvB;AACA,GAAIC,qBAAsB,eAAKF,IAAL,CAAUC,SAAV,CAAqB,yCAArB,CAA1B;;;AAGA,QAAeE,WAAf;;AAEsB,oEAFtB,SAEMC,MAFN;AAGE,GAAIA,OAAOC,MAAX;AACA;AACEC,QAAQC,KAAR,CAAe,SAAf;AACAD,QAAQC,KAAR,CAAe,8BAAf,CAA+CC,KAAKC,SAAL,CAAeL,OAAOC,MAAtB,CAA8B,IAA9B,CAAoC,CAApC,CAA/C;AACD,CAJD;;AAMA;AACE,aAAGK,aAAH,CAAkBX,gBAAlB,CAAoCS,KAAKC,SAAL,CAAeL,MAAf,CAAuB,IAAvB,CAA6B,CAA7B,CAApC;AACAE,QAAQK,GAAR,CAAa,YAAcZ,gBAA3B;AACD,CAZH;;;;AAgBA,aAAGW,aAAH,CAAkBR,mBAAlB,CAAuC,4CAAvC;AACAI,QAAQK,GAAR,CAAa,YAAcT,mBAA3B;;AAEAC","file":"build-schema.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport { graphql } from 'graphql';\nimport { introspectionQuery, printSchema } from 'graphql/utilities';\n\nimport schema from '../graphql/schema';\n\nlet file_schema_json = path.join(__dirname, '../configuration/graphql/schema.json');\nlet file_schema_graphql = path.join(__dirname, '../configuration/graphql/schema.graphql');\n\n// Save JSON of full schema introspection for Babel Relay Plugin to use\nasync function createJson( )\n{\n  var result = await( graphql( schema, introspectionQuery ) );\n  if( result.errors )\n  {\n    console.error( 'ERROR! ' );\n    console.error( 'ERROR introspecting schema: ', JSON.stringify(result.errors, null, 2) );\n  }\n  else\n  {\n    fs.writeFileSync( file_schema_json, JSON.stringify(result, null, 2) );\n    console.log( 'Written: ' + file_schema_json );\n  }\n}\n\n// Save user readable type system shorthand of schema\nfs.writeFileSync( file_schema_graphql, printSchema( schema ) );\nconsole.log( 'Written: ' + file_schema_graphql );\n\ncreateJson( );\n"]}