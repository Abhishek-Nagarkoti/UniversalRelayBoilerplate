{"version":3,"sources":["../../scripts/build-units.js"],"names":["currentPackageJson","JSON","parse","readFileSync","packageJson","addToPackageJson","fileName","newPackageJson","scripts","betterScripts","dependencies","devDependencies","getPackages","directoryName","readdirSync","filter","statSync","unitName","isDirectory","packageJsonName","resolve","e","code","sortObject","object","t","Object","keys","sort","forEach","k","orderPackages","createPackageJson","version","name","console","log","writeFileSync","stringify","getMutations","mutationsImports","mutationsExports","mutationsDir","mutationName","endsWith","mutationNameNoJs","substring","length","push","createMutations","mutations","concat","join","getSchemas","schemasImports","schemasDir","replace","createSchemas","schemas","getViewerFields","viewerFieldsImports","viewerFieldsExports","viewerFieldsImportName","isFile","createViewerFields","viewerFields"],"mappings":";;AAEA,sB;AACA,0B;;AAEA,GAAMA,oBAAqBC,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAgB,gBAAhB,CAAX,CAA3B;AACA,GAAMC,aAAcH,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAgB,6BAAhB,CAAX,CAApB;;AAEA,QAASE,iBAAT,CAA0BC,QAA1B,CAAoC;AAClC,GAAMC,gBAAiBN,KAAKC,KAAL,CAAW,aAAGC,YAAH,CAAgBG,QAAhB,CAAX,CAAvB;;AAEA,GAAIC,eAAeC,OAAnB;AACE,SAAcJ,YAAYI,OAA1B,CAAmCD,eAAeC,OAAlD;;AAEF,GAAID,eAAeE,aAAnB;AACE,SAAcL,YAAYK,aAA1B,CAAyCF,eAAeE,aAAxD;;AAEF,GAAIF,eAAeG,YAAnB;AACE,SAAcN,YAAYM,YAA1B,CAAwCH,eAAeG,YAAvD;;AAEF,GAAIH,eAAeI,eAAnB;AACE,SAAcP,YAAYO,eAA1B,CAA2CJ,eAAeI,eAA1D;AACH;;AAED,QAASC,YAAT,CAAqBC,aAArB,CAA4C;AAC1C,aAAGC,WAAH,CAAeD,aAAf,EAA8BE,MAA9B,CAAqC,kBAAY;AAC/C,GAAI,aAAGC,QAAH,CAAYH,cAAgBI,QAA5B,EAAsCC,WAAtC,EAAJ,CAAyD;AACvD,GAAMC,iBAAkB,eAAKC,OAAL;AACtBP,aADsB;AAEtBI,QAFsB;AAGtB,mBAHsB,CAAxB;;AAKA,GAAI;AACFZ,iBAAiBc,eAAjB;AACD,CAAC,MAAOE,CAAP,CAAU;AACV,GAAIA,EAAEC,IAAF,GAAW,QAAf,CAAyB;AACvBV,YAAYC,cAAgBI,QAAhB,CAA2B,GAAvC;AACA,MAAO,MAAP;AACD,CAHD,IAGO,MAAMI,EAAN;AACR;AACF;AACF,CAhBD;AAiBD;;AAED,QAASE,WAAT,CAAoBC,MAApB,CAAoC;AAClC,GAAIC,GAAI,EAAR;AACAC,OAAOC,IAAP,CAAYH,MAAZ,EAAoBI,IAApB,GAA2BC,OAA3B,CAAmC,SAASC,CAAT,CAAY;AAC7CL,EAAEK,CAAF,EAAON,OAAOM,CAAP,CAAP;AACD,CAFD;AAGA,MAAOL,EAAP;AACD;;AAED,QAASM,cAAT,EAAyB;AACvB3B,YAAYI,OAAZ,CAAsBe,WAAWnB,YAAYI,OAAvB,CAAtB;AACAJ,YAAYK,aAAZ,CAA4Bc,WAAWnB,YAAYK,aAAvB,CAA5B;AACAL,YAAYM,YAAZ,CAA2Ba,WAAWnB,YAAYM,YAAvB,CAA3B;AACAN,YAAYO,eAAZ,CAA8BY,WAAWnB,YAAYO,eAAvB,CAA9B;AACD;;AAED,QAASqB,kBAAT,EAA6B;;AAE3B5B,YAAY6B,OAAZ,CAAsBjC,mBAAmBiC,OAAzC;AACA7B,YAAY8B,IAAZ,CAAmBlC,mBAAmBkC,IAAtC;;AAEAtB,YAAY,QAAZ;AACAmB;;AAEAI,QAAQC,GAAR,CAAY,YAAc,eAAKhB,OAAL,CAAa,gBAAb,CAA1B;AACA,aAAGiB,aAAH;AACE,gBADF;AAEEpC,KAAKqC,SAAL,CAAelC,WAAf,CAA4B,IAA5B,CAAkC,CAAlC,CAFF;AAGE,MAHF;;AAKD;;AAED,QAASmC,aAAT;AACE1B,aADF;AAEE2B,gBAFF;AAGEC,gBAHF;AAIE;AACA,aAAG3B,WAAH,CAAeD,aAAf,EAA8BE,MAA9B,CAAqC,kBAAY;AAC/C,GAAI,aAAGC,QAAH,CAAYH,cAAgBI,QAA5B,EAAsCC,WAAtC,EAAJ,CAAyD;AACvD,GAAMwB,cAAe,eAAKtB,OAAL;AACnBP,aADmB;AAEnBI,QAFmB;AAGnB,kBAHmB,CAArB;;AAKA,GAAI;AACF,aAAGH,WAAH,CAAe4B,YAAf,EAA6B3B,MAA7B,CAAoC,sBAAgB;AAClD,GAAI4B,aAAaC,QAAb,CAAsB,KAAtB,CAAJ,CAAkC;AAChC,GAAMC,kBAAmBF,aAAaG,SAAb;AACvB,CADuB;AAEvBH,aAAaI,MAAb,CAAsB,CAFC,CAAzB;;AAIAP,iBAAiBQ,IAAjB;AACE;AACEH,gBADF;AAEE,eAFF;AAGEhC,aAHF;AAIEI,QAJF;AAKE,oBALF;AAME4B,gBANF;AAOE,GARJ;;AAUAJ,iBAAiBO,IAAjB,CAAsB,KAAOH,gBAAP,CAA0B,GAAhD;AACD;AACF,CAlBD;AAmBD,CAAC,MAAOxB,CAAP,CAAU;AACV,GAAIA,EAAEC,IAAF,GAAW,QAAf,CAAyB;AACvBiB;AACE1B,cAAgBI,QAAhB,CAA2B,GAD7B;AAEEuB,gBAFF;AAGEC,gBAHF;;AAKA,MAAO,MAAP;AACD,CAPD,IAOO,MAAMpB,EAAN;AACR;AACF;AACF,CAtCD;AAuCD;;AAED,QAAS4B,gBAAT,EAA2B;AACzB,GAAMT,kBAAmB,EAAzB;AACA,GAAMC,kBAAmB,EAAzB;;AAEAF,aAAa,QAAb,CAAuBC,gBAAvB,CAAyCC,gBAAzC;;AAEA,GAAIS,WAAY,CAAC,UAAD,CAAa,EAAb,CAAhB;AACAA,UAAYA,UAAUC,MAAV,CAAiBX,gBAAjB,CAAZ;AACAU,UAAYA,UAAUC,MAAV,CAAiB,CAAC,EAAD,CAAK,kBAAL,CAAjB,CAAZ;AACAD,UAAYA,UAAUC,MAAV,CAAiBV,gBAAjB,CAAZ;AACAS,UAAYA,UAAUC,MAAV,CAAiB,CAAC,GAAD,CAAjB,CAAZ;;AAEAhB,QAAQC,GAAR;AACE,YAAc,eAAKhB,OAAL,CAAa,uCAAb,CADhB;;AAGA,aAAGiB,aAAH;AACE,uCADF;AAEEa,UAAUE,IAAV,CAAe,MAAf,CAFF;AAGE,MAHF;;AAKD;;AAED,QAASC,WAAT,CAAoBxC,aAApB,CAA2CyC,cAA3C,CAAkE;AAChE,aAAGxC,WAAH,CAAeD,aAAf,EAA8BE,MAA9B,CAAqC,kBAAY;AAC/C,GAAI,aAAGC,QAAH,CAAYH,cAAgBI,QAA5B,EAAsCC,WAAtC,EAAJ,CAAyD;AACvD,GAAMqC,YAAa,eAAKnC,OAAL,CAAaP,aAAb,CAA4BI,QAA5B,CAAsC,eAAtC,CAAnB;AACA,GAAI;AACF,aAAGH,WAAH,CAAeyC,UAAf,EAA2BxC,MAA3B,CAAkC,sBAAgB;AAChD,GAAI4B,aAAaC,QAAb,CAAsB,KAAtB,CAAJ,CAAkC;AAChC,GAAMC,kBAAmBF,aAAaG,SAAb;AACvB,CADuB;AAEvBH,aAAaI,MAAb,CAAsB,CAFC,CAAzB;;AAIAO,eAAeN,IAAf;AACE;AACEH,iBAAiBW,OAAjB,CAAyB,GAAzB,CAA8B,GAA9B,CADF;AAEE,eAFF;AAGE3C,aAHF;AAIEI,QAJF;AAKE,iBALF;AAME4B,gBANF;AAOE,GARJ;;AAUD;AACF,CAjBD;AAkBD,CAAC,MAAOxB,CAAP,CAAU;AACV,GAAIA,EAAEC,IAAF,GAAW,QAAf,CAAyB;AACvB+B,WAAWxC,cAAgBI,QAAhB,CAA2B,GAAtC,CAA2CqC,cAA3C;AACA,MAAO,MAAP;AACD,CAHD,IAGO,MAAMjC,EAAN;AACR;AACF;AACF,CA7BD;AA8BD;;AAED,QAASoC,cAAT,EAAyB;AACvB,GAAMH,gBAAiB,EAAvB;;AAEAD,WAAW,QAAX,CAAqBC,cAArB;;AAEA,GAAII,SAAU,CAAC,UAAD,CAAa,gCAAb,CAA+C,EAA/C,CAAd;AACAA,QAAUA,QAAQP,MAAR,CAAeG,cAAf,CAAV;AACAI,QAAUA,QAAQP,MAAR,CAAe,CAAC,EAAD,CAAK,qBAAL,CAAf,CAAV;;AAEAhB,QAAQC,GAAR,CAAY,YAAc,eAAKhB,OAAL,CAAa,qCAAb,CAA1B;AACA,aAAGiB,aAAH;AACE,qCADF;AAEEqB,QAAQN,IAAR,CAAa,MAAb,CAFF;AAGE,MAHF;;AAKD;;AAED,QAASO,gBAAT;AACE9C,aADF;AAEE+C,mBAFF;AAGEC,mBAHF;AAIE;AACA,aAAG/C,WAAH,CAAeD,aAAf,EAA8BE,MAA9B,CAAqC,kBAAY;AAC/C,GAAI,aAAGC,QAAH,CAAYH,cAAgBI,QAA5B,EAAsCC,WAAtC,EAAJ,CAAyD;AACvD,GAAI;AACF,GAAM4C,wBAAyB7C,SAASuC,OAAT,CAAiB,IAAjB,CAAuB,GAAvB,CAA/B;AACA;AACE;AACGxC,QADH;AAEIH,cAAgBI,QAAhB,CAA2B,gCAF/B;;AAIG8C,MAJH,EADF;AAME;AACAH,oBAAoBZ,IAApB;AACE;AACEc,sBADF;AAEE,eAFF;AAGEjD,aAHF;AAIEI,QAJF;AAKE,8BANJ;;AAQA4C,oBAAoBb,IAApB,CAAyB,QAAUc,sBAAV,CAAmC,GAA5D;AACD;AACF,CAAC,MAAOzC,CAAP,CAAU;AACV,GAAIA,EAAEC,IAAF,GAAW,QAAf,CAAyB;AACvBqC;AACE9C,cAAgBI,QAAhB,CAA2B,GAD7B;AAEE2C,mBAFF;AAGEC,mBAHF;;AAKA,MAAO,MAAP;AACD,CAPD,IAOO,MAAMxC,EAAN;AACR;AACF;AACF,CAhCD;AAiCD;;AAED,QAAS2C,mBAAT,EAA8B;AAC5B,GAAMJ,qBAAsB,EAA5B;AACA,GAAMC,qBAAsB,EAA5B;;AAEAF,gBAAgB,QAAhB,CAA0BC,mBAA1B,CAA+CC,mBAA/C;;AAEA,GAAII,cAAe,CAAC,UAAD,CAAa,EAAb,CAAnB;AACAA,aAAeA,aAAad,MAAb,CAAoBS,mBAApB,CAAf;AACAK,aAAeA,aAAad,MAAb,CAAoB,CAAC,EAAD,CAAK,kBAAL,CAApB,CAAf;AACAc,aAAeA,aAAad,MAAb,CAAoBU,mBAApB,CAAf;AACAI,aAAeA,aAAad,MAAb,CAAoB,CAAC,GAAD,CAApB,CAAf;;AAEAhB,QAAQC,GAAR;AACE,YAAc,eAAKhB,OAAL,CAAa,0CAAb,CADhB;;AAGA,aAAGiB,aAAH;AACE,0CADF;AAEE4B,aAAab,IAAb,CAAkB,MAAlB,CAFF;AAGE,MAHF;;AAKD;;AAEDpB;AACAiB;AACAQ;AACAO","file":"build-units.js","sourcesContent":["// @flow\n\nimport fs from \"fs\"\nimport path from \"path\"\n\nconst currentPackageJson = JSON.parse(fs.readFileSync(\"./package.json\"))\nconst packageJson = JSON.parse(fs.readFileSync(\"./scripts/package.part.json\"))\n\nfunction addToPackageJson(fileName) {\n  const newPackageJson = JSON.parse(fs.readFileSync(fileName))\n\n  if (newPackageJson.scripts)\n    Object.assign(packageJson.scripts, newPackageJson.scripts)\n\n  if (newPackageJson.betterScripts)\n    Object.assign(packageJson.betterScripts, newPackageJson.betterScripts)\n\n  if (newPackageJson.dependencies)\n    Object.assign(packageJson.dependencies, newPackageJson.dependencies)\n\n  if (newPackageJson.devDependencies)\n    Object.assign(packageJson.devDependencies, newPackageJson.devDependencies)\n}\n\nfunction getPackages(directoryName: String) {\n  fs.readdirSync(directoryName).filter(unitName => {\n    if (fs.statSync(directoryName + unitName).isDirectory()) {\n      const packageJsonName = path.resolve(\n        directoryName,\n        unitName,\n        \"package.part.json\",\n      )\n      try {\n        addToPackageJson(packageJsonName)\n      } catch (e) {\n        if (e.code === \"ENOENT\") {\n          getPackages(directoryName + unitName + \"/\")\n          return false\n        } else throw e\n      }\n    }\n  })\n}\n\nfunction sortObject(object: Object) {\n  var t = {}\n  Object.keys(object).sort().forEach(function(k) {\n    t[k] = object[k]\n  })\n  return t\n}\n\nfunction orderPackages() {\n  packageJson.scripts = sortObject(packageJson.scripts)\n  packageJson.betterScripts = sortObject(packageJson.betterScripts)\n  packageJson.dependencies = sortObject(packageJson.dependencies)\n  packageJson.devDependencies = sortObject(packageJson.devDependencies)\n}\n\nfunction createPackageJson() {\n  // Make sure not to overwrite version information\n  packageJson.version = currentPackageJson.version\n  packageJson.name = currentPackageJson.name\n\n  getPackages(\"units/\")\n  orderPackages()\n\n  console.log(\"Written: \" + path.resolve(\"./package.json\"))\n  fs.writeFileSync(\n    \"./package.json\",\n    JSON.stringify(packageJson, null, 2),\n    \"utf8\",\n  )\n}\n\nfunction getMutations(\n  directoryName: String,\n  mutationsImports: Array,\n  mutationsExports: Array,\n) {\n  fs.readdirSync(directoryName).filter(unitName => {\n    if (fs.statSync(directoryName + unitName).isDirectory()) {\n      const mutationsDir = path.resolve(\n        directoryName,\n        unitName,\n        \"graphql/mutation\",\n      )\n      try {\n        fs.readdirSync(mutationsDir).filter(mutationName => {\n          if (mutationName.endsWith(\".js\")) {\n            const mutationNameNoJs = mutationName.substring(\n              0,\n              mutationName.length - 3,\n            )\n            mutationsImports.push(\n              \"import \" +\n                mutationNameNoJs +\n                \" from '../../\" +\n                directoryName +\n                unitName +\n                \"/graphql/mutation/\" +\n                mutationNameNoJs +\n                \"'\",\n            )\n            mutationsExports.push(\"  \" + mutationNameNoJs + \",\")\n          }\n        })\n      } catch (e) {\n        if (e.code === \"ENOENT\") {\n          getMutations(\n            directoryName + unitName + \"/\",\n            mutationsImports,\n            mutationsExports,\n          )\n          return false\n        } else throw e\n      }\n    }\n  })\n}\n\nfunction createMutations() {\n  const mutationsImports = []\n  const mutationsExports = []\n\n  getMutations(\"units/\", mutationsImports, mutationsExports)\n\n  let mutations = [\"// @flow\", \"\"]\n  mutations = mutations.concat(mutationsImports)\n  mutations = mutations.concat([\"\", \"export default {\"])\n  mutations = mutations.concat(mutationsExports)\n  mutations = mutations.concat([\"}\"])\n\n  console.log(\n    \"Written: \" + path.resolve(\"./configuration/graphql/_mutations.js\"),\n  )\n  fs.writeFileSync(\n    \"./configuration/graphql/_mutations.js\",\n    mutations.join(\"\\r\\n\"),\n    \"utf8\",\n  )\n}\n\nfunction getSchemas(directoryName: String, schemasImports: Array) {\n  fs.readdirSync(directoryName).filter(unitName => {\n    if (fs.statSync(directoryName + unitName).isDirectory()) {\n      const schemasDir = path.resolve(directoryName, unitName, \"graphql/model\")\n      try {\n        fs.readdirSync(schemasDir).filter(mutationName => {\n          if (mutationName.endsWith(\".js\")) {\n            const mutationNameNoJs = mutationName.substring(\n              0,\n              mutationName.length - 3,\n            )\n            schemasImports.push(\n              \"import \" +\n                mutationNameNoJs.replace(\".\", \"_\") +\n                \" from '../../\" +\n                directoryName +\n                unitName +\n                \"/graphql/model/\" +\n                mutationNameNoJs +\n                \"'\",\n            )\n          }\n        })\n      } catch (e) {\n        if (e.code === \"ENOENT\") {\n          getSchemas(directoryName + unitName + \"/\", schemasImports)\n          return false\n        } else throw e\n      }\n    }\n  })\n}\n\nfunction createSchemas() {\n  const schemasImports = []\n\n  getSchemas(\"units/\", schemasImports)\n\n  let schemas = [\"// @flow\", \"/* eslint no-unused-vars: 0 */\", \"\"]\n  schemas = schemas.concat(schemasImports)\n  schemas = schemas.concat([\"\", \"export default true\"])\n\n  console.log(\"Written: \" + path.resolve(\"./configuration/graphql/_schemas.js\"))\n  fs.writeFileSync(\n    \"./configuration/graphql/_schemas.js\",\n    schemas.join(\"\\r\\n\"),\n    \"utf8\",\n  )\n}\n\nfunction getViewerFields(\n  directoryName: String,\n  viewerFieldsImports: Array,\n  viewerFieldsExports: Array,\n) {\n  fs.readdirSync(directoryName).filter(unitName => {\n    if (fs.statSync(directoryName + unitName).isDirectory()) {\n      try {\n        const viewerFieldsImportName = unitName.replace(/-/g, \"_\")\n        if (\n          fs\n            .statSync(\n              directoryName + unitName + \"/graphql/type/_ViewerFields.js\",\n            )\n            .isFile()\n        ) {\n          viewerFieldsImports.push(\n            \"import \" +\n              viewerFieldsImportName +\n              \" from '../../\" +\n              directoryName +\n              unitName +\n              \"/graphql/type/_ViewerFields'\",\n          )\n          viewerFieldsExports.push(\"  ...\" + viewerFieldsImportName + \",\")\n        }\n      } catch (e) {\n        if (e.code === \"ENOENT\") {\n          getViewerFields(\n            directoryName + unitName + \"/\",\n            viewerFieldsImports,\n            viewerFieldsExports,\n          )\n          return false\n        } else throw e\n      }\n    }\n  })\n}\n\nfunction createViewerFields() {\n  const viewerFieldsImports = []\n  const viewerFieldsExports = []\n\n  getViewerFields(\"units/\", viewerFieldsImports, viewerFieldsExports)\n\n  let viewerFields = [\"// @flow\", \"\"]\n  viewerFields = viewerFields.concat(viewerFieldsImports)\n  viewerFields = viewerFields.concat([\"\", \"export default {\"])\n  viewerFields = viewerFields.concat(viewerFieldsExports)\n  viewerFields = viewerFields.concat([\"}\"])\n\n  console.log(\n    \"Written: \" + path.resolve(\"./configuration/graphql/_ViewerFields.js\"),\n  )\n  fs.writeFileSync(\n    \"./configuration/graphql/_ViewerFields.js\",\n    viewerFields.join(\"\\r\\n\"),\n    \"utf8\",\n  )\n}\n\ncreatePackageJson()\ncreateMutations()\ncreateSchemas()\ncreateViewerFields()\n"]}