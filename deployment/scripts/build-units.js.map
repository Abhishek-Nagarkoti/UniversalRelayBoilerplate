{"version":3,"sources":["../../scripts/build-units.js"],"names":["currentPackageJson","JSON","parse","readFileSync","packageJson","addToPackageJson","fileName","newPackageJson","scripts","betterScripts","dependencies","devDependencies","getPackages","directoryName","readdirSync","filter","statSync","unitName","isDirectory","packageJsonName","resolve","e","code","sortObject","object","t","Object","keys","sort","forEach","k","orderPackages","createPackageJson","version","name","console","log","writeFileSync","stringify","getMutations","mutationsImports","mutationsExports","mutationsDir","mutationName","endsWith","mutationNameNoJs","substring","length","push","createMutations","mutations","concat","join","getSchemas","schemasImports","schemasDir","replace","createSchemas","schemas","getViewerFields","viewerFieldsImports","viewerFieldsExports","viewerFieldsImportName","isFile","createViewerFields","viewerFields"],"mappings":";;AAEA,sB;AACA,0B;;;AAGA,GAAMA,oBAAqBC,KAAKC,KAAL,CAAY,aAAGC,YAAH,CAAiB,gBAAjB,CAAZ,CAA3B;AACA,GAAMC,aAAcH,KAAKC,KAAL,CAAY,aAAGC,YAAH,CAAiB,6BAAjB,CAAZ,CAApB;;AAEA,QAASE,iBAAT,CAA2BC,QAA3B,CAAsC;AACpC,GAAMC,gBAAiBN,KAAKC,KAAL,CAAY,aAAGC,YAAH,CAAiBG,QAAjB,CAAZ,CAAvB;;AAEA,GAAIC,eAAeC,OAAnB;AACE,SAAeJ,YAAYI,OAA3B,CAAoCD,eAAeC,OAAnD;;AAEF,GAAID,eAAeE,aAAnB;AACE,SAAeL,YAAYK,aAA3B,CAA0CF,eAAeE,aAAzD;;AAEF,GAAIF,eAAeG,YAAnB;AACE,SAAeN,YAAYM,YAA3B,CAAyCH,eAAeG,YAAxD;;AAEF,GAAIH,eAAeI,eAAnB;AACE,SAAeP,YAAYO,eAA3B,CAA4CJ,eAAeI,eAA3D;AACH;;AAED,QAASC,YAAT,CAAsBC,aAAtB,CAA8C;AAC5C,aAAGC,WAAH,CAAgBD,aAAhB;AACGE,MADH,CACW,kBAAY;AACnB,GAAI,aAAGC,QAAH,CAAaH,cAAgBI,QAA7B;AACDC,WADC,EAAJ,CACmB;AACjB,GAAMC,iBAAkB,eAAKC,OAAL,CAAcP,aAAd,CAA6BI,QAA7B,CAAuC,mBAAvC,CAAxB;AACA,GAAI;AACFZ,iBAAkBc,eAAlB;AACD,CAAC,MAAOE,CAAP,CAAW;AACX,GAAIA,EAAEC,IAAF,GAAW,QAAf,CAA0B;AACxBV,YAAaC,cAAgBI,QAAhB,CAA2B,GAAxC;AACA,MAAO,MAAP;AACD,CAHD;AAIE,KAAMI,EAAN;AACH;AACF;AACF,CAfH;AAgBD;;AAED,QAASE,WAAT,CAAqBC,MAArB,CAAsC;AACpC,GAAIC,GAAI,EAAR;AACAC,OAAOC,IAAP,CAAaH,MAAb;AACGI,IADH;AAEGC,OAFH,CAEY,SAAWC,CAAX,CAAe;AACvBL,EAAGK,CAAH,EAASN,OAAQM,CAAR,CAAT;AACD,CAJH;AAKA,MAAOL,EAAP;AACD;;AAED,QAASM,cAAT,EAAyB;AACvB3B,YAAYI,OAAZ,CAAsBe,WAAYnB,YAAYI,OAAxB,CAAtB;AACAJ,YAAYK,aAAZ,CAA4Bc,WAAYnB,YAAYK,aAAxB,CAA5B;AACAL,YAAYM,YAAZ,CAA2Ba,WAAYnB,YAAYM,YAAxB,CAA3B;AACAN,YAAYO,eAAZ,CAA8BY,WAAYnB,YAAYO,eAAxB,CAA9B;AACD;;AAED,QAASqB,kBAAT,EAA6B;;AAE3B5B,YAAY6B,OAAZ,CAAsBjC,mBAAmBiC,OAAzC;AACA7B,YAAY8B,IAAZ,CAAmBlC,mBAAmBkC,IAAtC;;AAEAtB,YAAa,QAAb;AACAmB;;AAEAI,QAAQC,GAAR,CAAa,YAAc,eAAKhB,OAAL,CAAc,gBAAd,CAA3B;AACA,aAAGiB,aAAH,CAAkB,gBAAlB,CAAoCpC,KAAKqC,SAAL,CAAgBlC,WAAhB,CAA6B,IAA7B,CAAmC,CAAnC,CAApC,CAA4E,MAA5E;AACD;;AAED,QAASmC,aAAT,CAAuB1B,aAAvB,CAA8C2B,gBAA9C,CAAuEC,gBAAvE,CAAiG;AAC/F,aAAG3B,WAAH,CAAgBD,aAAhB;AACGE,MADH,CACW,kBAAY;AACnB,GAAI,aAAGC,QAAH,CAAaH,cAAgBI,QAA7B;AACDC,WADC,EAAJ,CACmB;AACjB,GAAMwB,cAAe,eAAKtB,OAAL,CAAcP,aAAd,CAA6BI,QAA7B,CAAuC,kBAAvC,CAArB;AACA,GAAI;AACF,aAAGH,WAAH,CAAgB4B,YAAhB;AACG3B,MADH,CACW,sBAAgB;AACvB,GAAI4B,aAAaC,QAAb,CAAuB,KAAvB,CAAJ,CAAqC;AACnC,GAAMC,kBAAmBF,aAAaG,SAAb,CAAwB,CAAxB,CAA2BH,aAAaI,MAAb,CAAsB,CAAjD,CAAzB;AACAP,iBAAiBQ,IAAjB,CAAuB,UAAYH,gBAAZ,CAA+B,eAA/B,CAAiDhC,aAAjD,CAAiEI,QAAjE,CAA4E,oBAA5E,CAAmG4B,gBAAnG,CAAsH,GAA7I;AACAJ,iBAAiBO,IAAjB,CAAuB,KAAOH,gBAAP,CAA0B,GAAjD;AACD;AACF,CAPH;AAQD,CAAC,MAAOxB,CAAP,CAAW;AACX,GAAIA,EAAEC,IAAF,GAAW,QAAf,CAA0B;AACxBiB,aAAc1B,cAAgBI,QAAhB,CAA2B,GAAzC,CAA8CuB,gBAA9C,CAAgEC,gBAAhE;AACA,MAAO,MAAP;AACD,CAHD;AAIE,KAAMpB,EAAN;AACH;AACF;AACF,CAtBH;AAuBD;;AAED,QAAS4B,gBAAT,EAA2B;AACzB,GAAMT,kBAAmB,EAAzB;AACA,GAAMC,kBAAmB,EAAzB;;AAEAF,aAAc,QAAd,CAAwBC,gBAAxB,CAA0CC,gBAA1C;;AAEA,GAAIS,WAAY;AACd,UADc;AAEd,EAFc,CAAhB;;AAIAA,UAAYA,UAAUC,MAAV,CAAkBX,gBAAlB,CAAZ;AACAU,UAAYA,UAAUC,MAAV,CAAkB;AAC5B,EAD4B;AAE5B,kBAF4B,CAAlB,CAAZ;;AAIAD,UAAYA,UAAUC,MAAV,CAAkBV,gBAAlB,CAAZ;AACAS,UAAYA,UAAUC,MAAV,CAAkB;AAC5B,GAD4B,CAAlB,CAAZ;;;AAIAhB,QAAQC,GAAR,CAAa,YAAc,eAAKhB,OAAL,CAAc,uCAAd,CAA3B;AACA,aAAGiB,aAAH,CAAkB,uCAAlB,CAA2Da,UAAUE,IAAV,CAAgB,MAAhB,CAA3D,CAAqF,MAArF;AACD;;AAED,QAASC,WAAT,CAAqBxC,aAArB,CAA4CyC,cAA5C,CAAoE;AAClE,aAAGxC,WAAH,CAAgBD,aAAhB;AACGE,MADH,CACW,kBAAY;AACnB,GAAI,aAAGC,QAAH,CAAaH,cAAgBI,QAA7B;AACDC,WADC,EAAJ,CACmB;AACjB,GAAMqC,YAAa,eAAKnC,OAAL,CAAcP,aAAd,CAA6BI,QAA7B,CAAuC,eAAvC,CAAnB;AACA,GAAI;AACF,aAAGH,WAAH,CAAgByC,UAAhB;AACGxC,MADH,CACW,sBAAgB;AACvB,GAAI4B,aAAaC,QAAb,CAAuB,KAAvB,CAAJ,CAAqC;AACnC,GAAMC,kBAAmBF,aAAaG,SAAb,CAAwB,CAAxB,CAA2BH,aAAaI,MAAb,CAAsB,CAAjD,CAAzB;AACAO,eAAeN,IAAf,CAAqB,UAAYH,iBAAiBW,OAAjB,CAA0B,GAA1B,CAA+B,GAA/B,CAAZ,CAAmD,eAAnD,CAAqE3C,aAArE,CAAqFI,QAArF,CAAgG,iBAAhG,CAAoH4B,gBAApH,CAAuI,GAA5J;AACD;AACF,CANH;AAOD,CAAC,MAAOxB,CAAP,CAAW;AACX,GAAIA,EAAEC,IAAF,GAAW,QAAf,CAA0B;AACxB+B,WAAYxC,cAAgBI,QAAhB,CAA2B,GAAvC,CAA4CqC,cAA5C;AACA,MAAO,MAAP;AACD,CAHD;AAIE,KAAMjC,EAAN;AACH;AACF;AACF,CArBH;AAsBD;;AAED,QAASoC,cAAT,EAAyB;AACvB,GAAMH,gBAAiB,EAAvB;;AAEAD,WAAY,QAAZ,CAAsBC,cAAtB;;AAEA,GAAII,SAAU;AACZ,UADY;AAEZ,gCAFY;AAGZ,EAHY,CAAd;;AAKAA,QAAUA,QAAQP,MAAR,CAAgBG,cAAhB,CAAV;AACAI,QAAUA,QAAQP,MAAR,CAAgB;AACxB,EADwB;AAExB,qBAFwB,CAAhB,CAAV;;;AAKAhB,QAAQC,GAAR,CAAa,YAAc,eAAKhB,OAAL,CAAc,qCAAd,CAA3B;AACA,aAAGiB,aAAH,CAAkB,qCAAlB,CAAyDqB,QAAQN,IAAR,CAAc,MAAd,CAAzD,CAAiF,MAAjF;AACD;;AAED,QAASO,gBAAT,CAA0B9C,aAA1B,CAAiD+C,mBAAjD,CAA6EC,mBAA7E,CAA0G;AACxG,aAAG/C,WAAH,CAAgBD,aAAhB;AACGE,MADH,CACW,kBAAY;AACnB,GAAI,aAAGC,QAAH,CAAaH,cAAgBI,QAA7B;AACDC,WADC,EAAJ,CACmB;AACjB,GAAI;AACF,GAAM4C,wBAAyB7C,SAASuC,OAAT,CAAkB,IAAlB,CAAwB,GAAxB,CAA/B;AACA,GAAI,aAAGxC,QAAH,CAAaH,cAAgBI,QAAhB,CAA2B,gCAAxC;AACD8C,MADC,EAAJ,CACc;AACZH,oBAAoBZ,IAApB,CAA0B,UAAYc,sBAAZ,CAAqC,eAArC,CAAuDjD,aAAvD,CAAuEI,QAAvE,CAAkF,8BAA5G;AACA4C,oBAAoBb,IAApB,CAA0B,QAAUc,sBAAV,CAAmC,GAA7D;AACD;AACF,CAAC,MAAOzC,CAAP,CAAW;AACX,GAAIA,EAAEC,IAAF,GAAW,QAAf,CAA0B;AACxBqC,gBAAiB9C,cAAgBI,QAAhB,CAA2B,GAA5C,CAAiD2C,mBAAjD,CAAsEC,mBAAtE;AACA,MAAO,MAAP;AACD,CAHD;AAIE,KAAMxC,EAAN;AACH;AACF;AACF,CAnBH;AAoBD;;AAED,QAAS2C,mBAAT,EAA8B;AAC5B,GAAMJ,qBAAsB,EAA5B;AACA,GAAMC,qBAAsB,EAA5B;;AAEAF,gBAAiB,QAAjB,CAA2BC,mBAA3B,CAAgDC,mBAAhD;;AAEA,GAAII,cAAe;AACjB,UADiB;AAEjB,EAFiB,CAAnB;;AAIAA,aAAeA,aAAad,MAAb,CAAqBS,mBAArB,CAAf;AACAK,aAAeA,aAAad,MAAb,CAAqB;AAClC,EADkC;AAElC,kBAFkC,CAArB,CAAf;;AAIAc,aAAeA,aAAad,MAAb,CAAqBU,mBAArB,CAAf;AACAI,aAAeA,aAAad,MAAb,CAAqB;AAClC,GADkC,CAArB,CAAf;;;AAIAhB,QAAQC,GAAR,CAAa,YAAc,eAAKhB,OAAL,CAAc,0CAAd,CAA3B;AACA,aAAGiB,aAAH,CAAkB,0CAAlB,CAA8D4B,aAAab,IAAb,CAAmB,MAAnB,CAA9D,CAA2F,MAA3F;AACD;;;AAGDpB;AACAiB;AACAQ;AACAO","file":"build-units.js","sourcesContent":["// @flow\n\nimport fs from 'fs'\nimport path from 'path'\n\n\nconst currentPackageJson = JSON.parse( fs.readFileSync( './package.json' ) )\nconst packageJson = JSON.parse( fs.readFileSync( './scripts/package.part.json' ) )\n\nfunction addToPackageJson( fileName ) {\n  const newPackageJson = JSON.parse( fs.readFileSync( fileName ) )\n\n  if( newPackageJson.scripts )\n    Object.assign( packageJson.scripts, newPackageJson.scripts )\n\n  if( newPackageJson.betterScripts )\n    Object.assign( packageJson.betterScripts, newPackageJson.betterScripts )\n\n  if( newPackageJson.dependencies )\n    Object.assign( packageJson.dependencies, newPackageJson.dependencies )\n\n  if( newPackageJson.devDependencies )\n    Object.assign( packageJson.devDependencies, newPackageJson.devDependencies )\n}\n\nfunction getPackages( directoryName: String ) {\n  fs.readdirSync( directoryName )\n    .filter( unitName => {\n      if( fs.statSync( directoryName + unitName )\n        .isDirectory() ) {\n        const packageJsonName = path.resolve( directoryName, unitName, 'package.part.json' )\n        try {\n          addToPackageJson( packageJsonName )\n        } catch( e ) {\n          if( e.code === 'ENOENT' ) {\n            getPackages( directoryName + unitName + \"/\" )\n            return false\n          } else\n            throw e\n        }\n      }\n    } )\n}\n\nfunction sortObject( object: Object ) {\n  var t = {}\n  Object.keys( object )\n    .sort()\n    .forEach( function ( k ) {\n      t[ k ] = object[ k ]\n    } )\n  return t\n}\n\nfunction orderPackages() {\n  packageJson.scripts = sortObject( packageJson.scripts )\n  packageJson.betterScripts = sortObject( packageJson.betterScripts )\n  packageJson.dependencies = sortObject( packageJson.dependencies )\n  packageJson.devDependencies = sortObject( packageJson.devDependencies )\n}\n\nfunction createPackageJson() {\n  // Make sure not to overwrite version information\n  packageJson.version = currentPackageJson.version\n  packageJson.name = currentPackageJson.name\n\n  getPackages( 'units/' )\n  orderPackages()\n\n  console.log( 'Written: ' + path.resolve( './package.json' ) )\n  fs.writeFileSync( './package.json', JSON.stringify( packageJson, null, 2 ), 'utf8' )\n}\n\nfunction getMutations( directoryName: String, mutationsImports: Array, mutationsExports: Array ) {\n  fs.readdirSync( directoryName )\n    .filter( unitName => {\n      if( fs.statSync( directoryName + unitName )\n        .isDirectory() ) {\n        const mutationsDir = path.resolve( directoryName, unitName, 'graphql/mutation' )\n        try {\n          fs.readdirSync( mutationsDir )\n            .filter( mutationName => {\n              if( mutationName.endsWith( '.js' ) ) {\n                const mutationNameNoJs = mutationName.substring( 0, mutationName.length - 3 )\n                mutationsImports.push( \"import \" + mutationNameNoJs + \" from '../../\" + directoryName + unitName + \"/graphql/mutation/\" + mutationNameNoJs + \"'\" )\n                mutationsExports.push( \"  \" + mutationNameNoJs + \",\" )\n              }\n            } )\n        } catch( e ) {\n          if( e.code === 'ENOENT' ) {\n            getMutations( directoryName + unitName + \"/\", mutationsImports, mutationsExports )\n            return false\n          } else\n            throw e\n        }\n      }\n    } )\n}\n\nfunction createMutations() {\n  const mutationsImports = []\n  const mutationsExports = []\n\n  getMutations( 'units/', mutationsImports, mutationsExports )\n\n  let mutations = [\n    '// @flow',\n    ''\n  ]\n  mutations = mutations.concat( mutationsImports )\n  mutations = mutations.concat( [\n    '',\n    'export default {'\n  ] )\n  mutations = mutations.concat( mutationsExports )\n  mutations = mutations.concat( [\n    '}'\n  ] )\n\n  console.log( 'Written: ' + path.resolve( './configuration/graphql/_mutations.js' ) )\n  fs.writeFileSync( './configuration/graphql/_mutations.js', mutations.join( '\\r\\n' ), 'utf8' )\n}\n\nfunction getSchemas( directoryName: String, schemasImports: Array ) {\n  fs.readdirSync( directoryName )\n    .filter( unitName => {\n      if( fs.statSync( directoryName + unitName )\n        .isDirectory() ) {\n        const schemasDir = path.resolve( directoryName, unitName, 'graphql/model' )\n        try {\n          fs.readdirSync( schemasDir )\n            .filter( mutationName => {\n              if( mutationName.endsWith( '.js' ) ) {\n                const mutationNameNoJs = mutationName.substring( 0, mutationName.length - 3 )\n                schemasImports.push( \"import \" + mutationNameNoJs.replace( '.', '_' ) + \" from '../../\" + directoryName + unitName + \"/graphql/model/\" + mutationNameNoJs + \"'\" )\n              }\n            } )\n        } catch( e ) {\n          if( e.code === 'ENOENT' ) {\n            getSchemas( directoryName + unitName + \"/\", schemasImports )\n            return false\n          } else\n            throw e\n        }\n      }\n    } )\n}\n\nfunction createSchemas() {\n  const schemasImports = []\n\n  getSchemas( 'units/', schemasImports )\n\n  let schemas = [\n    '// @flow',\n    '/* eslint no-unused-vars: 0 */',\n    ''\n  ]\n  schemas = schemas.concat( schemasImports )\n  schemas = schemas.concat( [\n    '',\n    'export default true'\n  ] )\n\n  console.log( 'Written: ' + path.resolve( './configuration/graphql/_schemas.js' ) )\n  fs.writeFileSync( './configuration/graphql/_schemas.js', schemas.join( '\\r\\n' ), 'utf8' )\n}\n\nfunction getViewerFields( directoryName: String, viewerFieldsImports: Array, viewerFieldsExports: Array ) {\n  fs.readdirSync( directoryName )\n    .filter( unitName => {\n      if( fs.statSync( directoryName + unitName )\n        .isDirectory() ) {\n        try {\n          const viewerFieldsImportName = unitName.replace( /-/g, '_' )\n          if( fs.statSync( directoryName + unitName + '/graphql/type/_ViewerFields.js' )\n            .isFile() ) {\n            viewerFieldsImports.push( \"import \" + viewerFieldsImportName + \" from '../../\" + directoryName + unitName + \"/graphql/type/_ViewerFields'\" )\n            viewerFieldsExports.push( \"  ...\" + viewerFieldsImportName + \",\" )\n          }\n        } catch( e ) {\n          if( e.code === 'ENOENT' ) {\n            getViewerFields( directoryName + unitName + \"/\", viewerFieldsImports, viewerFieldsExports )\n            return false\n          } else\n            throw e\n        }\n      }\n    } )\n}\n\nfunction createViewerFields() {\n  const viewerFieldsImports = []\n  const viewerFieldsExports = []\n\n  getViewerFields( 'units/', viewerFieldsImports, viewerFieldsExports )\n\n  let viewerFields = [\n    '// @flow',\n    ''\n  ]\n  viewerFields = viewerFields.concat( viewerFieldsImports )\n  viewerFields = viewerFields.concat( [\n    '',\n    'export default {'\n  ] )\n  viewerFields = viewerFields.concat( viewerFieldsExports )\n  viewerFields = viewerFields.concat( [\n    '}'\n  ] )\n\n  console.log( 'Written: ' + path.resolve( './configuration/graphql/_ViewerFields.js' ) )\n  fs.writeFileSync( './configuration/graphql/_ViewerFields.js', viewerFields.join( '\\r\\n' ), 'utf8' )\n}\n\n\ncreatePackageJson()\ncreateMutations()\ncreateSchemas()\ncreateViewerFields()\n"]}