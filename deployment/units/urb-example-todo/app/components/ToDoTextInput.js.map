{"version":3,"sources":["../../../../../units/urb-example-todo/app/components/ToDoTextInput.js"],"names":["ToDoTextInput","props","context","_commitChanges","bind","_handleBlur","_handleChangeText","_handleSubmitEditing","state","ToDo_Text","initialValue","newText","trim","onDelete","onCancel","onSave","_mounted","setState","commitOnBlur","autoFocus","clearButtonMode","placeholder","style","Component"],"mappings":";AACA,a;;AAEA,4B;AACA,yC;;AAEqBA,a;;;;;;;;;;;;;;;;;;;AAmBnB,uBAAaC,KAAb,CAAoBC,OAApB,CAA8B;;AAErBD,KAFqB,CAEdC,OAFc;AAG5B,MAAKC,cAAL,CAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBD,IAAjB,OAAnB;AACA,MAAKE,iBAAL,CAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,OAAzB;AACA,MAAKG,oBAAL,CAA4B,MAAKA,oBAAL,CAA0BH,IAA1B,OAA5B;;AAEA,MAAKI,KAAL,CAAa;AACXC,UAAW,MAAKR,KAAL,CAAWS,YAAX,EAA2B,EAD3B,CAAb,CAR4B;;AAW7B,C;;AAEgB;;AAEf,GAAIC,SAAU,KAAKH,KAAL,CAAWC,SAAX,CAAqBG,IAArB,EAAd;AACA,GAAI,KAAKX,KAAL,CAAWY,QAAX,EAAuBF,UAAY,EAAvC,CAA4C;AAC1C,KAAKV,KAAL,CAAWY,QAAX;AACD,CAFD,IAEO,IAAI,KAAKZ,KAAL,CAAWa,QAAX,EAAuBH,UAAY,KAAKV,KAAL,CAAWS,YAAlD,CAAiE;AACtE,KAAKT,KAAL,CAAWa,QAAX;AACD,CAFM,IAEA,IAAIH,UAAY,EAAhB,CAAqB;AAC1B,KAAKV,KAAL,CAAWc,MAAX,CAAmBJ,OAAnB;AACA,GAAI,KAAKK,QAAL,GAAkB,KAAtB,CAA8B;AAC5B,KAAKC,QAAL,CAAe,CAAER,UAAW,EAAb,CAAf;AACD;AACF;AACF,C;;AAEa;;AAEZ,GAAI,KAAKR,KAAL,CAAWiB,YAAf,CAA8B;AAC5B,KAAKf,cAAL;AACD;AACF,C;;AAEkBM,S,CAAY;;AAE7B,GAAI,KAAKO,QAAL,GAAkB,KAAtB,CAA8B;AAC5B,KAAKC,QAAL,CAAe,CAAER,UAAWA,SAAb,CAAf;AACD;AACF,C;;AAEsB;;AAErB,KAAKN,cAAL;AACD,C;;AAEsB;;AAErB,KAAKa,QAAL,CAAgB,KAAhB;AACD,C;;AAEQ;AACP;AACE;AACE,UAAW,KAAKf,KAAL,CAAWkB,SADxB;AAEE,gBAAiB,KAAKlB,KAAL,CAAWmB,eAF9B;AAGE,OAAQ,KAAKf,WAHf;AAIE,aAAc,KAAKC,iBAJrB;AAKE,gBAAiB,KAAKC,oBALxB;AAME,YAAa,KAAKN,KAAL,CAAWoB,WAN1B;AAOE,MAAO,KAAKpB,KAAL,CAAWqB,KAPpB;AAQE,sBAAsB,aARxB;AASE,MAAO,KAAKd,KAAL,CAAWC,SATpB,EADF;;;AAaD,C,2BArFwC,gBAAMc,S,kBAA5BvB,a","file":"ToDoTextInput.js","sourcesContent":["// @flow weak\n'use strict'\n\nimport React from 'react'\nimport { TextInput } from 'react-native'\n\nexport default class ToDoTextInput extends React.Component {\n\n  defaultProps: {\n    commitOnBlur: false,\n  }\n\n  propTypes: {\n    autoFocus: TextInput.propTypes.autoFocus,\n    clearButtonMode: TextInput.propTypes.clearButtonMode,\n    initialValue: React.PropTypes.string.isRequred,\n    commitOnBlur: React.PropTypes.bool.isRequired,\n    onCancel: React.PropTypes.func,\n    onDelete: React.PropTypes.func,\n    onSave: React.PropTypes.func.isRequired,\n    placeholder: TextInput.propTypes.placeholder,\n    style: TextInput.propTypes.style,\n    value: TextInput.propTypes.value,\n  }\n\n  constructor( props, context ) {\n\n    super( props, context )\n    this._commitChanges = this._commitChanges.bind( this )\n    this._handleBlur = this._handleBlur.bind( this )\n    this._handleChangeText = this._handleChangeText.bind( this )\n    this._handleSubmitEditing = this._handleSubmitEditing.bind( this )\n\n    this.state = {\n      ToDo_Text: this.props.initialValue || '',\n    }\n  }\n\n  _commitChanges() {\n\n    var newText = this.state.ToDo_Text.trim()\n    if( this.props.onDelete && newText === '' ) {\n      this.props.onDelete()\n    } else if( this.props.onCancel && newText === this.props.initialValue ) {\n      this.props.onCancel()\n    } else if( newText !== '' ) {\n      this.props.onSave( newText )\n      if( this._mounted !== false ) {\n        this.setState( { ToDo_Text: '' } )\n      }\n    }\n  }\n\n  _handleBlur() {\n\n    if( this.props.commitOnBlur ) {\n      this._commitChanges()\n    }\n  }\n\n  _handleChangeText( ToDo_Text ) {\n\n    if( this._mounted !== false ) {\n      this.setState( { ToDo_Text: ToDo_Text } )\n    }\n  }\n\n  _handleSubmitEditing() {\n\n    this._commitChanges()\n  }\n\n  componentWillUnmount() {\n\n    this._mounted = false\n  }\n\n  render() {\n    return(\n      <TextInput\n        autoFocus={this.props.autoFocus}\n        clearButtonMode={this.props.clearButtonMode}\n        onBlur={this._handleBlur}\n        onChangeText={this._handleChangeText}\n        onSubmitEditing={this._handleSubmitEditing}\n        placeholder={this.props.placeholder}\n        style={this.props.style}\n        underlineColorAndroid=\"transparent\"\n        value={this.state.ToDo_Text}\n      />\n    )\n  }\n}\n"]}