{"version":3,"sources":["../../../../../units/urb-example-todo/app/components/ToDoScreen.js"],"names":["ToDoScreen","props","context","_handleStatusChange","relay","setVariables","status","styles","container","actionList","variables","list","Viewer","footer","Component","createContainer","initialVariables","fragments","getFragment","create","alignItems","flexDirection","justifyContent","marginBottom","backgroundColor","flex","paddingTop","height","paddingHorizontal","borderTopColor","borderTopWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":";AACA,a;;AAEA,uC;AACA,4B;AACA;;AAEA,4C;AACA,oC;AACA,gD;;AAEMA,U;AACJ,oBAAYC,KAAZ,CAAmBC,OAAnB,CAA4B;AACpBD,KADoB,CACbC,OADa;;;AAI5BC,mBAJ4B,CAIN,gBAAU;AAC9B,MAAKF,KAAL,CAAWG,KAAX,CAAiBC,YAAjB,CAA8B,CAAEC,aAAF,CAA9B;AACD,CAN2B,cAE3B,C;;AAMQ;AACP;AACE,iDAAM,MAAOC,OAAOC,SAApB;AACE,iDAAM,MAAOD,OAAOE,UAApB;AACE;AACE,OAAQ,KAAKR,KAAL,CAAWG,KAAX,CAAiBM,SAAjB,CAA2BJ,MAA3B,GAAsC,KADhD;AAEE,QAAS,yBAAM,QAAKH,mBAAL,CAAyB,KAAzB,CAAN,EAFX,QADF;;;;AAOE;AACE,OAAQ,KAAKF,KAAL,CAAWG,KAAX,CAAiBM,SAAjB,CAA2BJ,MAA3B,GAAsC,QADhD;AAEE,QAAS,yBAAM,QAAKH,mBAAL,CAAyB,QAAzB,CAAN,EAFX,WAPF;;;;AAaE;AACE,OAAQ,KAAKF,KAAL,CAAWG,KAAX,CAAiBM,SAAjB,CAA2BJ,MAA3B,GAAsC,WADhD;AAEE,QAAS,yBAAM,QAAKH,mBAAL,CAAyB,WAAzB,CAAN,EAFX,cAbF,CADF;;;;;AAqBE;AACE,OAAQ,KAAKF,KAAL,CAAWG,KAAX,CAAiBM,SAAjB,CAA2BJ,MADrC;AAEE,MAAOC,OAAOI,IAFhB;AAGE,OAAQ,KAAKV,KAAL,CAAWW,MAHrB,EArBF;;AA0BE;AACE,OAAQ,KAAKX,KAAL,CAAWG,KAAX,CAAiBM,SAAjB,CAA2BJ,MADrC;AAEE,MAAOC,OAAOM,MAFhB;AAGE,OAAQ,KAAKZ,KAAL,CAAWW,MAHrB,EA1BF,CADF;;;;AAkCD,C,wBA5CsB,gBAAME,S;;;AA+ChB,qBAAMC,eAAN,CAAsBf,UAAtB,CAAkC;AAC/CgB,iBAAkB;AAChBV,OAAQ,KADQ,CAD6B;;AAI/CW,UAAW;AACTL,OAAQ;;;AAGF,mBAASM,WAAT,CAAqB,QAArB,CAA+B,CAAEZ,OAAQI,UAAUJ,MAApB,CAA/B,CAHE;AAIF,yBAAeY,WAAf,CAA2B,QAA3B,CAAqC,CAAEZ,OAAQI,UAAUJ,MAApB,CAArC,CAJE,GADC,CAJoC,CAAlC,C;;;;;;AAef,GAAMC,QAAS,wBAAWY,MAAX,CAAkB;AAC/BV,WAAY;AACVW,WAAY,QADF;AAEVC,cAAe,KAFL;AAGVC,eAAgB,QAHN;AAIVC,aAAc,EAJJ,CADmB;;AAO/Bf,UAAW;AACTgB,gBAAiB,SADR;AAETC,KAAM,CAFG;;AAITC,WAAY,EAJH,CAPoB;;AAa/Bb,OAAQ;AACNc,OAAQ,EADF;AAENC,kBAAmB,EAFb,CAbuB;;AAiB/BjB,KAAM;AACJkB,eAAgB,iBADZ;AAEJC,eAAgB,CAFZ;AAGJL,KAAM,CAHF;AAIJM,YAAa,OAJT;AAKJC,aAAc;AACZL,OAAQ,CAAC,CADG,CALV;;AAQJM,cAAe,IARX;AASJC,aAAc,CATV,CAjByB,CAAlB,CAAf","file":"ToDoScreen.js","sourcesContent":["// @flow\n'use strict'\n\nimport Relay from 'react-relay'\nimport React from 'react'\nimport { Platform, StyleSheet, View } from 'react-native'\n\nimport StatusButton from './StatusButton'\nimport ToDoList from './ToDoList'\nimport ToDoListFooter from './ToDoListFooter'\n\nclass ToDoScreen extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n  }\n\n  _handleStatusChange = status => {\n    this.props.relay.setVariables({ status })\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.actionList}>\n          <StatusButton\n            active={this.props.relay.variables.status === 'any'}\n            onPress={() => this._handleStatusChange('any')}\n          >\n            All\n          </StatusButton>\n          <StatusButton\n            active={this.props.relay.variables.status === 'active'}\n            onPress={() => this._handleStatusChange('active')}\n          >\n            Active\n          </StatusButton>\n          <StatusButton\n            active={this.props.relay.variables.status === 'completed'}\n            onPress={() => this._handleStatusChange('completed')}\n          >\n            Completed\n          </StatusButton>\n        </View>\n        <ToDoList\n          status={this.props.relay.variables.status}\n          style={styles.list}\n          Viewer={this.props.Viewer}\n        />\n        <ToDoListFooter\n          status={this.props.relay.variables.status}\n          style={styles.footer}\n          Viewer={this.props.Viewer}\n        />\n      </View>\n    )\n  }\n}\n\nexport default Relay.createContainer(ToDoScreen, {\n  initialVariables: {\n    status: 'any',\n  },\n  fragments: {\n    Viewer: variables => Relay.QL`\n      fragment on Viewer {\n        ToDo_TotalCount\n        ${ToDoList.getFragment('Viewer', { status: variables.status })}\n        ${ToDoListFooter.getFragment('Viewer', { status: variables.status })}\n      }\n    `,\n  },\n})\n\nconst styles = StyleSheet.create({\n  actionList: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  container: {\n    backgroundColor: '#F5F5F5',\n    flex: 1,\n    //paddingTop: Platform.OS === 'android' ? undefined : 20,\n    paddingTop: 84, // TODO x3000 Read nav bar height from context\n  },\n  footer: {\n    height: 10,\n    paddingHorizontal: 15,\n  },\n  list: {\n    borderTopColor: 'rgba(0,0,0,0.1)',\n    borderTopWidth: 1,\n    flex: 1,\n    shadowColor: 'black',\n    shadowOffset: {\n      height: -2,\n    },\n    shadowOpacity: 0.03,\n    shadowRadius: 1,\n  },\n})\n"]}