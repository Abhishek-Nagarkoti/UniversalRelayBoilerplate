{"version":3,"sources":["../../../../../units/urb-example-todo/app/components/ToDoScreen.js"],"names":["ToDoScreen","props","context","_handleStatusChange","status","relay","setVariables","styles","container","actionList","variables","list","Viewer","footer","Component","createContainer","initialVariables","fragments","getFragment","create","alignItems","flexDirection","justifyContent","marginBottom","backgroundColor","flex","paddingTop","height","paddingHorizontal","borderTopColor","borderTopWidth","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":";AACA,a;;AAEA,uC;AACA,4B;AACA;;AAEA,4C;AACA,oC;AACA,gD;;;AAGMA,U;;AAEJ,oBAAaC,KAAb,CAAoBC,OAApB,CAA8B;AACrBD,KADqB,CACdC,OADc;;;AAI9BC,mBAJ8B,CAIR,SAAEC,MAAF,CAAc;;AAElC,MAAKH,KAAL,CAAWI,KAAX,CAAiBC,YAAjB,CAA+B,CAAEF,aAAF,CAA/B;AACD,CAP6B,cAE7B,C;;AAOQ;;AAEP;AACE,iDAAM,MAAOG,OAAOC,SAApB;AACI,iDAAM,MAAOD,OAAOE,UAApB;AACA;AACE,OAAQ,KAAKR,KAAL,CAAWI,KAAX,CAAiBK,SAAjB,CAA2BN,MAA3B,GAAsC,KADhD;AAEE,QAAU,yBAAO,QAAKD,mBAAL,CAA0B,KAA1B,CAAP,EAFZ,QADA;;;AAMA;AACE,OAAQ,KAAKF,KAAL,CAAWI,KAAX,CAAiBK,SAAjB,CAA2BN,MAA3B,GAAsC,QADhD;AAEE,QAAU,yBAAO,QAAKD,mBAAL,CAA0B,QAA1B,CAAP,EAFZ,WANA;;;AAWA;AACE,OAAQ,KAAKF,KAAL,CAAWI,KAAX,CAAiBK,SAAjB,CAA2BN,MAA3B,GAAsC,WADhD;AAEE,QAAU,yBAAO,QAAKD,mBAAL,CAA0B,WAA1B,CAAP,EAFZ,cAXA,CADJ;;;;AAkBE;AACE,OAAQ,KAAKF,KAAL,CAAWI,KAAX,CAAiBK,SAAjB,CAA2BN,MADrC;AAEE,MAAOG,OAAOI,IAFhB;AAGE,OAAQ,KAAKV,KAAL,CAAWW,MAHrB,EAlBF;;AAuBE;AACE,OAAQ,KAAKX,KAAL,CAAWI,KAAX,CAAiBK,SAAjB,CAA2BN,MADrC;AAEE,MAAOG,OAAOM,MAFhB;AAGE,OAAQ,KAAKZ,KAAL,CAAWW,MAHrB,EAvBF,CADF;;;;AA+BD,C,wBA5CsB,gBAAME,S;;;AA+ChB,qBAAMC,eAAN,CAAuBf,UAAvB,CAAmC;AAChDgB,iBAAkB;AAChBZ,OAAQ,KADQ,CAD8B;;AAIhDa,UAAW;AACTL,OAAQ;;;AAGF,mBAASM,WAAT,CAAqB,QAArB,CAA+B,CAACd,OAAQM,UAAUN,MAAnB,CAA/B,CAHE;AAIF,yBAAec,WAAf,CAA2B,QAA3B,CAAqC,CAACd,OAAQM,UAAUN,MAAnB,CAArC,CAJE,GADC,CAJqC,CAAnC,C;;;;;;AAef,GAAMG,QAAS,wBAAWY,MAAX,CAAmB;AAChCV,WAAY;AACVW,WAAY,QADF;AAEVC,cAAe,KAFL;AAGVC,eAAgB,QAHN;AAIVC,aAAc,EAJJ,CADoB;;AAOhCf,UAAW;AACTgB,gBAAiB,SADR;AAETC,KAAM,CAFG;;AAITC,WAAY,EAJH,CAPqB;;AAahCb,OAAQ;AACNc,OAAQ,EADF;AAENC,kBAAmB,EAFb,CAbwB;;AAiBhCjB,KAAM;AACJkB,eAAgB,iBADZ;AAEJC,eAAgB,CAFZ;AAGJL,KAAM,CAHF;AAIJM,YAAa,OAJT;AAKJC,aAAc;AACZL,OAAQ,CAAC,CADG,CALV;;AAQJM,cAAe,IARX;AASJC,aAAc,CATV,CAjB0B,CAAnB,CAAf","file":"ToDoScreen.js","sourcesContent":["// @flow weak\n'use strict'\n\nimport Relay from 'react-relay'\nimport React from 'react'\nimport { Platform, StyleSheet, View, } from 'react-native'\n\nimport StatusButton from './StatusButton'\nimport ToDoList from './ToDoList'\nimport ToDoListFooter from './ToDoListFooter'\n\n\nclass ToDoScreen extends React.Component {\n\n  constructor( props, context ) {\n    super( props, context )\n  }\n\n  _handleStatusChange = ( status ) => {\n\n    this.props.relay.setVariables( { status } )\n  }\n\n  render() {\n\n    return(\n      <View style={styles.container}>\n          <View style={styles.actionList}>\n          <StatusButton\n            active={this.props.relay.variables.status === 'any'}\n            onPress={ ( ) => this._handleStatusChange( 'any' ) }>\n            All\n          </StatusButton>\n          <StatusButton\n            active={this.props.relay.variables.status === 'active'}\n            onPress={ ( ) => this._handleStatusChange( 'active' ) }>\n            Active\n          </StatusButton>\n          <StatusButton\n            active={this.props.relay.variables.status === 'completed'}\n            onPress={ ( ) => this._handleStatusChange( 'completed' ) }>\n            Completed\n          </StatusButton>\n        </View>\n        <ToDoList\n          status={this.props.relay.variables.status}\n          style={styles.list}\n          Viewer={this.props.Viewer}\n        />\n        <ToDoListFooter\n          status={this.props.relay.variables.status}\n          style={styles.footer}\n          Viewer={this.props.Viewer}\n        />\n      </View>\n    )\n  }\n}\n\nexport default Relay.createContainer( ToDoScreen, {\n  initialVariables: {\n    status: 'any',\n  },\n  fragments: {\n    Viewer: variables => Relay.QL `\n      fragment on Viewer {\n        ToDo_TotalCount\n        ${ToDoList.getFragment('Viewer', {status: variables.status})}\n        ${ToDoListFooter.getFragment('Viewer', {status: variables.status})}\n      }\n    `,\n  },\n} )\n\nconst styles = StyleSheet.create( {\n  actionList: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  container: {\n    backgroundColor: '#F5F5F5',\n    flex: 1,\n    //paddingTop: Platform.OS === 'android' ? undefined : 20,\n    paddingTop: 84 // TODO x3000 Read nav bar height from context\n  },\n  footer: {\n    height: 10,\n    paddingHorizontal: 15,\n  },\n  list: {\n    borderTopColor: 'rgba(0,0,0,0.1)',\n    borderTopWidth: 1,\n    flex: 1,\n    shadowColor: 'black',\n    shadowOffset: {\n      height: -2,\n    },\n    shadowOpacity: 0.03,\n    shadowRadius: 1,\n  },\n} )\n"]}