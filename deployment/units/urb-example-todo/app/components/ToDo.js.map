{"version":3,"sources":["../../../../../units/urb-example-todo/app/components/ToDo.js"],"names":["ToDo","props","context","state","isEditing","_handleCompletePress","bind","_handleLabelPress","_handleTextInputCancel","_handleTextInputDelete","_handleTextInputSave","_setEditMode","ToDo_Complete","relay","commitUpdate","Viewer","onDestroy","ToDo_Text","shouldEdit","setState","imageModule","require","styles","checkbox","style","container","renderCompleteCheckbox","labelText","inputText","input","label","Component","contextTypes","PropTypes","Environment","propTypes","func","isRequired","createContainer","fragments","getFragment","create","width","alignItems","flex","flexDirection","height","marginHorizontal","OS","borderBottomColor","undefined","borderBottomWidth","color","fontFamily","fontSize","fontWeight","textAlign"],"mappings":"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","file":"ToDo.js","sourcesContent":["// @flow weak\n'use strict'\n\nimport Relay from 'react-relay'\nimport React, { PropTypes, } from 'react'\nimport { Image, Platform, StyleSheet, Text, TouchableHighlight, View, } from 'react-native'\n\nimport ToDoTextInput from './ToDoTextInput'\nimport ToDo_updateStatusMutation from '../../relay/ToDo_updateStatusMutation'\nimport ToDo_updateRenameMutation from '../../relay/ToDo_updateRenameMutation'\n\n\nclass ToDo extends React.Component {\n\n  static contextTypes = {\n    relay: Relay.PropTypes.Environment,\n  }\n\n  static propTypes = {\n    onDestroy: PropTypes.func.isRequired,\n    style: View.propTypes.style,\n  }\n\n  state = {\n    isEditing: false,\n  }\n\n  constructor( props, context ) {\n    super( props, context )\n\n    this._handleCompletePress = this._handleCompletePress.bind( this )\n    this._handleLabelPress = this._handleLabelPress.bind( this )\n    this._handleTextInputCancel = this._handleTextInputCancel.bind( this )\n    this._handleTextInputDelete = this._handleTextInputDelete.bind( this )\n    this._handleTextInputSave = this._handleTextInputSave.bind( this )\n    this._setEditMode = this._setEditMode.bind( this )\n  }\n\n  _handleCompletePress() {\n\n    var ToDo_Complete = !this.props.ToDo.ToDo_Complete\n    this.context.relay.commitUpdate(\n      new ToDo_updateStatusMutation( {\n        ToDo_Complete,\n        ToDo: this.props.ToDo,\n        Viewer: this.props.Viewer,\n      } )\n    )\n  }\n\n  _handleLabelPress() {\n    this._setEditMode( true )\n  }\n\n  _handleTextInputCancel() {\n\n    this._setEditMode( false )\n  }\n\n  _handleTextInputDelete() {\n\n    this._setEditMode( false )\n    this.props.onDestroy()\n  }\n\n  _handleTextInputSave( ToDo_Text ) {\n\n    this._setEditMode( false )\n    this.context.relay.commitUpdate(\n      new ToDo_updateRenameMutation( { ToDo: this.props.ToDo, ToDo_Text } )\n    )\n  }\n\n  _setEditMode( shouldEdit ) {\n\n    this.setState( { isEditing: shouldEdit } )\n  }\n\n  renderCompleteCheckbox() {\n\n    const imageModule = this.props.ToDo.ToDo_Complete ?\n      require( '../images/todo_checkbox-active.png' ) :\n      require( '../images/todo_checkbox.png' )\n    return(\n      <TouchableHighlight\n        onPress={this._handleCompletePress}\n        style={styles.checkbox}\n        underlayColor=\"transparent\">\n        <Image source={imageModule} />\n      </TouchableHighlight>\n    )\n  }\n\n  render() {\n\n    return(\n      <View style={[this.props.style, styles.container]}>\n        {this.renderCompleteCheckbox()}\n        {this.state.isEditing ?\n          <ToDoTextInput\n            autoFocus={true}\n            commitOnBlur={true}\n            initialValue={this.props.ToDo.ToDo_Text}\n            onCancel={this._handleTextInputCancel}\n            onDelete={this._handleTextInputDelete}\n            onSave={this._handleTextInputSave}\n            style={[styles.labelText, styles.inputText, styles.input]}\n          /> :\n          <TouchableHighlight\n            activeOpacity={1}\n            onPress={this._handleLabelPress}\n            style={styles.label}\n            underlayColor=\"transparent\">\n            <Text\n              numberOfLines={1}\n              style={styles.labelText}>\n              {this.props.ToDo.ToDo_Text}\n            </Text>\n          </TouchableHighlight>\n        }\n      </View>\n    )\n  }\n}\n\nexport default Relay.createContainer( ToDo, {\n  fragments: {\n    ToDo: () => Relay.QL `\n      fragment on ToDo {\n        ToDo_Complete\n        id\n        ToDo_Text\n        ${ToDo_updateStatusMutation.getFragment('ToDo')}\n        ${ToDo_updateRenameMutation.getFragment('ToDo')}\n      }\n    `,\n    Viewer: () => Relay.QL `\n      fragment on Viewer {\n        ${ToDo_updateStatusMutation.getFragment('Viewer')}\n      }\n    `,\n  },\n} )\n\nconst styles = StyleSheet.create( {\n  checkbox: {\n    width: 40,\n  },\n  container: {\n    alignItems: 'center',\n    flex: 1,\n    flexDirection: 'row',\n    height: 58,\n  },\n  input: {\n    flex: 1,\n  },\n  inputText: {\n    marginHorizontal: Platform.OS === 'android' ? 11 : 15,\n  },\n  label: {\n    borderBottomColor: Platform.OS === 'android' ? 'transparent' : undefined,\n    borderBottomWidth: Platform.OS === 'android' ? 1 : undefined,\n    flex: 1,\n  },\n  labelText: {\n    color: 'rgb(77, 77, 77)',\n    fontFamily: Platform.OS === 'android' ? 'sans-serif-regular' : undefined,\n    fontSize: 24,\n    fontWeight: '300',\n    marginHorizontal: 15,\n    textAlign: 'left',\n  },\n} )\n"]}