{"version":3,"sources":["../../../../../units/urb-example-todo/app/components/ToDoListFooter.js"],"names":["styles","create","container","alignItems","flexDirection","height","justifyContent","strong","fontWeight","ToDoListFooter","props","context","numCompletedTodos","Viewer","ToDo_CompletedCount","numRemainingTodos","ToDo_TotalCount","style","Component","propTypes","status","oneOf","isRequired","createContainer","initialVariables","prepareVariables","prevVars","fragments"],"mappings":";;AAEA,uC;AACA,4B;AACA,yC;;;AAGA,GAAMA,QAAS,wBAAWC,MAAX,CAAmB;;AAEhCC,UAAW;AACTC,WAAY,QADH;AAETC,cAAe,KAFN;AAGTC,OAAQ,EAHC;AAITC,eAAgB,eAJP,CAFqB;;AAQhCC,OAAQ;AACNC,WAAY,MADN,CARwB,CAAnB,CAAf,C;;;;AAaMC,c;;;;;;;AAOJ,wBAAaC,KAAb,CAAoBC,OAApB,CAA8B;;AAErBD,KAFqB,CAEdC,OAFc;AAG7B,C;;AAEQ;;AAEP,GAAIC,mBAAoB,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,mBAA1C;AACA,GAAIC,mBAAoB,KAAKL,KAAL,CAAWG,MAAX,CAAkBG,eAAlB,CAAoCJ,iBAA5D;AACA;AACE,iDAAM,MAAO,CAAC,KAAKF,KAAL,CAAWO,KAAZ,CAAmBjB,OAAOE,SAA1B,CAAb;AACE;AACE,iDAAM,MAAOF,OAAOO,MAApB;AACGQ,iBADH,CADF;AAGeA,oBAAsB,CAAtB,CAA0B,EAA1B,CAA+B,GAH9C,SADF,CADF;;;;AASD,C,4BAzB0B,gBAAMG,S,EAA7BT,c,CAEGU,S,CAAY,CACjBC,OAAQ,iBAAUC,KAAV,CAAiB,CAAE,QAAF,CAAY,KAAZ,CAAmB,WAAnB,CAAjB,EAAoDC,UAD3C,CAEjBL,MAAO,kBAAKE,SAAL,CAAeF,KAFL,C;;;AA0BN,qBAAMM,eAAN,CAAuBd,cAAvB,CAAuC;AACpDe,iBAAkB;AAChBJ,OAAQ,KADQ,CADkC;;AAIpDK,gBAJoD,2BAIlCC,QAJkC,CAIvB;AAC3B;AACKA,QADL;;AAGD,CARmD;AASpDC,UAAW;AACTd,OAAQ,yYADC,CATyC,CAAvC,C","file":"ToDoListFooter.js","sourcesContent":["// @flow weak\n\nimport Relay from 'react-relay'\nimport React, { PropTypes, } from 'react'\nimport { StyleSheet, Text, View, } from 'react-native'\n\n\nconst styles = StyleSheet.create( {\n\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 40,\n    justifyContent: 'space-between',\n  },\n  strong: {\n    fontWeight: 'bold',\n  },\n} )\n\nclass ToDoListFooter extends React.Component {\n\n  static propTypes = {\n    status: PropTypes.oneOf( [ 'active', 'any', 'completed' ] ).isRequired,\n    style: View.propTypes.style,\n  }\n\n  constructor( props, context ) {\n\n    super( props, context )\n  }\n\n  render() {\n\n    var numCompletedTodos = this.props.Viewer.ToDo_CompletedCount\n    var numRemainingTodos = this.props.Viewer.ToDo_TotalCount - numCompletedTodos\n    return(\n      <View style={[this.props.style, styles.container]}>\n        <Text>\n          <Text style={styles.strong}>\n            {numRemainingTodos}\n          </Text> item{numRemainingTodos === 1 ? '' : 's'} left\n        </Text>\n      </View>\n    )\n  }\n}\n\nexport default Relay.createContainer( ToDoListFooter, {\n  initialVariables: {\n    status: 'any',\n  },\n  prepareVariables( prevVars ) {\n    return {\n      ...prevVars\n    }\n  },\n  fragments: {\n    Viewer: () => Relay.QL `\n      fragment on Viewer {\n        ToDo_CompletedCount,\n        ToDo_TotalCount\n      }\n    `,\n  },\n} )\n"]}