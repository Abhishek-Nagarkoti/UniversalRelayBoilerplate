{"version":3,"sources":["../../../../../units/urb-example-todo/graphql/type/_ViewerFields.js"],"names":["ToDos","type","connectionType","args","status","defaultValue","resolve","obj","context","objectManager","rootValue","getObjectList","ToDo_User_id","getViewerUserId","then","arr","filter","a_ToDo","ToDo_Complete","ToDo_TotalCount","length","ToDo_CompletedCount"],"mappings":";;AAEA;AACA;;AAEA,kD;;;AAGe;;AAEbA,MAAO;AACLC,KAAM,0BAAgBC,cADjB;AAELC;AACEC,OAAQ;AACNH,2BADM;AAENI,aAAc,KAFR,CADV,+BAFK;;;;AASLC,QAAS,iBAAEC,GAAF;;;AAGNC,OAHM;;AAKF,IAJLJ,OAIK,MAJLA,MAIK,CAHFD,IAGE,8CADMM,cACN,OADLC,SACK;AACL,MAAOD,eAAcE,aAAd,CAA6B,MAA7B,CAAqC;AACxCC,aAAcH,cAAcI,eAAd,EAD0B,CAArC;;AAGJC,IAHI,CAGE,SAAEC,GAAF,QAAW,sCAAqBA,IAAIC,MAAJ,CAAY,uBAAUZ,UAAW,KAAX,EAAsBa,OAAOC,aAAP,IAA2Bd,SAAW,WAAtC,CAAhC,EAAZ,CAArB,CAA0HD,IAA1H,CAAX,EAHF,CAAP;AAID,CAnBI,CAFM;;;AAwBbgB,gBAAiB;AACflB,wBADe;AAEfK,QAAS,iBAAEC,GAAF;AACNC,OADM,WAAWL,KAAX;AAEIM,aAFJ,OAEPC,SAFO;AAGFD,cAAcE,aAAd,CAA6B,MAA7B,CAAqC;AAC1CC,aAAcH,cAAcI,eAAd,EAD4B,CAArC;AAEHC,IAFG,CAEG,SAAEC,GAAF,QAAWA,KAAIK,MAAf,EAFH,CAHE,GAFM,CAxBJ;;;AAkCbC,oBAAqB;AACnBpB,wBADmB;AAEnBK,QAAS,iBAAEC,GAAF;AACNC,OADM,WAAWL,KAAX;AAEIM,aAFJ,OAEPC,SAFO;AAGFD,cAAcE,aAAd,CAA6B,MAA7B,CAAqC;AAC1CC,aAAcH,cAAcI,eAAd,EAD4B,CAArC;AAEHC,IAFG,CAEG,SAAEC,GAAF,QAAWA,KAAIC,MAAJ,CAAY,uBAAUC,QAAOC,aAAjB,EAAZ,EAA6CE,MAAxD,EAFH,CAHE,GAFU,CAlCR,C","file":"_ViewerFields.js","sourcesContent":["// @flow weak\n\nimport { GraphQLInt, GraphQLString } from 'graphql'\nimport { connectionArgs, connectionFromArray } from 'graphql-relay'\n\nimport ToDosConnection from \"./ToDosConnection\"\n\n\nexport default {\n\n  ToDos: {\n    type: ToDosConnection.connectionType,\n    args: {\n      status: {\n        type: GraphQLString,\n        defaultValue: 'any',\n      },\n      ...connectionArgs,\n    },\n    resolve: ( obj, {\n      status,\n      ...args\n    }, context, {\n      rootValue: objectManager\n    } ) => {\n      return objectManager.getObjectList( 'ToDo', {\n          ToDo_User_id: objectManager.getViewerUserId()\n        } )\n        .then( ( arr ) => connectionFromArray( arr.filter( a_ToDo => status === 'any' || ( a_ToDo.ToDo_Complete === ( status === 'completed' ) ) ), args ) )\n    }\n  },\n\n  ToDo_TotalCount: {\n    type: GraphQLInt,\n    resolve: ( obj, {...args\n    }, context, {\n      rootValue: objectManager\n    } ) => objectManager.getObjectList( 'ToDo', {\n      ToDo_User_id: objectManager.getViewerUserId()\n    } ).then( ( arr ) => arr.length )\n  },\n\n  ToDo_CompletedCount: {\n    type: GraphQLInt,\n    resolve: ( obj, {...args\n    }, context, {\n      rootValue: objectManager\n    } ) => objectManager.getObjectList( 'ToDo', {\n      ToDo_User_id: objectManager.getViewerUserId()\n    } ).then( ( arr ) => arr.filter( a_ToDo => a_ToDo.ToDo_Complete ).length )\n  },\n}\n"]}