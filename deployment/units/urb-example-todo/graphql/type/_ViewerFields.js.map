{"version":3,"sources":["../../../../../units/urb-example-todo/graphql/type/_ViewerFields.js"],"names":["ToDos","type","connectionType","args","status","defaultValue","resolve","obj","context","objectManager","rootValue","getObjectList","ToDo_User_id","getViewerUserId","then","arr","filter","a_ToDo","ToDo_Complete","ToDo_TotalCount","length","ToDo_CompletedCount"],"mappings":";;AAEA;AACA;;AAEA,kD;;AAEe;AACbA,MAAO;AACLC,KAAM,0BAAgBC,cADjB;AAELC;AACEC,OAAQ;AACNH,2BADM;AAENI,aAAc,KAFR,CADV,+BAFK;;;;AASLC,QAAS,iBAACC,GAAD,MAA2BC,OAA3B,OAAqE,IAA7DJ,OAA6D,MAA7DA,MAA6D,CAAlDD,IAAkD,8CAApBM,cAAoB,OAA/BC,SAA+B;AAC5E,MAAOD;AACJE,aADI,CACU,MADV,CACkB;AACrBC,aAAcH,cAAcI,eAAd,EADO,CADlB;;AAIJC,IAJI,CAIC;AACJ;AACEC,IAAIC,MAAJ;AACE,uBAAUZ,UAAW,KAAX,EAAoBa,OAAOC,aAAP,IAA0Bd,SAAW,WAArC,CAA9B,EADF,CADF;;AAIED,IAJF,CADI,GAJD,CAAP;;;AAYD,CAtBI,CADM;;;AA0BbgB,gBAAiB;AACflB,wBADe;AAEfK,QAAS,iBAACC,GAAD,OAAmBC,OAAnB,WAAWL,KAAX,uCAAyCM,cAAzC,OAA8BC,SAA9B;AACPD;AACGE,aADH,CACiB,MADjB,CACyB;AACrBC,aAAcH,cAAcI,eAAd,EADO,CADzB;;AAIGC,IAJH,CAIQ,oBAAOC,KAAIK,MAAX,EAJR,CADO,GAFM,CA1BJ;;;AAoCbC,oBAAqB;AACnBpB,wBADmB;AAEnBK,QAAS,iBAACC,GAAD,OAAmBC,OAAnB,WAAWL,KAAX,uCAAyCM,cAAzC,OAA8BC,SAA9B;AACPD;AACGE,aADH,CACiB,MADjB,CACyB;AACrBC,aAAcH,cAAcI,eAAd,EADO,CADzB;;AAIGC,IAJH,CAIQ,oBAAOC,KAAIC,MAAJ,CAAW,uBAAUC,QAAOC,aAAjB,EAAX,EAA2CE,MAAlD,EAJR,CADO,GAFU,CApCR,C","file":"_ViewerFields.js","sourcesContent":["// @flow\n\nimport { GraphQLInt, GraphQLString } from 'graphql'\nimport { connectionArgs, connectionFromArray } from 'graphql-relay'\n\nimport ToDosConnection from './ToDosConnection'\n\nexport default {\n  ToDos: {\n    type: ToDosConnection.connectionType,\n    args: {\n      status: {\n        type: GraphQLString,\n        defaultValue: 'any',\n      },\n      ...connectionArgs,\n    },\n    resolve: (obj, { status, ...args }, context, { rootValue: objectManager }) => {\n      return objectManager\n        .getObjectList('ToDo', {\n          ToDo_User_id: objectManager.getViewerUserId(),\n        })\n        .then(arr =>\n          connectionFromArray(\n            arr.filter(\n              a_ToDo => status === 'any' || a_ToDo.ToDo_Complete === (status === 'completed'),\n            ),\n            args,\n          ),\n        )\n    },\n  },\n\n  ToDo_TotalCount: {\n    type: GraphQLInt,\n    resolve: (obj, { ...args }, context, { rootValue: objectManager }) =>\n      objectManager\n        .getObjectList('ToDo', {\n          ToDo_User_id: objectManager.getViewerUserId(),\n        })\n        .then(arr => arr.length),\n  },\n\n  ToDo_CompletedCount: {\n    type: GraphQLInt,\n    resolve: (obj, { ...args }, context, { rootValue: objectManager }) =>\n      objectManager\n        .getObjectList('ToDo', {\n          ToDo_User_id: objectManager.getViewerUserId(),\n        })\n        .then(arr => arr.filter(a_ToDo => a_ToDo.ToDo_Complete).length),\n  },\n}\n"]}