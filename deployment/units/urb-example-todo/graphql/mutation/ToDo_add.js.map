{"version":3,"sources":["../../../../../units/urb-example-todo/graphql/mutation/ToDo_add.js"],"names":["name","inputFields","ToDo_Text","type","outputFields","ToDosEdge","edgeType","resolve","context","local_id","args","objectManager","rootValue","an_Object","getOneObject","id","then","retrieved_Object","getObjectList","ToDo_User_id","getViewerUserId","arr","cursor","cursorForObjectInConnection","node","Viewer","parent","mutateAndGetPayload","add","ToDo_Complete"],"mappings":";;AAEA;AACA;;AAEA,wD;AACA,+D;;;AAGe,+CAA8B;;AAE3CA,KAAM,UAFqC;AAG3CC,YAAa;AACXC,UAAW,CAAEC,KAAM,mDAAR,CADA,CAH8B;;AAM3CC,aAAc;AACZC,UAAW;AACTF,KAAM,0BAAgBG,QADb;AAETC,QAAS,4BAA4BC,OAA5B,OAAuE,IAAnEC,SAAmE,MAAnEA,QAAmE,IAAnDC,KAAmD,uCAArBC,cAAqB,OAAhCC,SAAgC;AAC9E,GAAIC,iBAAJ;AACA,MAAOF,eAAcG,YAAd,CAA4B,MAA5B,CAAoC,CAAEC,GAAIN,QAAN,CAApC;AACJO,IADI,CACE,SAAEC,gBAAF,CAAwB;AAC7BJ,UAAYI,gBAAZ;AACD,CAHI;AAIJD,IAJI,CAIE,iBAAML,eAAcO,aAAd,CAA6B,MAA7B,CAAqC,CAAEC,aAAcR,cAAcS,eAAd,EAAhB,CAArC,CAAN,EAJF;AAKJJ,IALI,CAKE,SAAEK,GAAF,QAAa;AAClBC,OAAQX,cAAcY,2BAAd,CAA2C,MAA3C,CAAmDF,GAAnD,CAAwDR,SAAxD,CADU;AAElBW,KAAMX,SAFY,CAAb,EALF,CAAP;;AASD,CAbQ,CADC;;AAgBZY,OAAQ;AACNtB,yBADM;AAENI,QAAS,iBAAEmB,MAAF,CAAUhB,IAAV,CAAgBF,OAAhB,WAAsCG,cAAtC,OAA2BC,SAA3B,OAA2DD,eAAcG,YAAd,CAA4B,MAA5B,CAAoC,CAAEC,GAAIJ,cAAcS,eAAd,EAAN,CAApC,CAA3D,EAFH,CAhBI,CAN6B;;;AA2B3CO,oBAAqB,mCAAiBnB,OAAjB,WAAIN,UAAJ,OAAIA,SAAJ,IAAuCS,cAAvC,OAA4BC,SAA5B;AACnBD,cAAciB,GAAd,CAAmB,MAAnB,CAA2B;AACzBT,aAAcR,cAAcS,eAAd,EADW;AAEzBlB,mBAFyB;AAGzB2B,cAAe,KAHU,CAA3B;;AAKCb,IALD,CAKO,SAAEP,QAAF,QAAkB,CAAEA,iBAAF,CAAlB,EALP,CADmB,GA3BsB,CAA9B,C","file":"ToDo_add.js","sourcesContent":["// @flow weak\n\nimport { mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLString, GraphQLNonNull } from 'graphql'\n\nimport ToDosConnection from '../type/ToDosConnection'\nimport ViewerType from '../../../../graphql/type/ViewerType'\n\n\nexport default mutationWithClientMutationId( {\n\n  name: 'ToDo_add',\n  inputFields: {\n    ToDo_Text: { type: new GraphQLNonNull( GraphQLString ) }\n  },\n  outputFields: {\n    ToDosEdge: {\n      type: ToDosConnection.edgeType,\n      resolve: ( { local_id }, {...args }, context, { rootValue: objectManager } ) => {\n        let an_Object\n        return objectManager.getOneObject( 'ToDo', { id: local_id } )\n          .then( ( retrieved_Object ) => {\n            an_Object = retrieved_Object\n          } )\n          .then( () => objectManager.getObjectList( 'ToDo', { ToDo_User_id: objectManager.getViewerUserId() } ) )\n          .then( ( arr ) => ( {\n            cursor: objectManager.cursorForObjectInConnection( 'ToDo', arr, an_Object ),\n            node: an_Object,\n          } ) )\n      }\n    },\n    Viewer: {\n      type: ViewerType,\n      resolve: ( parent, args, context, { rootValue: objectManager } ) => objectManager.getOneObject( 'User', { id: objectManager.getViewerUserId() } )\n    },\n  },\n  mutateAndGetPayload: ( { ToDo_Text }, context, { rootValue: objectManager } ) =>\n    objectManager.add( 'ToDo', {\n      ToDo_User_id: objectManager.getViewerUserId(),\n      ToDo_Text,\n      ToDo_Complete: false\n    } )\n    .then( ( local_id ) => ( { local_id } ) )\n} )\n"]}