{"version":3,"sources":["../../../../../units/urb-example-todo/webapp/components/ToDo_Properties.jsx"],"names":["ToDo_Properties","props","context","_handle_onTouchTap_Close","setState","Dialog_IsOpen","_handle_onTouchTap_OK","updateHandler","ToDo_Text","refs","getValue","state","Component","propTypes","PropTypes","string","isRequired","func"],"mappings":";;AAEA,4B;;AAEA,0C;AACA,kD;AACA,gD;;;AAGqBA,e;;;;;;;AAOnB,yBAAaC,KAAb,CAAyBC,OAAzB,CAAmC;;AAE1BD,KAF0B,CAEnBC,OAFmB;;;;;;;;;;;;AAcnCC,wBAdmC,CAcR,UAAM;;AAE/B,MAAKC,QAAL,CAAe,CAAEC,cAAe,KAAjB,CAAf;AACD,CAjBkC;;AAmBnCC,qBAnBmC,CAmBX,UAAM;;AAE5B,MAAKL,KAAL,CAAWM,aAAX,CAA0B,CAAEC,UAAW,MAAKC,IAAL,CAAUD,SAAV,CAAoBE,QAApB,EAAb,CAA1B;;AAEA,MAAKN,QAAL,CAAe,CAAEC,cAAe,KAAjB,CAAf;AACD,CAxBkC,CAIjC,MAAKM,KAAL,CAAa,CACXN,cAAe,KADJ,CAAb,CAJiC,aAOlC,C,+EAEc,CAEb,KAAKD,QAAL,CAAe,CAAEC,cAAe,IAAjB,CAAf,EACD,C;;AAcQ;AACP;AACE;AACE;AACE,KAAO,KAAKM,KAAL,CAAWN,aADpB;AAEE,MAAM,MAFR;AAGE,QAAU;AACR,oDAAY,IAAI,QAAhB,CAAyB,MAAM,QAA/B,CAAwC,WAAa,KAAKF,wBAA1D,EADQ;AAER,oDAAY,IAAI,IAAhB,CAAqB,MAAM,IAA3B,CAAgC,QAAS,IAAzC,CAA+C,WAAa,KAAKG,qBAAjE,EAFQ,CAHZ;;;AAQE;AACE,IAAI,WADN;AAEE,aAAe,KAAKL,KAAL,CAAWO,SAF5B;AAGE,kBAAkB,OAHpB;AAIE,UAAY,IAJd,EARF,CADF,CADF;;;;;AAmBD,C,6BArD0C,gBAAMI,S,EAA9BZ,e,CAEZa,S,CAAY,CACjBL,UAAW,gBAAMM,SAAN,CAAgBC,MAAhB,CAAuBC,UADjB,CAEjBT,cAAe,gBAAMO,SAAN,CAAgBG,IAAhB,CAAqBD,UAFnB,C,iBAFAhB,e","file":"ToDo_Properties.js","sourcesContent":["// @flow weak\n\nimport React from 'react'\n\nimport Dialog from 'material-ui/Dialog'\nimport FlatButton from 'material-ui/FlatButton'\nimport TextField from 'material-ui/TextField'\n\n\nexport default class ToDo_Properties extends React.Component {\n\n  static propTypes = {\n    ToDo_Text: React.PropTypes.string.isRequired,\n    updateHandler: React.PropTypes.func.isRequired,\n  }\n\n  constructor( props: any, context ) {\n\n    super( props, context )\n\n    this.state = {\n      Dialog_IsOpen: false,\n    }\n  }\n\n  _handle_Open() {\n\n    this.setState( { Dialog_IsOpen: true } )\n  }\n\n  _handle_onTouchTap_Close = () => {\n\n    this.setState( { Dialog_IsOpen: false } )\n  }\n\n  _handle_onTouchTap_OK = () => {\n\n    this.props.updateHandler( { ToDo_Text: this.refs.ToDo_Text.getValue() } )\n\n    this.setState( { Dialog_IsOpen: false } )\n  }\n\n  render() {\n    return(\n      <div>\n        <Dialog\n          open={ this.state.Dialog_IsOpen }\n          title=\"ToDo\"\n          actions={ [\n            <FlatButton key=\"Cancel\" label=\"Cancel\" onTouchTap={ this._handle_onTouchTap_Close } />,\n            <FlatButton key=\"OK\" label=\"OK\" primary={true} onTouchTap={ this._handle_onTouchTap_OK } />,\n          ] }\n        >\n          <TextField\n            ref=\"ToDo_Text\"\n            defaultValue={ this.props.ToDo_Text }\n            floatingLabelText=\"To Do\"\n            fullWidth={ true }\n          />\n        </Dialog>\n      </div>\n    )\n  }\n}\n"]}