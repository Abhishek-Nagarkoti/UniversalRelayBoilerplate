{"version":3,"sources":["../../../../../units/urb-example-todo/webapp/components/ToDo_Item.jsx"],"names":["ToDo_Item","_handle_updateHandler_ToDo","ToDo_properties","context","relay","commitUpdate","ToDo","props","_handle_onCheck_Completed","event","ToDo_Complete","Viewer","_handle_onItemTouchTap","e","item","ref","refs","ToDo_Properties","_handle_Open","_ToDo_delete","ToDo_Text","rightIconMenu","Component","contextTypes","PropTypes","Environment","createContainer","fragments","getFragment"],"mappings":";;;AAGA,4B;AACA,uC;;AAEA,8C;AACA,kD;AACA,8C;AACA;AACA,8C;AACA,oE;;AAEA,gF;AACA,oE;AACA,gF;;AAEA,kD;;AAEMA,S;;;;;;AAMJC,0B,CAA6B,SAAEC,eAAF,CAAuB;;AAElD,MAAKC,OAAL,CAAaC,KAAb,CAAmBC,YAAnB;AACE,kDAAiCC,KAAM,MAAKC,KAAL,CAAWD,IAAlD,EAA2DJ,eAA3D,EADF;;AAGD,C;;AAEDM,yB,CAA4B,SAAEC,KAAF,CAASC,aAAT,CAA4B;;AAEtD,MAAKP,OAAL,CAAaC,KAAb,CAAmBC,YAAnB;AACE,wCAA+B;AAC7BK,2BAD6B;AAE7BJ,KAAM,MAAKC,KAAL,CAAWD,IAFY;AAG7BK,OAAQ,MAAKJ,KAAL,CAAWI,MAHU,CAA/B,CADF;;;AAOD,C;;;;;;;;;;;;;;;;AAgBDC,sB,CAAyB,SAAEC,CAAF,CAAKC,IAAL,CAAe;;AAEtC,OAAQA,KAAKC,GAAb;AACE,IAAK,MAAL;AACE,MAAKC,IAAL,CAAUC,eAAV,CAA0BC,YAA1B;AACA;AACF,IAAK,QAAL;AACE,MAAKC,YAAL;AACA;AACF;AACE,MARJ;;AAUD,C,wIA1BqBC,S,CAAY,CAEhC,KAAKjB,OAAL,CAAaC,KAAb,CAAmBC,YAAnB,CACE,wCAA+B,CAAEC,KAAM,KAAKC,KAAL,CAAWD,IAAnB,CAAyBc,mBAAzB,CAA/B,CADF,EAGD,C,mDAEc,CAEb,KAAKjB,OAAL,CAAaC,KAAb,CAAmBC,YAAnB,CACE,kCAAyB,CAAEC,KAAM,KAAKC,KAAL,CAAWD,IAAnB,CAAyBK,OAAQ,KAAKJ,KAAL,CAAWI,MAA5C,CAAzB,CADF,EAGD,C;;AAgBQ;;AAEP,GAAIU;AACF;AACC,kBAAmB,wDAAY,sDAAZ,CADpB;AAEC,eAAiB,KAAKT,sBAFvB;;AAIC,kDAAU,IAAI,MAAd,CAAqB,MAAQ,CAA7B,SAJD;AAKC,kDAAU,IAAI,QAAd,CAAuB,MAAQ,CAA/B,WALD,CADF;;;;AAUA;AACE;AACE;AACE,YAAc,KAAKL,KAAL,CAAWD,IAAX,CAAgBc,SADhC;AAEE;AACE;AACE,eAAiB,KAAKb,KAAL,CAAWD,IAAX,CAAgBI,aADnC;AAEE,QAAU,KAAKF,yBAFjB,EAHJ;;;AAQE,gBAAkBa,aARpB,EADF;;AAWE;AACE,IAAI,iBADN;AAEE,UAAY,KAAKd,KAAL,CAAWD,IAAX,CAAgBc,SAF9B;AAGE,cAAgB,KAAKnB,0BAHvB,EAXF,CADF;;;;AAmBD,C,uBAnFqB,gBAAMqB,S,EAAxBtB,S,CAEGuB,Y,CAAe,CACpBnB,MAAO,qBAAMoB,SAAN,CAAgBC,WADH,C;;;AAoFT,qBAAMC,eAAN,CAAuB1B,SAAvB,CAAkC;AAC/C2B,UAAW;AACTrB,KAAM;;;;;AAKA,oCAA0BsB,WAA1B,CAAsC,MAAtC,CALA;AAMA,8BAAoBA,WAApB,CAAgC,MAAhC,CANA;AAOA,oCAA0BA,WAA1B,CAAsC,MAAtC,CAPA,GADG;;;AAWTjB,OAAQ;;AAEF,oCAA0BiB,WAA1B,CAAsC,QAAtC,CAFE;AAGF,8BAAoBA,WAApB,CAAgC,QAAhC,CAHE,GAXC,CADoC,CAAlC,C","file":"ToDo_Item.js","sourcesContent":["// @flow weak\n\n\nimport React from 'react'\nimport Relay from 'react-relay'\n\nimport Checkbox from 'material-ui/Checkbox'\nimport IconButton from 'material-ui/IconButton'\nimport IconMenu from 'material-ui/IconMenu'\nimport { ListItem } from 'material-ui/List'\nimport MenuItem from 'material-ui/MenuItem'\nimport NavigationMoreVert from 'material-ui/svg-icons/navigation/more-vert'\n\nimport ToDo_updateStatusMutation from '../../relay/ToDo_updateStatusMutation'\nimport ToDo_deleteMutation from '../../relay/ToDo_deleteMutation'\nimport ToDo_updateRenameMutation from '../../relay/ToDo_updateRenameMutation'\n\nimport ToDo_Properties from './ToDo_Properties'\n\nclass ToDo_Item extends React.Component {\n\n  static contextTypes = {\n    relay: Relay.PropTypes.Environment,\n  }\n\n  _handle_updateHandler_ToDo = ( ToDo_properties ) => {\n\n    this.context.relay.commitUpdate(\n      new ToDo_updateRenameMutation( { ToDo: this.props.ToDo, ...ToDo_properties } )\n    )\n  }\n\n  _handle_onCheck_Completed = ( event, ToDo_Complete ) => {\n\n    this.context.relay.commitUpdate(\n      new ToDo_updateStatusMutation( {\n        ToDo_Complete,\n        ToDo: this.props.ToDo,\n        Viewer: this.props.Viewer,\n      } )\n    )\n  }\n\n  _handleTextInputSave( ToDo_Text ) {\n\n    this.context.relay.commitUpdate(\n      new ToDo_updateRenameMutation( { ToDo: this.props.ToDo, ToDo_Text } )\n    )\n  }\n\n  _ToDo_delete() {\n\n    this.context.relay.commitUpdate(\n      new ToDo_deleteMutation( { ToDo: this.props.ToDo, Viewer: this.props.Viewer } )\n    )\n  }\n\n  _handle_onItemTouchTap = ( e, item ) => {\n\n    switch( item.ref ) {\n      case 'edit':\n        this.refs.ToDo_Properties._handle_Open()\n        break\n      case 'delete':\n        this._ToDo_delete()\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n\n    let rightIconMenu = (\n      <IconMenu\n       iconButtonElement={<IconButton><NavigationMoreVert /></IconButton>}\n       onItemTouchTap={ this._handle_onItemTouchTap }\n      >\n       <MenuItem ref=\"edit\" value={ 0 }>Edit</MenuItem>\n       <MenuItem ref=\"delete\" value={ 1 }>Delete</MenuItem>\n     </IconMenu>\n    )\n\n    return(\n      <div>\n        <ListItem\n          primaryText={ this.props.ToDo.ToDo_Text }\n          leftCheckbox={\n            <Checkbox\n              defaultChecked={ this.props.ToDo.ToDo_Complete }\n              onCheck={ this._handle_onCheck_Completed }\n            />\n          }\n          rightIconButton={ rightIconMenu }\n        />\n        <ToDo_Properties\n          ref=\"ToDo_Properties\"\n          ToDo_Text={ this.props.ToDo.ToDo_Text }\n          updateHandler={ this._handle_updateHandler_ToDo }\n        />\n      </div>\n    )\n  }\n}\n\nexport default Relay.createContainer( ToDo_Item, {\n  fragments: {\n    ToDo: () => Relay.QL `\n      fragment on ToDo {\n        ToDo_Complete,\n        id,\n        ToDo_Text,\n        ${ToDo_updateStatusMutation.getFragment('ToDo')},\n        ${ToDo_deleteMutation.getFragment('ToDo')},\n        ${ToDo_updateRenameMutation.getFragment('ToDo')},\n      }\n    `,\n    Viewer: () => Relay.QL `\n      fragment on Viewer {\n        ${ToDo_updateStatusMutation.getFragment('Viewer')},\n        ${ToDo_deleteMutation.getFragment('Viewer')},\n      }\n    `,\n  },\n} )\n"]}