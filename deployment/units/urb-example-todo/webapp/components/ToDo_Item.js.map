{"version":3,"sources":["../../../../../units/urb-example-todo/webapp/components/ToDo_Item.jsx"],"names":["ToDo_Item","_handle_updateHandler_ToDo","context","relay","commitUpdate","ToDo","props","ToDo_properties","_handle_onCheck_Completed","event","ToDo_Complete","Viewer","_handle_onItemTouchTap","e","item","ref","refs","ToDo_Properties","_handle_Open","_ToDo_delete","ToDo_Text","rightIconMenu","Component","contextTypes","PropTypes","Environment","createContainer","fragments","getFragment"],"mappings":";;AAEA,4B;AACA,uC;;AAEA,8C;AACA,kD;AACA,8C;AACA;AACA,8C;AACA,oE;;AAEA,gF;AACA,oE;AACA,gF;;AAEA,kD;;AAEMA,S;;;;;AAKJC,0B,CAA6B,yBAAmB;AAC9C,MAAKC,OAAL,CAAaC,KAAb,CAAmBC,YAAnB;AACE,kDAAgCC,KAAM,MAAKC,KAAL,CAAWD,IAAjD,EAA0DE,eAA1D,EADF;;AAGD,C;;AAEDC,yB,CAA4B,SAACC,KAAD,CAAQC,aAAR,CAA0B;AACpD,MAAKR,OAAL,CAAaC,KAAb,CAAmBC,YAAnB;AACE,wCAA8B;AAC5BM,2BAD4B;AAE5BL,KAAM,MAAKC,KAAL,CAAWD,IAFW;AAG5BM,OAAQ,MAAKL,KAAL,CAAWK,MAHS,CAA9B,CADF;;;AAOD,C;;;;;;;;;;;;;;AAcDC,sB,CAAyB,SAACC,CAAD,CAAIC,IAAJ,CAAa;AACpC,OAAQA,KAAKC,GAAb;AACE,IAAK,MAAL;AACE,MAAKC,IAAL,CAAUC,eAAV,CAA0BC,YAA1B;AACA;AACF,IAAK,QAAL;AACE,MAAKC,YAAL;AACA;AACF;AACE,MARJ;;AAUD,C,wIAvBoBC,S,CAAW,CAC9B,KAAKlB,OAAL,CAAaC,KAAb,CAAmBC,YAAnB,CACE,wCAA8B,CAAEC,KAAM,KAAKC,KAAL,CAAWD,IAAnB,CAAyBe,mBAAzB,CAA9B,CADF,EAGD,C,mDAEc,CACb,KAAKlB,OAAL,CAAaC,KAAb,CAAmBC,YAAnB,CACE,kCAAwB,CAAEC,KAAM,KAAKC,KAAL,CAAWD,IAAnB,CAAyBM,OAAQ,KAAKL,KAAL,CAAWK,MAA5C,CAAxB,CADF,EAGD,C;;AAeQ;AACP,GAAIU;AACF;AACE,kBAAmB,wDAAY,sDAAZ,CADrB;AAEE,eAAgB,KAAKT,sBAFvB;;AAIE,kDAAU,IAAI,MAAd,CAAqB,MAAO,CAA5B,SAJF;AAKE,kDAAU,IAAI,QAAd,CAAuB,MAAO,CAA9B,WALF,CADF;;;;AAUA;AACE;AACE;AACE,YAAa,KAAKN,KAAL,CAAWD,IAAX,CAAgBe,SAD/B;AAEE;AACE;AACE,eAAgB,KAAKd,KAAL,CAAWD,IAAX,CAAgBK,aADlC;AAEE,QAAS,KAAKF,yBAFhB,EAHJ;;;AAQE,gBAAiBa,aARnB,EADF;;AAWE;AACE,IAAI,iBADN;AAEE,UAAW,KAAKf,KAAL,CAAWD,IAAX,CAAgBe,SAF7B;AAGE,cAAe,KAAKnB,0BAHtB,EAXF,CADF;;;;AAmBD,C,uBA5EqB,gBAAMqB,S,EAAxBtB,S,CACGuB,Y,CAAe,CACpBpB,MAAO,qBAAMqB,SAAN,CAAgBC,WADH,C;;;AA8ET,qBAAMC,eAAN,CAAsB1B,SAAtB,CAAiC;AAC9C2B,UAAW;AACTtB,KAAM;;;;;AAKA,oCAA0BuB,WAA1B,CAAsC,MAAtC,CALA;AAMA,8BAAoBA,WAApB,CAAgC,MAAhC,CANA;AAOA,oCAA0BA,WAA1B,CAAsC,MAAtC,CAPA,GADG;;;AAWTjB,OAAQ;;AAEF,oCAA0BiB,WAA1B,CAAsC,QAAtC,CAFE;AAGF,8BAAoBA,WAApB,CAAgC,QAAhC,CAHE,GAXC,CADmC,CAAjC,C","file":"ToDo_Item.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport Relay from 'react-relay'\n\nimport Checkbox from 'material-ui/Checkbox'\nimport IconButton from 'material-ui/IconButton'\nimport IconMenu from 'material-ui/IconMenu'\nimport { ListItem } from 'material-ui/List'\nimport MenuItem from 'material-ui/MenuItem'\nimport NavigationMoreVert from 'material-ui/svg-icons/navigation/more-vert'\n\nimport ToDo_updateStatusMutation from '../../relay/ToDo_updateStatusMutation'\nimport ToDo_deleteMutation from '../../relay/ToDo_deleteMutation'\nimport ToDo_updateRenameMutation from '../../relay/ToDo_updateRenameMutation'\n\nimport ToDo_Properties from './ToDo_Properties'\n\nclass ToDo_Item extends React.Component {\n  static contextTypes = {\n    relay: Relay.PropTypes.Environment,\n  }\n\n  _handle_updateHandler_ToDo = ToDo_properties => {\n    this.context.relay.commitUpdate(\n      new ToDo_updateRenameMutation({ ToDo: this.props.ToDo, ...ToDo_properties }),\n    )\n  }\n\n  _handle_onCheck_Completed = (event, ToDo_Complete) => {\n    this.context.relay.commitUpdate(\n      new ToDo_updateStatusMutation({\n        ToDo_Complete,\n        ToDo: this.props.ToDo,\n        Viewer: this.props.Viewer,\n      }),\n    )\n  }\n\n  _handleTextInputSave(ToDo_Text) {\n    this.context.relay.commitUpdate(\n      new ToDo_updateRenameMutation({ ToDo: this.props.ToDo, ToDo_Text }),\n    )\n  }\n\n  _ToDo_delete() {\n    this.context.relay.commitUpdate(\n      new ToDo_deleteMutation({ ToDo: this.props.ToDo, Viewer: this.props.Viewer }),\n    )\n  }\n\n  _handle_onItemTouchTap = (e, item) => {\n    switch (item.ref) {\n      case 'edit':\n        this.refs.ToDo_Properties._handle_Open()\n        break\n      case 'delete':\n        this._ToDo_delete()\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n    let rightIconMenu = (\n      <IconMenu\n        iconButtonElement={<IconButton><NavigationMoreVert /></IconButton>}\n        onItemTouchTap={this._handle_onItemTouchTap}\n      >\n        <MenuItem ref=\"edit\" value={0}>Edit</MenuItem>\n        <MenuItem ref=\"delete\" value={1}>Delete</MenuItem>\n      </IconMenu>\n    )\n\n    return (\n      <div>\n        <ListItem\n          primaryText={this.props.ToDo.ToDo_Text}\n          leftCheckbox={\n            <Checkbox\n              defaultChecked={this.props.ToDo.ToDo_Complete}\n              onCheck={this._handle_onCheck_Completed}\n            />\n          }\n          rightIconButton={rightIconMenu}\n        />\n        <ToDo_Properties\n          ref=\"ToDo_Properties\"\n          ToDo_Text={this.props.ToDo.ToDo_Text}\n          updateHandler={this._handle_updateHandler_ToDo}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Relay.createContainer(ToDo_Item, {\n  fragments: {\n    ToDo: () => Relay.QL`\n      fragment on ToDo {\n        ToDo_Complete,\n        id,\n        ToDo_Text,\n        ${ToDo_updateStatusMutation.getFragment('ToDo')},\n        ${ToDo_deleteMutation.getFragment('ToDo')},\n        ${ToDo_updateRenameMutation.getFragment('ToDo')},\n      }\n    `,\n    Viewer: () => Relay.QL`\n      fragment on Viewer {\n        ${ToDo_updateStatusMutation.getFragment('Viewer')},\n        ${ToDo_deleteMutation.getFragment('Viewer')},\n      }\n    `,\n  },\n})\n"]}