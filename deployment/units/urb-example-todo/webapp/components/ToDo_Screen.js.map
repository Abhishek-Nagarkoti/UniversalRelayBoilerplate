{"version":3,"sources":["../../../../../units/urb-example-todo/webapp/components/ToDo_Screen.jsx"],"names":["ToDo_Screen","props","context","_handle_onKeyDown_AddToDo","e","keyCode","relay","commitUpdate","ToDo_Text","state","ToDo_Text_New","Viewer","setState","_handle_OnChange","event","target","value","children","marginLeft","marginRight","Component","contextTypes","PropTypes","Environment","createContainer","fragments","getFragment"],"mappings":";;AAEA;AACA,gD;AACA,4B;AACA,uC;;AAEA,0F;AACA,8D;;AAEMA,W;;;;;;;;;AASJ,qBAAYC,KAAZ,CAAmBC,OAAnB,CAA4B;AACpBD,KADoB,CACbC,OADa;;;;;;;AAQ5BC,yBAR4B,CAQA,WAAK;AAC/B,GAAIC,EAAEC,OAAF,GAAc,EAAlB,CAAsB;AACpB,MAAKH,OAAL,CAAaI,KAAb,CAAmBC,YAAnB;AACE,+BAAqB;AACnBC,UAAW,MAAKC,KAAL,CAAWC,aADH;AAEnBC,OAAQ,MAAKV,KAAL,CAAWU,MAFA,CAArB,CADF;;;;AAOA,MAAKC,QAAL,CAAc;AACZF,cAAe,EADH,CAAd;;AAGD;AACF,CArB2B;;AAuB5BG,gBAvB4B,CAuBT,eAAS;AAC1B,MAAKD,QAAL,CAAc;AACZF,cAAeI,MAAMC,MAAN,CAAaC,KADhB,CAAd;;AAGD,CA3B2B,CAG1B,MAAKP,KAAL,CAAa,CACXC,cAAe,EADJ,CAAb,CAH0B,aAM3B,C;;AAuBQ;AACP;AACE;AACE,0CAAM,kBAAmB,IAAzB;;AAEE,gDAAY,MAAM,QAAlB,CAA2B,SAAS,yBAApC,EAFF;;AAIG,KAAKT,KAAL,CAAWgB,QAJd;;AAME,qCAAK,MAAO,CAAEC,WAAY,CAAd,CAAiBC,YAAa,CAA9B,CAAZ;AACE;AACE,kBAAkB,wBADpB;AAEE,MAAO,KAAKV,KAAL,CAAWC,aAFpB;AAGE,UAAW,IAHb;AAIE,UAAW,KAAKP,yBAJlB;AAKE,SAAU,KAAKU,gBALjB,EADF,CANF,CADF,CADF;;;;;;;AAqBD,C,yBA5DuB,gBAAMO,S,EAA1BpB,W,CAKGqB,Y,CAAe,CACpBf,MAAO,qBAAMgB,SAAN,CAAgBC,WADH,C;;;AA0DT,qBAAMC,eAAN,CAAsBxB,WAAtB,CAAmC;AAChDyB,UAAW;AACTd,OAAQ;;;AAGF,2BAAiBe,WAAjB,CAA6B,QAA7B,CAHE,GADC,CADqC,CAAnC,C","file":"ToDo_Screen.js","sourcesContent":["// @flow\n\nimport { Card, CardHeader } from 'material-ui/Card'\nimport TextField from 'material-ui/TextField'\nimport React from 'react'\nimport Relay from 'react-relay'\n\nimport ResponsiveContentArea from '../../../../webapp/components/ResponsiveContentArea'\nimport ToDo_addMutation from '../../relay/ToDo_addMutation'\n\nclass ToDo_Screen extends React.Component {\n  state: {\n    ToDo_Text_New: string,\n  }\n\n  static contextTypes = {\n    relay: Relay.PropTypes.Environment,\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      ToDo_Text_New: '',\n    }\n  }\n\n  _handle_onKeyDown_AddToDo = e => {\n    if (e.keyCode === 13) {\n      this.context.relay.commitUpdate(\n        new ToDo_addMutation({\n          ToDo_Text: this.state.ToDo_Text_New,\n          Viewer: this.props.Viewer,\n        }),\n      )\n\n      this.setState({\n        ToDo_Text_New: '',\n      })\n    }\n  }\n\n  _handle_OnChange = event => {\n    this.setState({\n      ToDo_Text_New: event.target.value,\n    })\n  }\n\n  render() {\n    return (\n      <ResponsiveContentArea>\n        <Card initiallyExpanded={true}>\n\n          <CardHeader title=\"TO DOs\" subtitle=\"List of TO DOs for user\" />\n\n          {this.props.children}\n\n          <div style={{ marginLeft: 4, marginRight: 4 }}>\n            <TextField\n              floatingLabelText=\"What needs to be done?\"\n              value={this.state.ToDo_Text_New}\n              fullWidth={true}\n              onKeyDown={this._handle_onKeyDown_AddToDo}\n              onChange={this._handle_OnChange}\n            />\n          </div>\n\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default Relay.createContainer(ToDo_Screen, {\n  fragments: {\n    Viewer: () => Relay.QL`\n      fragment on Viewer {\n        ToDo_TotalCount,\n        ${ToDo_addMutation.getFragment('Viewer')},\n      }\n    `,\n  },\n})\n"]}