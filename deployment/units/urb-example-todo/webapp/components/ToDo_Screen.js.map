{"version":3,"sources":["../../../../../units/urb-example-todo/webapp/components/ToDo_Screen.jsx"],"names":["ToDo_Screen","props","context","_handle_onKeyDown_AddToDo","e","keyCode","relay","commitUpdate","ToDo_Text","state","ToDo_Text_New","Viewer","setState","_handle_OnChange","event","target","value","children","marginLeft","marginRight","Component","contextTypes","PropTypes","Environment","createContainer","fragments","getFragment"],"mappings":";;;AAGA;AACA,gD;AACA,4B;AACA,uC;;AAEA,0F;AACA,8D;;;AAGMA,W;;;;;;;;;;AAUJ,qBAAaC,KAAb,CAAoBC,OAApB,CAA8B;;AAErBD,KAFqB,CAEdC,OAFc;;;;;;;;AAU9BC,yBAV8B,CAUF,SAAEC,CAAF,CAAS;;AAEnC,GAAIA,EAAEC,OAAF,GAAc,EAAlB,CAAuB;AACrB,MAAKH,OAAL,CAAaI,KAAb,CAAmBC,YAAnB;AACE,+BAAsB;AACpBC,UAAW,MAAKC,KAAL,CAAWC,aADF;AAEpBC,OAAQ,MAAKV,KAAL,CAAWU,MAFC,CAAtB,CADF;;;;AAOA,MAAKC,QAAL,CAAe;AACbF,cAAe,EADF,CAAf;;AAGD;AACF,CAxB6B;;AA0B9BG,gBA1B8B,CA0BX,SAAEC,KAAF,CAAa;;AAE9B,MAAKF,QAAL,CAAe;AACbF,cAAeI,MAAMC,MAAN,CAAaC,KADf,CAAf;;AAGD,CA/B6B,CAI5B,MAAKP,KAAL,CAAa,CACXC,cAAe,EADJ,CAAb,CAJ4B,aAO7B,C;;AA0BQ;;AAEP;AACE;AACA,0CAAM,kBAAoB,IAA1B;;AAEE,gDAAY,MAAM,QAAlB,CAA2B,SAAS,yBAApC,EAFF;;AAII,KAAKT,KAAL,CAAWgB,QAJf;;AAME,qCAAK,MAAQ,CAAEC,WAAY,CAAd,CAAiBC,YAAa,CAA9B,CAAb;AACE;AACE,kBAAkB,wBADpB;AAEE,MAAQ,KAAKV,KAAL,CAAWC,aAFrB;AAGE,UAAY,IAHd;AAIE,UAAY,KAAKP,yBAJnB;AAKE,SAAW,KAAKU,gBALlB,EADF,CANF,CADA,CADF;;;;;;;AAqBD,C,yBAlEuB,gBAAMO,S,EAA1BpB,W,CAMGqB,Y,CAAe,CACpBf,MAAO,qBAAMgB,SAAN,CAAgBC,WADH,C;;;AA+DT,qBAAMC,eAAN,CAAuBxB,WAAvB,CAAoC;AACjDyB,UAAW;AACTd,OAAQ;;;AAGF,2BAAiBe,WAAjB,CAA6B,QAA7B,CAHE,GADC,CADsC,CAApC,C","file":"ToDo_Screen.js","sourcesContent":["// @flow weak\n/* eslint react/prop-types: 0 */\n\nimport { Card, CardHeader } from 'material-ui/Card'\nimport TextField from 'material-ui/TextField'\nimport React from 'react'\nimport Relay from 'react-relay'\n\nimport ResponsiveContentArea from '../../../../webapp/components/ResponsiveContentArea'\nimport ToDo_addMutation from '../../relay/ToDo_addMutation'\n\n\nclass ToDo_Screen extends React.Component {\n\n  state: {\n    ToDo_Text_New: string\n  };\n\n  static contextTypes = {\n    relay: Relay.PropTypes.Environment,\n  }\n\n  constructor( props, context ) {\n\n    super( props, context )\n\n    this.state = {\n      ToDo_Text_New: '',\n    }\n  }\n\n\n  _handle_onKeyDown_AddToDo = ( e ) => {\n\n    if( e.keyCode === 13 ) {\n      this.context.relay.commitUpdate(\n        new ToDo_addMutation( {\n          ToDo_Text: this.state.ToDo_Text_New,\n          Viewer: this.props.Viewer\n        } )\n      )\n\n      this.setState( {\n        ToDo_Text_New: '',\n      } )\n    }\n  }\n\n  _handle_OnChange = ( event ) => {\n\n    this.setState( {\n      ToDo_Text_New: event.target.value,\n    } )\n  }\n\n  render() {\n\n    return(\n      <ResponsiveContentArea>\n      <Card initiallyExpanded={ true }>\n\n        <CardHeader title=\"TO DOs\" subtitle=\"List of TO DOs for user\" />\n\n        { this.props.children }\n\n        <div style={ { marginLeft: 4, marginRight: 4 } }>\n          <TextField\n            floatingLabelText=\"What needs to be done?\"\n            value={ this.state.ToDo_Text_New }\n            fullWidth={ true }\n            onKeyDown={ this._handle_onKeyDown_AddToDo }\n            onChange={ this._handle_OnChange }\n          />\n        </div>\n\n      </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default Relay.createContainer( ToDo_Screen, {\n  fragments: {\n    Viewer: () => Relay.QL `\n      fragment on Viewer {\n        ToDo_TotalCount,\n        ${ToDo_addMutation.getFragment('Viewer')},\n      }\n    `,\n  },\n} )\n"]}