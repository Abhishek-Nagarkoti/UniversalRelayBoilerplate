{"version":3,"sources":["../../../../../units/urb-example-todo/webapp/components/ToDo_List.jsx"],"names":["ToDo_List","_handle_onCheck_MarkAll","event","checked","context","relay","commitUpdate","ToDo_Complete","ToDos","props","Viewer","_handle_requestChange","value","router","push","edges","map","edge","node","id","variables","status","requestChange","numToDos","ToDo_TotalCount","numCompletedToDos","ToDo_CompletedCount","renderTabs","renderToDos","Component","contextTypes","PropTypes","Environment","object","isRequired","createContainer","initialVariables","limit","prepareVariables","nextStatus","fragments","getFragment"],"mappings":";;;AAGA,4B;AACA,uC;;AAEA,8C;AACA;AACA;;AAEA,4F;AACA,sC;;AAEMA,S;;;;;;;AAOJC,uB,CAA0B,SAAEC,KAAF,CAASC,OAAT,CAAsB;;AAE9C,MAAKC,OAAL,CAAaC,KAAb,CAAmBC,YAAnB;AACE,8CAAqC;AACnCC,cAAeJ,OADoB;AAEnCK,MAAO,MAAKC,KAAL,CAAWC,MAAX,CAAkBF,KAFU;AAGnCE,OAAQ,MAAKD,KAAL,CAAWC,MAHgB,CAArC,CADF;;;AAOD,C;;;;;;;;;;;;;AAaDC,qB,CAAwB,SAAEC,KAAF,CAAa;;AAEnC,MAAKR,OAAL,CAAaS,MAAb,CAAoBC,IAApB,CAA0B,SAAWF,KAArC;AACD,C,uHAda,iBAEZ,MAAO,MAAKH,KAAL,CAAWC,MAAX,CAAkBF,KAAlB,CAAwBO,KAAxB,CAA8BC,GAA9B,CAAmC,qBACxC,oDACE,IAAKC,KAAKC,IAAL,CAAUC,EADjB,CAEE,KAAMF,KAAKC,IAFb,CAGE,OAAQ,OAAKT,KAAL,CAAWC,MAHrB,EADwC,EAAnC,CAAP,CAOD,C;;AAOY;;AAEX;AACE,0CAAM,UAAY,CAAEE,MAAO,KAAKH,KAAL,CAAWJ,KAAX,CAAiBe,SAAjB,CAA2BC,MAApC,CAA4CC,cAAe,KAAKX,qBAAhE,CAAlB;AACE,yCAAK,MAAM,KAAX,CAAiB,MAAM,KAAvB,EADF;AAEE,yCAAK,MAAM,QAAX,CAAoB,MAAM,QAA1B,EAFF;AAGE,yCAAK,MAAM,WAAX,CAAuB,MAAM,WAA7B,EAHF,CADF;;;AAOD,C;;AAEQ;;AAEP,GAAIY,UAAW,KAAKd,KAAL,CAAWC,MAAX,CAAkBc,eAAjC;AACA,GAAIC,mBAAoB,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,mBAA1C;AACA;AACE;AACI,KAAKC,UAAL,EADJ;AAEE;AACE,MAAM,sBADR;AAEE,eAAiBJ,WAAaE,iBAFhC;AAGE,QAAU,KAAKxB,uBAHjB,EAFF;;AAOE;AACI,KAAK2B,WAAL,EADJ,CAPF,CADF;;;;AAaD,C,uBA9DqB,gBAAMC,S,EAAxB7B,S,CAEG8B,Y,CAAe,CACpBzB,MAAO,qBAAM0B,SAAN,CAAgBC,WADH,CAEpBnB,OAAQ,gBAAMkB,SAAN,CAAgBE,MAAhB,CAAuBC,UAFX,C;;;AA+DT,qBAAMC,eAAN,CAAuBnC,SAAvB,CAAkC;AAC/CoC,iBAAkB;AAChBf,OAAQ,KADQ;AAEhBgB,MAAO,UAFS,CAD6B;;;AAM/CC,gBAN+C,iCAMhB,IAAXjB,OAAW,OAAXA,MAAW;AAC7B,GAAIkB,WAAJ;AACA,GAAIlB,SAAW,QAAX,EAAuBA,SAAW,WAAtC;AACEkB,WAAalB,MAAb,CADF;;;;AAKEkB,WAAa,KAAb;;AAEF,MAAO;AACLlB,OAAQkB,UADH;AAELF,MAAO,UAFF,CAAP;;AAID,CAnB8C;;AAqB/CG,UAAW;AACT9B,OAAQ;;;;;;;AAOI,oBAAU+B,WAAV,CAAsB,MAAtB,CAPJ;;;AAUA,0CAAgCA,WAAhC,CAA4C,OAA5C,CAVA;;;AAaF,0CAAgCA,WAAhC,CAA4C,QAA5C,CAbE;AAcF,oBAAUA,WAAV,CAAsB,QAAtB,CAdE,GADC,CArBoC,CAAlC,C","file":"ToDo_List.js","sourcesContent":["// @flow weak\n\n\nimport React from 'react'\nimport Relay from 'react-relay'\n\nimport Checkbox from 'material-ui/Checkbox'\nimport { List } from 'material-ui/List'\nimport { Tabs, Tab } from 'material-ui/Tabs'\n\nimport ToDo_list_updateMarkAllMutation from '../../relay/ToDo_list_updateMarkAllMutation'\nimport ToDo_Item from './ToDo_Item'\n\nclass ToDo_List extends React.Component {\n\n  static contextTypes = {\n    relay: Relay.PropTypes.Environment,\n    router: React.PropTypes.object.isRequired,\n  }\n\n  _handle_onCheck_MarkAll = ( event, checked ) => {\n\n    this.context.relay.commitUpdate(\n      new ToDo_list_updateMarkAllMutation( {\n        ToDo_Complete: checked,\n        ToDos: this.props.Viewer.ToDos,\n        Viewer: this.props.Viewer,\n      } )\n    )\n  }\n\n  renderToDos() {\n\n    return this.props.Viewer.ToDos.edges.map( edge =>\n      <ToDo_Item\n        key={edge.node.id}\n        ToDo={edge.node}\n        Viewer={this.props.Viewer}\n      />\n    )\n  }\n\n  _handle_requestChange = ( value ) => {\n\n    this.context.router.push( '/todo/' + value )\n  }\n\n  renderTabs() {\n\n    return(\n      <Tabs valueLink={ { value: this.props.relay.variables.status, requestChange: this._handle_requestChange } }>\n        <Tab label=\"All\" value=\"any\" />\n        <Tab label=\"Active\" value=\"active\" />\n        <Tab label=\"Completed\" value=\"completed\" />\n      </Tabs>\n    )\n  }\n\n  render() {\n\n    var numToDos = this.props.Viewer.ToDo_TotalCount\n    var numCompletedToDos = this.props.Viewer.ToDo_CompletedCount\n    return(\n      <div>\n        { this.renderTabs( ) }\n        <Checkbox\n          label=\"Mark all as complete\"\n          defaultChecked={ numToDos === numCompletedToDos }\n          onCheck={ this._handle_onCheck_MarkAll }\n        />\n        <List>\n          { this.renderToDos( ) }\n        </List>\n      </div>\n    )\n  }\n}\n\nexport default Relay.createContainer( ToDo_List, {\n  initialVariables: {\n    status: 'any',\n    limit: 2147483647,\n  },\n\n  prepareVariables( { status } ) {\n    var nextStatus\n    if( status === 'active' || status === 'completed' )\n      nextStatus = status\n    else\n    // This matches the Backbone example, which displays all ToDos on an\n    // invalid route.\n      nextStatus = 'any'\n\n    return {\n      status: nextStatus,\n      limit: 2147483647,\n    }\n  },\n\n  fragments: {\n    Viewer: () => Relay.QL `\n      fragment on Viewer {\n        ToDo_CompletedCount,\n        ToDos(status: $status, first: $limit) {\n          edges {\n            node {\n              id,\n              ${ToDo_Item.getFragment('ToDo')},\n            },\n          },\n          ${ToDo_list_updateMarkAllMutation.getFragment('ToDos')},\n        },\n        ToDo_TotalCount,\n        ${ToDo_list_updateMarkAllMutation.getFragment('Viewer')},\n        ${ToDo_Item.getFragment('Viewer')},\n      }\n    `,\n  },\n} )\n"]}