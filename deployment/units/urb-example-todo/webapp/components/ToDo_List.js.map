{"version":3,"sources":["../../../../../units/urb-example-todo/webapp/components/ToDo_List.jsx"],"names":["ToDo_List","_handle_onCheck_MarkAll","event","checked","context","relay","commitUpdate","ToDo_Complete","ToDos","props","Viewer","_handle_requestChange","router","push","value","edges","map","edge","node","id","variables","status","requestChange","numToDos","ToDo_TotalCount","numCompletedToDos","ToDo_CompletedCount","renderTabs","renderToDos","Component","contextTypes","PropTypes","Environment","object","isRequired","createContainer","initialVariables","limit","prepareVariables","nextStatus","fragments","getFragment"],"mappings":";;AAEA,4B;AACA,uC;;AAEA,8C;AACA;AACA;;AAEA,4F;AACA,sC;;AAEMA,S;;;;;;AAMJC,uB,CAA0B,SAACC,KAAD,CAAQC,OAAR,CAAoB;AAC5C,MAAKC,OAAL,CAAaC,KAAb,CAAmBC,YAAnB;AACE,8CAAoC;AAClCC,cAAeJ,OADmB;AAElCK,MAAO,MAAKC,KAAL,CAAWC,MAAX,CAAkBF,KAFS;AAGlCE,OAAQ,MAAKD,KAAL,CAAWC,MAHe,CAApC,CADF;;;AAOD,C;;;;;;;;AAQDC,qB,CAAwB,eAAS;AAC/B,MAAKP,OAAL,CAAaQ,MAAb,CAAoBC,IAApB,CAAyB,SAAWC,KAApC;AACD,C,uHARa,iBACZ,MAAO,MAAKL,KAAL,CAAWC,MAAX,CAAkBF,KAAlB,CAAwBO,KAAxB,CAA8BC,GAA9B,CAAkC,qBACvC,oDAAW,IAAKC,KAAKC,IAAL,CAAUC,EAA1B,CAA8B,KAAMF,KAAKC,IAAzC,CAA+C,OAAQ,OAAKT,KAAL,CAAWC,MAAlE,EADuC,EAAlC,CAAP,CAGD,C;;AAMY;AACX;AACE;AACE,UAAW;AACTI,MAAO,KAAKL,KAAL,CAAWJ,KAAX,CAAiBe,SAAjB,CAA2BC,MADzB;AAETC,cAAe,KAAKX,qBAFX,CADb;;;AAME,yCAAK,MAAM,KAAX,CAAiB,MAAM,KAAvB,EANF;AAOE,yCAAK,MAAM,QAAX,CAAoB,MAAM,QAA1B,EAPF;AAQE,yCAAK,MAAM,WAAX,CAAuB,MAAM,WAA7B,EARF,CADF;;;AAYD,C;;AAEQ;AACP,GAAIY,UAAW,KAAKd,KAAL,CAAWC,MAAX,CAAkBc,eAAjC;AACA,GAAIC,mBAAoB,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,mBAA1C;AACA;AACE;AACG,KAAKC,UAAL,EADH;AAEE;AACE,MAAM,sBADR;AAEE,eAAgBJ,WAAaE,iBAF/B;AAGE,QAAS,KAAKxB,uBAHhB,EAFF;;AAOE;AACG,KAAK2B,WAAL,EADH,CAPF,CADF;;;;AAaD,C,uBAzDqB,gBAAMC,S,EAAxB7B,S,CACG8B,Y,CAAe,CACpBzB,MAAO,qBAAM0B,SAAN,CAAgBC,WADH,CAEpBpB,OAAQ,gBAAMmB,SAAN,CAAgBE,MAAhB,CAAuBC,UAFX,C;;;AA2DT,qBAAMC,eAAN,CAAsBnC,SAAtB,CAAiC;AAC9CoC,iBAAkB;AAChBf,OAAQ,KADQ;AAEhBgB,MAAO,UAFS,CAD4B;;;AAM9CC,gBAN8C,iCAMjB,IAAVjB,OAAU,OAAVA,MAAU;AAC3B,GAAIkB,WAAJ;AACA,GAAIlB,SAAW,QAAX,EAAuBA,SAAW,WAAtC,CAAmDkB,WAAalB,MAAb,CAAnD;;;;AAIEkB,WAAa,KAAb;;AAEF,MAAO;AACLlB,OAAQkB,UADH;AAELF,MAAO,UAFF,CAAP;;AAID,CAlB6C;;AAoB9CG,UAAW;AACT9B,OAAQ;;;;;;;AAOI,oBAAU+B,WAAV,CAAsB,MAAtB,CAPJ;;;AAUA,0CAAgCA,WAAhC,CAA4C,OAA5C,CAVA;;;AAaF,0CAAgCA,WAAhC,CAA4C,QAA5C,CAbE;AAcF,oBAAUA,WAAV,CAAsB,QAAtB,CAdE,GADC,CApBmC,CAAjC,C","file":"ToDo_List.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport Relay from 'react-relay'\n\nimport Checkbox from 'material-ui/Checkbox'\nimport { List } from 'material-ui/List'\nimport { Tabs, Tab } from 'material-ui/Tabs'\n\nimport ToDo_list_updateMarkAllMutation from '../../relay/ToDo_list_updateMarkAllMutation'\nimport ToDo_Item from './ToDo_Item'\n\nclass ToDo_List extends React.Component {\n  static contextTypes = {\n    relay: Relay.PropTypes.Environment,\n    router: React.PropTypes.object.isRequired,\n  }\n\n  _handle_onCheck_MarkAll = (event, checked) => {\n    this.context.relay.commitUpdate(\n      new ToDo_list_updateMarkAllMutation({\n        ToDo_Complete: checked,\n        ToDos: this.props.Viewer.ToDos,\n        Viewer: this.props.Viewer,\n      }),\n    )\n  }\n\n  renderToDos() {\n    return this.props.Viewer.ToDos.edges.map(edge =>\n      <ToDo_Item key={edge.node.id} ToDo={edge.node} Viewer={this.props.Viewer} />,\n    )\n  }\n\n  _handle_requestChange = value => {\n    this.context.router.push('/todo/' + value)\n  }\n\n  renderTabs() {\n    return (\n      <Tabs\n        valueLink={{\n          value: this.props.relay.variables.status,\n          requestChange: this._handle_requestChange,\n        }}\n      >\n        <Tab label=\"All\" value=\"any\" />\n        <Tab label=\"Active\" value=\"active\" />\n        <Tab label=\"Completed\" value=\"completed\" />\n      </Tabs>\n    )\n  }\n\n  render() {\n    var numToDos = this.props.Viewer.ToDo_TotalCount\n    var numCompletedToDos = this.props.Viewer.ToDo_CompletedCount\n    return (\n      <div>\n        {this.renderTabs()}\n        <Checkbox\n          label=\"Mark all as complete\"\n          defaultChecked={numToDos === numCompletedToDos}\n          onCheck={this._handle_onCheck_MarkAll}\n        />\n        <List>\n          {this.renderToDos()}\n        </List>\n      </div>\n    )\n  }\n}\n\nexport default Relay.createContainer(ToDo_List, {\n  initialVariables: {\n    status: 'any',\n    limit: 2147483647,\n  },\n\n  prepareVariables({ status }) {\n    var nextStatus\n    if (status === 'active' || status === 'completed') nextStatus = status\n    else\n      // This matches the Backbone example, which displays all ToDos on an\n      // invalid route.\n      nextStatus = 'any'\n\n    return {\n      status: nextStatus,\n      limit: 2147483647,\n    }\n  },\n\n  fragments: {\n    Viewer: () => Relay.QL`\n      fragment on Viewer {\n        ToDo_CompletedCount,\n        ToDos(status: $status, first: $limit) {\n          edges {\n            node {\n              id,\n              ${ToDo_Item.getFragment('ToDo')},\n            },\n          },\n          ${ToDo_list_updateMarkAllMutation.getFragment('ToDos')},\n        },\n        ToDo_TotalCount,\n        ${ToDo_list_updateMarkAllMutation.getFragment('Viewer')},\n        ${ToDo_Item.getFragment('Viewer')},\n      }\n    `,\n  },\n})\n"]}