{"version":3,"sources":["../../../../units/urb-example-todo/relay/ToDo_addMutation.js"],"names":["ToDo_addMutation","type","parentName","parentID","props","Viewer","id","connectionName","edgeName","rangeBehaviors","ToDo_Text","ToDosEdge","node","ToDo_Complete","ToDo_TotalCount","Mutation","fragments"],"mappings":";;AAEA,uC;;;AAGqBA,gB;;;;;;;;;AASL;AACZ;AACD,C;AACa;AACZ;;;;;;;;;AASD,C;AACY;AACX,MAAO,CAAE;AACPC,KAAM,WADC;AAEPC,WAAY,QAFL;AAGPC,SAAU,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,EAHrB;AAIPC,eAAgB,OAJT;AAKPC,SAAU,WALH;AAMPC,eAAgB;AACd,GAAI,QADU;AAEd,cAAe,QAFD;AAGd,iBAAkB,QAHJ;AAId,oBAAqB,IAJP,CANT,CAAF,CAAP;;;AAaD,C;AACc;AACb,MAAO;AACLC,UAAW,KAAKN,KAAL,CAAWM,SADjB,CAAP;;AAGD,C;AACuB;AACtB,MAAO;;;AAGLC,UAAW;AACTC,KAAM;AACJC,cAAe,KADX;AAEJH,UAAW,KAAKN,KAAL,CAAWM,SAFlB,CADG,CAHN;;;AASLL,OAAQ;AACNC,GAAI,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,EADhB;AAENQ,gBAAiB,KAAKV,KAAL,CAAWC,MAAX,CAAkBS,eAAlB,CAAoC,CAF/C,CATH,CAAP;;;AAcD,C,8BA1D2C,qBAAMC,Q,EAA/Bf,gB,CACZgB,S,CAAY,CACjBX,OAAQ,oTADS,C,iBADAL,gB","file":"ToDo_addMutation.js","sourcesContent":["// @flow weak\n\nimport Relay from 'react-relay'\n\n\nexport default class ToDo_addMutation extends Relay.Mutation {\n  static fragments = {\n    Viewer: () => Relay.QL `\n      fragment on Viewer {\n        id,\n        ToDo_TotalCount,\n      }\n    `,\n  }\n  getMutation() {\n    return Relay.QL `mutation{ToDo_add}`\n  }\n  getFatQuery() {\n    return Relay.QL `\n      fragment on ToDo_addPayload {\n        ToDosEdge,\n        Viewer {\n          ToDos,\n          ToDo_TotalCount,\n        },\n      }\n    `\n  }\n  getConfigs() {\n    return [ {\n      type: 'RANGE_ADD',\n      parentName: 'Viewer',\n      parentID: this.props.Viewer.id,\n      connectionName: 'ToDos',\n      edgeName: 'ToDosEdge',\n      rangeBehaviors: {\n        '': 'append',\n        'status(any)': 'append',\n        'status(active)': 'append',\n        'status(completed)': null,\n      },\n    } ]\n  }\n  getVariables() {\n    return {\n      ToDo_Text: this.props.ToDo_Text,\n    }\n  }\n  getOptimisticResponse() {\n    return {\n      // FIXME: ToDo_TotalCount gets updated optimistically, but this edge does not\n      // get added until the server responds\n      ToDosEdge: {\n        node: {\n          ToDo_Complete: false,\n          ToDo_Text: this.props.ToDo_Text,\n        },\n      },\n      Viewer: {\n        id: this.props.Viewer.id,\n        ToDo_TotalCount: this.props.Viewer.ToDo_TotalCount + 1,\n      },\n    }\n  }\n}\n"]}