{"version":3,"sources":["../../../../units/urb-example-todo/relay/ToDo_updateStatusMutation.js"],"names":["ToDo_updateStatusMutation","type","fieldIDs","ToDo","props","id","Viewer","ToDo_Complete","ViewerPayload","ToDo_CompletedCount","Mutation","fragments"],"mappings":";;AAEA,uC;;AAEqBA,yB;;;;;;;;;;;;;;;AAeL;AACZ;AACD,C;AACa;AACZ;;;;;;;;;;;AAWD,C;AACY;AACX,MAAO;AACL;AACEC,KAAM,eADR;AAEEC,SAAU;AACRC,KAAM,KAAKC,KAAL,CAAWD,IAAX,CAAgBE,EADd;AAERC,OAAQ,KAAKF,KAAL,CAAWE,MAAX,CAAkBD,EAFlB,CAFZ,CADK,CAAP;;;;AASD,C;AACc;AACb,MAAO;AACLE,cAAe,KAAKH,KAAL,CAAWG,aADrB;AAELF,GAAI,KAAKD,KAAL,CAAWD,IAAX,CAAgBE,EAFf,CAAP;;AAID,C;AACuB;AACtB,GAAIG,eAAgB,CAAEH,GAAI,KAAKD,KAAL,CAAWE,MAAX,CAAkBD,EAAxB,CAApB;AACA,GAAI,KAAKD,KAAL,CAAWE,MAAX,CAAkBG,mBAAlB,EAAyC,IAA7C,CAAmD;AACjDD,cAAcC,mBAAd,CAAoC,KAAKL,KAAL,CAAWG,aAAX;AAChC,KAAKH,KAAL,CAAWE,MAAX,CAAkBG,mBAAlB,CAAwC,CADR;AAEhC,KAAKL,KAAL,CAAWE,MAAX,CAAkBG,mBAAlB,CAAwC,CAF5C;AAGD;AACD,MAAO;AACLN,KAAM;AACJI,cAAe,KAAKH,KAAL,CAAWG,aADtB;AAEJF,GAAI,KAAKD,KAAL,CAAWD,IAAX,CAAgBE,EAFhB,CADD;;AAKLC,OAAQE,aALH,CAAP;;AAOD,C,uCA9DoD,qBAAME,Q,EAAxCV,yB,CACZW,S,CAAY,CACjBR,KAAM,qPADW,CAOjBG,OAAQ,iUAPS,C,iBADAN,yB","file":"ToDo_updateStatusMutation.js","sourcesContent":["// @flow\n\nimport Relay from 'react-relay'\n\nexport default class ToDo_updateStatusMutation extends Relay.Mutation {\n  static fragments = {\n    ToDo: () => Relay.QL`\n      fragment on ToDo {\n        id,\n      }\n    `,\n    // TODO: Mark ToDo_CompletedCount optional\n    Viewer: () => Relay.QL`\n      fragment on Viewer {\n        id,\n        ToDo_CompletedCount,\n      }\n    `,\n  }\n  getMutation() {\n    return Relay.QL`mutation{ToDo_updateStatus}`\n  }\n  getFatQuery() {\n    return Relay.QL`\n      fragment on ToDo_updateStatusPayload {\n        ToDo {\n          ToDo_Complete,\n        },\n        Viewer {\n          ToDo_CompletedCount,\n          ToDos,\n        },\n      }\n    `\n  }\n  getConfigs() {\n    return [\n      {\n        type: 'FIELDS_CHANGE',\n        fieldIDs: {\n          ToDo: this.props.ToDo.id,\n          Viewer: this.props.Viewer.id,\n        },\n      },\n    ]\n  }\n  getVariables() {\n    return {\n      ToDo_Complete: this.props.ToDo_Complete,\n      id: this.props.ToDo.id,\n    }\n  }\n  getOptimisticResponse() {\n    var ViewerPayload = { id: this.props.Viewer.id }\n    if (this.props.Viewer.ToDo_CompletedCount != null) {\n      ViewerPayload.ToDo_CompletedCount = this.props.ToDo_Complete\n        ? this.props.Viewer.ToDo_CompletedCount + 1\n        : this.props.Viewer.ToDo_CompletedCount - 1\n    }\n    return {\n      ToDo: {\n        ToDo_Complete: this.props.ToDo_Complete,\n        id: this.props.ToDo.id,\n      },\n      Viewer: ViewerPayload,\n    }\n  }\n}\n"]}