{"version":3,"sources":["../../../../../units/urb-example-translaticiarum/graphql/mutation/Translaticiarum_update.js"],"names":["name","inputFields","id","type","Translaticiarum_Type","Translaticiarum_Date","Translaticiarum_Time","outputFields","Translaticiarum","resolve","context","local_id","args","objectManager","rootValue","getOneObject","mutateAndGetPayload","update","then"],"mappings":";;AAEA;AACA;;AAEA,yE;;AAEA,gE;;AAEe,+CAA8B;AAC3CA,KAAM,wBADqC;AAE3CC,YAAa;AACXC,GAAsB,CAAEC,KAAM,+CAAR,CADX;AAEXC,qBAAsB,CAAED,KAAM,gDAAR,CAFX;AAGXE,qBAAsB,CAAEF,KAAM,sDAAR,CAHX;AAIXG,qBAAsB,CAAEH,KAAM,sDAAR,CAJX,CAF8B;;AAQ3CI,aAAc;AACZC,gBAAiB;AACfL,kCADe;AAEfM,QAAS,4BAA2BC,OAA3B,WAAGC,SAAH,MAAGA,QAAH,IAAmBC,KAAnB,uCAAiDC,cAAjD,OAAsCC,SAAtC,OAAsED,eAAcE,YAAd,CAA4B,iBAA5B,CAA+C,CAAEb,GAAIS,QAAN,CAA/C,CAAtE,EAFM,CADL,CAR6B;;;AAc3CK,oBAAqB,mCAA2EN,OAA3E,OAAsH,IAAnHR,GAAmH,OAAnHA,EAAmH,CAA/GE,oBAA+G,OAA/GA,oBAA+G,CAAzFC,oBAAyF,OAAzFA,oBAAyF,CAAnEC,oBAAmE,OAAnEA,oBAAmE,IAArBO,cAAqB,OAAhCC,SAAgC;AACzI,GAAIH,UAAW,+BAAaT,EAAb,EAAiBA,EAAhC;AACA,MAAOW,eAAcI,MAAd,CAAsB,iBAAtB,CAAyC;AAC9Cf,GAAIS,QAD0C;AAE9CP,yCAF8C;AAG9CC,yCAH8C;AAI9CC,yCAJ8C,CAAzC;;AAMNY,IANM,CAMA,iBAAS,CAACP,iBAAD,CAAT,EANA,CAAP;;AAQD,CAxB0C,CAA9B,C","file":"Translaticiarum_update.js","sourcesContent":["// @flow weak\n\nimport { fromGlobalId, mutationWithClientMutationId } from 'graphql-relay';\nimport { GraphQLInt, GraphQLID, GraphQLNonNull } from 'graphql'\n\nimport GraphQLDateTime from \"../../../../graphql/type/GraphQLDateTime\";\n\nimport TranslaticiarumType from '../type/TranslaticiarumType';\n\nexport default mutationWithClientMutationId( {\n  name: 'Translaticiarum_update',\n  inputFields: {\n    id:                   { type: new GraphQLNonNull( GraphQLID ) },\n    Translaticiarum_Type: { type: new GraphQLNonNull( GraphQLInt ) },\n    Translaticiarum_Date: { type: new GraphQLNonNull( GraphQLDateTime ) },\n    Translaticiarum_Time: { type: new GraphQLNonNull( GraphQLDateTime ) },\n  },\n  outputFields: {\n    Translaticiarum: {\n      type: TranslaticiarumType,\n      resolve: ( {local_id}, { ...args }, context, { rootValue: objectManager } ) => objectManager.getOneObject( 'Translaticiarum', { id: local_id } ),\n    }\n  },\n  mutateAndGetPayload: ( {id, Translaticiarum_Type, Translaticiarum_Date, Translaticiarum_Time }, context, { rootValue: objectManager } ) => {\n    var local_id = fromGlobalId(id).id;\n    return objectManager.update( 'Translaticiarum', {\n      id: local_id,\n      Translaticiarum_Type,\n      Translaticiarum_Date,\n      Translaticiarum_Time,\n    } )\n    .then( ( ) => ( {local_id} ) )\n    ;\n  },\n} );\n"]}