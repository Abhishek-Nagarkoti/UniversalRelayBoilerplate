{"version":3,"sources":["../../../../../units/urb-example-translaticiarum/graphql/mutation/Translaticiarum_update.js"],"names":["name","inputFields","id","type","Translaticiarum_Type","Translaticiarum_Date","Translaticiarum_Time","outputFields","Translaticiarum","resolve","context","local_id","args","objectManager","rootValue","getOneObject","mutateAndGetPayload","update","then"],"mappings":";;AAEA;AACA;;AAEA,yE;;AAEA,gE;;AAEe,+CAA6B;AAC1CA,KAAM,wBADoC;AAE1CC,YAAa;AACXC,GAAI,CAAEC,KAAM,+CAAR,CADO;AAEXC,qBAAsB,CAAED,KAAM,gDAAR,CAFX;AAGXE,qBAAsB,CAAEF,KAAM,sDAAR,CAHX;AAIXG,qBAAsB,CAAEH,KAAM,sDAAR,CAJX,CAF6B;;AAQ1CI,aAAc;AACZC,gBAAiB;AACfL,kCADe;AAEfM,QAAS,4BAA4BC,OAA5B,WAAGC,SAAH,MAAGA,QAAH,IAAoBC,KAApB,uCAAkDC,cAAlD,OAAuCC,SAAvC;AACPD,cAAcE,YAAd,CAA2B,iBAA3B,CAA8C,CAAEb,GAAIS,QAAN,CAA9C,CADO,GAFM,CADL,CAR4B;;;AAe1CK,oBAAqB;;AAEnBN,OAFmB;;AAIhB,IAHDR,GAGC,OAHDA,EAGC,CAHGE,oBAGH,OAHGA,oBAGH,CAHyBC,oBAGzB,OAHyBA,oBAGzB,CAH+CC,oBAG/C,OAH+CA,oBAG/C,IADUO,cACV,OADDC,SACC;AACH,GAAIH,UAAW,+BAAaT,EAAb,EAAiBA,EAAhC;AACA,MAAOW;AACJI,MADI,CACG,iBADH,CACsB;AACzBf,GAAIS,QADqB;AAEzBP,yCAFyB;AAGzBC,yCAHyB;AAIzBC,yCAJyB,CADtB;;AAOJY,IAPI,CAOC,iBAAO,CAAEP,iBAAF,CAAP,EAPD,CAAP;AAQD,CA7ByC,CAA7B,C","file":"Translaticiarum_update.js","sourcesContent":["// @flow\n\nimport { fromGlobalId, mutationWithClientMutationId } from 'graphql-relay'\nimport { GraphQLInt, GraphQLID, GraphQLNonNull } from 'graphql'\n\nimport GraphQLDateTime from '../../../../graphql/type/GraphQLDateTime'\n\nimport TranslaticiarumType from '../type/TranslaticiarumType'\n\nexport default mutationWithClientMutationId({\n  name: 'Translaticiarum_update',\n  inputFields: {\n    id: { type: new GraphQLNonNull(GraphQLID) },\n    Translaticiarum_Type: { type: new GraphQLNonNull(GraphQLInt) },\n    Translaticiarum_Date: { type: new GraphQLNonNull(GraphQLDateTime) },\n    Translaticiarum_Time: { type: new GraphQLNonNull(GraphQLDateTime) },\n  },\n  outputFields: {\n    Translaticiarum: {\n      type: TranslaticiarumType,\n      resolve: ({ local_id }, { ...args }, context, { rootValue: objectManager }) =>\n        objectManager.getOneObject('Translaticiarum', { id: local_id }),\n    },\n  },\n  mutateAndGetPayload: (\n    { id, Translaticiarum_Type, Translaticiarum_Date, Translaticiarum_Time },\n    context,\n    { rootValue: objectManager },\n  ) => {\n    var local_id = fromGlobalId(id).id\n    return objectManager\n      .update('Translaticiarum', {\n        id: local_id,\n        Translaticiarum_Type,\n        Translaticiarum_Date,\n        Translaticiarum_Time,\n      })\n      .then(() => ({ local_id }))\n  },\n})\n"]}