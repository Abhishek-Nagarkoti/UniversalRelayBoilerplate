{"version":3,"sources":["../../../../../units/urb-example-translaticiarum/webapp/components/Translaticiarum_Grid.js"],"names":["dayOfWeek","Translaticiarum_Grid","props","context","Date_Start","Date","setHours","setMinutes","setSeconds","setMilliseconds","state","transliticiarumDays","dayCount","length","results","ixDay","getTime","Viewer","Translaticiarums","edges","map","Translaticiarum_Date_Epoch","edge","node","Translaticiarum_Date","resultsForDay","type","Translaticiarum_Type","arrTranslaticiarum","push","TranslaticiarumByDateAndType","translaticiarumType","transliticiarumDay","cell","getUTCDay","TranslaticiarumByType","a_Translaticiarum","Translaticiarum_Time","width","translaticiarumTypes","firstDayEpoch","numberOfDays","Math","floor","rbContext","viewportDimensions","get","day","getTranslaticiarumByDateAndType","float","marginTop","marginRight","_handle_onTouchTap_Add","renderCell","_handle_onChange_Date_Start","toJSON","_handle_updateHandler_Translaticiarum_Add","Component","contextTypes","object","isRequired","relay","PropTypes","Environment","event","value","setState","commitUpdate","Translaticiarum_properties","refs","Translaticiarum_Properties","_handle_Open","createContainer","fragments","getFragment"],"mappings":"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","file":"Translaticiarum_Grid.js","sourcesContent":["// @flow\n\nimport { Card, CardActions, CardHeader } from 'material-ui/Card'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport DatePicker from 'material-ui/DatePicker/DatePicker'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport Relay from 'react-relay'\n\nimport {\n  dateLocalToUTC,\n  dateUTCToLocal,\n  dateFormat,\n} from '../../../../webapp/scripts/DateTimeHelpers'\nimport ResponsiveContentArea from '../../../../webapp/components/ResponsiveContentArea'\nimport Translaticiarum_addMutation from '../../relay/Translaticiarum_addMutation'\nimport Translaticiarum_deleteMutation from '../../relay/Translaticiarum_deleteMutation'\nimport Translaticiarum_Icon from './Translaticiarum_Icon'\nimport Translaticiarum_updateMutation from '../../relay/Translaticiarum_updateMutation'\nimport Translaticiarum_Properties from './Translaticiarum_Properties'\n\nconst dayOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n\nclass Translaticiarum_Grid extends React.Component {\n  state: {\n    Date_Start: Date,\n  }\n\n  static contextTypes = {\n    rbContext: PropTypes.object.isRequired,\n    relay: Relay.PropTypes.Environment,\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    const Date_Start = new Date()\n    Date_Start.setHours(0)\n    Date_Start.setMinutes(0)\n    Date_Start.setSeconds(0)\n    Date_Start.setMilliseconds(0)\n\n    this.state = {\n      Date_Start: Date_Start,\n    }\n  }\n\n  _handle_onChange_Date_Start = (event, value) => {\n    this.setState({\n      Date_Start: value,\n    })\n  }\n\n  _handle_updateHandler_Translaticiarum_Add = Translaticiarum_properties => {\n    this.context.relay.commitUpdate(\n      new Translaticiarum_addMutation({ ...Translaticiarum_properties, Viewer: this.props.Viewer }),\n    )\n  }\n\n  _handle_onTouchTap_Add = () => {\n    this.refs.Translaticiarum_Properties._handle_Open()\n  }\n\n  getTranslaticiarumByDateAndType(transliticiarumDays: Array<Date>) {\n    const dayCount = transliticiarumDays.length - 1 // First element is null\n\n    // Array with the dates\n    const results = {}\n    for (let ixDay = 1; ixDay <= dayCount; ixDay++) {\n      results[transliticiarumDays[ixDay].getTime()] = {}\n    }\n\n    this.props.Viewer.Translaticiarums.edges.map(edge => {\n      const Translaticiarum_Date_Epoch = new Date(edge.node.Translaticiarum_Date).getTime()\n\n      const resultsForDay = results[Translaticiarum_Date_Epoch]\n      if (resultsForDay != null) {\n        const type = edge.node.Translaticiarum_Type\n        let arrTranslaticiarum = resultsForDay[type]\n        if (arrTranslaticiarum == null) arrTranslaticiarum = resultsForDay[type] = []\n\n        arrTranslaticiarum.push(edge.node)\n      }\n    })\n\n    return results\n  }\n\n  renderCell(TranslaticiarumByDateAndType, translaticiarumType, transliticiarumDay) {\n    let cell\n\n    // Type 0 does not exist, this indicates that a row should be dates\n    if (translaticiarumType == 0) {\n      // Blank cell top left\n      if (transliticiarumDay == null) cell = ''\n      else {\n        // Will display day of week\n        cell = dayOfWeek[dateUTCToLocal(transliticiarumDay).getUTCDay()]\n      }\n    } else {\n      // On the left, the types of translaticiarums\n      if (transliticiarumDay == null) cell = Translaticiarum_Icon(translaticiarumType)\n      else {\n        cell = '-'\n        const TranslaticiarumByType = TranslaticiarumByDateAndType[transliticiarumDay.getTime()]\n        if (TranslaticiarumByType != null) {\n          const arrTranslaticiarum = TranslaticiarumByType[translaticiarumType]\n          if (arrTranslaticiarum != null) {\n            cell = ''\n            for (let a_Translaticiarum of arrTranslaticiarum)\n              cell += dateFormat(\n                dateUTCToLocal(new Date(a_Translaticiarum.Translaticiarum_Time)),\n                'h:mmtt',\n              )\n            //cell = \"X\"\n          }\n        }\n      }\n    }\n\n    return <td style={{ width: 100 }} key={transliticiarumDay}>{cell}</td>\n  }\n\n  render() {\n    let translaticiarumTypes = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n\n    const firstDayEpoch = dateLocalToUTC(this.state.Date_Start).getTime()\n\n    // Depending on width, determine the number of days shows. Each day is 100 pixels\n    let numberOfDays = Math.floor(\n      (this.context.rbContext.viewportDimensions.get(this, 'contentWidth') - 120) / 100,\n    )\n    if (numberOfDays < 1) numberOfDays = 1\n    else if (numberOfDays > 7) numberOfDays = 7\n\n    let transliticiarumDays: Array<Date> = []\n    for (let day = 0; day < numberOfDays; day++)\n      transliticiarumDays[day + 1] = new Date(firstDayEpoch + day * 24 * 60 * 60 * 1000)\n\n    const TranslaticiarumByDateAndType = this.getTranslaticiarumByDateAndType(transliticiarumDays)\n\n    return (\n      <ResponsiveContentArea>\n        <Card initiallyExpanded={true}>\n\n          <CardHeader title=\"Translaticiarum\" subtitle=\"This means routine in Latin\" />\n\n          <div style={{ float: 'right', marginTop: -58, marginRight: 20 }}>\n            <FloatingActionButton\n              secondary={true}\n              mini={true}\n              onTouchTap={this._handle_onTouchTap_Add}\n            >\n              <ContentAdd />\n            </FloatingActionButton>\n          </div>\n\n          <table>\n            <tbody>\n              {translaticiarumTypes.map(translaticiarumType =>\n                <tr key={translaticiarumType}>\n                  {transliticiarumDays.map(transliticiarumDay =>\n                    this.renderCell(\n                      TranslaticiarumByDateAndType,\n                      translaticiarumType,\n                      transliticiarumDay,\n                    ),\n                  )}\n                </tr>,\n              )}\n            </tbody>\n          </table>\n\n          <CardActions>\n            <DatePicker\n              hintText=\"Date Start\"\n              value={this.state.Date_Start}\n              onChange={this._handle_onChange_Date_Start}\n            />\n          </CardActions>\n\n          <Translaticiarum_Properties\n            ref=\"Translaticiarum_Properties\"\n            Translaticiarum_Type={1}\n            Translaticiarum_Date={new Date().toJSON()}\n            Translaticiarum_Time={new Date().toJSON()}\n            updateHandler={this._handle_updateHandler_Translaticiarum_Add}\n          />\n\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default Relay.createContainer(Translaticiarum_Grid, {\n  fragments: {\n    Viewer: () => Relay.QL`\n      fragment on Viewer {\n        Translaticiarums(first: 2147483647) {\n          edges {\n            node {\n              id,\n              Translaticiarum_Date,\n              Translaticiarum_Time,\n              Translaticiarum_Type,\n              ${Translaticiarum_deleteMutation.getFragment('Translaticiarum')},\n              ${Translaticiarum_updateMutation.getFragment('Translaticiarum')},\n            },\n          },\n        },\n        ${Translaticiarum_addMutation.getFragment('Viewer')},\n        ${Translaticiarum_deleteMutation.getFragment('Viewer')},\n      }\n    `,\n  },\n})\n"]}