{"version":3,"sources":["../../../../../units/urb-example-translaticiarum/webapp/components/Translaticiarum_Grid.js"],"names":["dayOfWeek","Translaticiarum_Grid","props","context","Date_Start","Date","setHours","setMinutes","setSeconds","setMilliseconds","state","transliticiarumDays","dayCount","length","results","ixDay","getTime","Viewer","Translaticiarums","edges","map","edge","Translaticiarum_Date_Epoch","node","Translaticiarum_Date","resultsForDay","type","Translaticiarum_Type","arrTranslaticiarum","push","TranslaticiarumByDateAndType","translaticiarumType","transliticiarumDay","cell","getUTCDay","TranslaticiarumByType","a_Translaticiarum","Translaticiarum_Time","width","translaticiarumTypes","firstDayEpoch","numberOfDays","Math","floor","rbContext","viewportDimensions","get","day","getTranslaticiarumByDateAndType","float","marginTop","marginRight","_handle_onTouchTap_Add","renderCell","_handle_onChange_Date_Start","toJSON","_handle_updateHandler_Translaticiarum_Add","Component","contextTypes","PropTypes","object","isRequired","relay","Environment","event","value","setState","Translaticiarum_properties","commitUpdate","refs","Translaticiarum_Properties","_handle_Open","createContainer","fragments","getFragment"],"mappings":"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","file":"Translaticiarum_Grid.js","sourcesContent":["// @flow weak\n/* eslint react/prop-types: 0 */\n\nimport { Card, CardActions, CardHeader } from 'material-ui/Card'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport DatePicker from 'material-ui/DatePicker/DatePicker'\nimport FloatingActionButton from 'material-ui/FloatingActionButton'\nimport React from 'react'\nimport Relay from 'react-relay'\n\nimport { dateLocalToUTC, dateUTCToLocal, dateFormat } from '../../../../webapp/scripts/DateTimeHelpers'\nimport ResponsiveContentArea from '../../../../webapp/components/ResponsiveContentArea'\nimport Translaticiarum_addMutation from '../../relay/Translaticiarum_addMutation'\nimport Translaticiarum_deleteMutation from '../../relay/Translaticiarum_deleteMutation'\nimport Translaticiarum_Icon from './Translaticiarum_Icon'\nimport Translaticiarum_updateMutation from '../../relay/Translaticiarum_updateMutation'\nimport Translaticiarum_Properties from './Translaticiarum_Properties'\n\n\nconst dayOfWeek = [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ]\n\n\nclass Translaticiarum_Grid extends React.Component {\n\n  state: {\n    Date_Start: Date,\n  };\n\n  static contextTypes = {\n    rbContext: React.PropTypes.object.isRequired,\n    relay: Relay.PropTypes.Environment,\n  }\n\n  constructor( props, context ) {\n\n    super( props, context )\n\n    const Date_Start = new Date()\n    Date_Start.setHours( 0 )\n    Date_Start.setMinutes( 0 )\n    Date_Start.setSeconds( 0 )\n    Date_Start.setMilliseconds( 0 )\n\n    this.state = {\n      Date_Start: Date_Start,\n    }\n  }\n\n  _handle_onChange_Date_Start = ( event, value ) => {\n\n    this.setState( {\n      Date_Start: value\n    } )\n  }\n\n  _handle_updateHandler_Translaticiarum_Add = ( Translaticiarum_properties ) => {\n\n    this.context.relay.commitUpdate(\n      new Translaticiarum_addMutation( { ...Translaticiarum_properties, Viewer: this.props.Viewer } )\n    )\n  }\n\n  _handle_onTouchTap_Add = () => {\n\n    this.refs.Translaticiarum_Properties._handle_Open()\n  }\n\n  getTranslaticiarumByDateAndType( transliticiarumDays: Array < Date > ) {\n\n    const dayCount = transliticiarumDays.length - 1 // First element is null\n\n    // Array with the dates\n    const results = {}\n    for( let ixDay = 1; ixDay <= dayCount; ixDay++ ) {\n      results[ transliticiarumDays[ ixDay ].getTime() ] = {}\n    }\n\n    this.props.Viewer.Translaticiarums.edges.map( ( edge ) => {\n\n      const Translaticiarum_Date_Epoch = new Date( edge.node.Translaticiarum_Date ).getTime()\n\n      const resultsForDay = results[ Translaticiarum_Date_Epoch ]\n      if( resultsForDay != null ) {\n        const type = edge.node.Translaticiarum_Type\n        let arrTranslaticiarum = resultsForDay[ type ]\n        if( arrTranslaticiarum == null )\n          arrTranslaticiarum = resultsForDay[ type ] = []\n\n        arrTranslaticiarum.push( edge.node )\n      }\n\n    } )\n\n    return results\n  }\n\n  renderCell( TranslaticiarumByDateAndType, translaticiarumType, transliticiarumDay ) {\n\n    let cell\n\n    // Type 0 does not exist, this indicates that a row should be dates\n    if( translaticiarumType == 0 ) {\n      // Blank cell top left\n      if( transliticiarumDay == null )\n        cell = \"\"\n      else {\n        // Will display day of week\n        cell = dayOfWeek[ dateUTCToLocal( transliticiarumDay ).getUTCDay() ]\n      }\n    } else {\n      // On the left, the types of translaticiarums\n      if( transliticiarumDay == null )\n        cell = Translaticiarum_Icon( translaticiarumType )\n      else {\n        cell = \"-\"\n        const TranslaticiarumByType = TranslaticiarumByDateAndType[ transliticiarumDay.getTime() ]\n        if( TranslaticiarumByType != null ) {\n          const arrTranslaticiarum = TranslaticiarumByType[ translaticiarumType ]\n          if( arrTranslaticiarum != null ) {\n            cell = \"\"\n            for( let a_Translaticiarum of arrTranslaticiarum )\n              cell += dateFormat( dateUTCToLocal( new Date( a_Translaticiarum.Translaticiarum_Time ) ), \"h:mmtt\" )\n            //cell = \"X\"\n          }\n        }\n      }\n    }\n\n    return(\n      <td style={ { width: 100 } }key={ transliticiarumDay }>{ cell }</td>\n    )\n  }\n\n  render() {\n\n    let translaticiarumTypes = [ 0, 1, 2, 3, 4, 5, 6, 7, 8 ]\n\n    const firstDayEpoch = dateLocalToUTC( this.state.Date_Start ).getTime()\n\n    // Depending on width, determine the number of days shows. Each day is 100 pixels\n    let numberOfDays = Math.floor( ( this.context.rbContext.viewportDimensions.get( this, 'contentWidth' ) - 120 ) / 100 )\n    if( numberOfDays < 1 ) numberOfDays = 1\n    else if( numberOfDays > 7 ) numberOfDays = 7\n\n    let transliticiarumDays: Array < Date > = []\n    for( let day = 0; day < numberOfDays; day++ )\n      transliticiarumDays[ day + 1 ] = new Date( firstDayEpoch + day * 24 * 60 * 60 * 1000 )\n\n    const TranslaticiarumByDateAndType = this.getTranslaticiarumByDateAndType( transliticiarumDays )\n\n    return(\n      <ResponsiveContentArea>\n        <Card initiallyExpanded={ true }>\n\n          <CardHeader title=\"Translaticiarum\" subtitle=\"This means routine in Latin\" />\n\n          <div style={ {float: 'right', marginTop: -58, marginRight: 20 } }>\n            <FloatingActionButton\n              secondary={true}\n              mini={true}\n              onTouchTap={ this._handle_onTouchTap_Add }\n            >\n              <ContentAdd />\n            </FloatingActionButton>\n          </div>\n\n          <table>\n            <tbody>\n              { translaticiarumTypes.map( ( translaticiarumType ) =>\n                <tr key={ translaticiarumType }>\n                  { transliticiarumDays.map( ( transliticiarumDay ) =>\n                    this.renderCell( TranslaticiarumByDateAndType, translaticiarumType, transliticiarumDay )\n                  ) }\n                </tr>\n              ) }\n            </tbody>\n          </table>\n\n          <CardActions initiallyExpanded={ true }>\n            <DatePicker\n              hintText=\"Date Start\"\n              value={ this.state.Date_Start }\n              onChange={ this._handle_onChange_Date_Start }\n            />\n          </CardActions>\n\n          <Translaticiarum_Properties\n            ref=\"Translaticiarum_Properties\"\n            Translaticiarum_Type={ 1 }\n            Translaticiarum_Date={ new Date( ).toJSON( ) }\n            Translaticiarum_Time={ new Date( ).toJSON( ) }\n            updateHandler={ this._handle_updateHandler_Translaticiarum_Add }\n          />\n\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default Relay.createContainer( Translaticiarum_Grid, {\n  fragments: {\n    Viewer: () => Relay.QL `\n      fragment on Viewer {\n        Translaticiarums(first: 2147483647) {\n          edges {\n            node {\n              id,\n              Translaticiarum_Date,\n              Translaticiarum_Time,\n              Translaticiarum_Type,\n              ${Translaticiarum_deleteMutation.getFragment('Translaticiarum')},\n              ${Translaticiarum_updateMutation.getFragment('Translaticiarum')},\n            },\n          },\n        },\n        ${Translaticiarum_addMutation.getFragment('Viewer')},\n        ${Translaticiarum_deleteMutation.getFragment('Viewer')},\n      }\n    `,\n  },\n} )\n"]}