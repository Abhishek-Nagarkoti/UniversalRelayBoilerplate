{"version":3,"sources":["../../../../../units/urb-example-translaticiarum/webapp/components/Translaticiarum_Calendar.js"],"names":["momentLocalizer","Translaticiarum_Calendar","_handle_updateHandler_Translaticiarum_Add","context","relay","commitUpdate","Translaticiarum_properties","Viewer","props","_handle_onTouchTap_Add","refs","Translaticiarum_Properties","_handle_Open","today","Date","translaticiarum","Translaticiarums","edges","calendarEvents","map","translaticiarumEdge","node","theDate","Translaticiarum_Date","theTime","Translaticiarum_Time","theDateTimeStart","getTime","theDateTimeStop","title","Translaticiarum_Type","start","end","console","log","Component","contextTypes","PropTypes","Environment","createContainer","fragments","getFragment"],"mappings":";;AAEA;AACA,sD;AACA,8B;AACA,4B;AACA,oD;AACA,uC;;AAEA;AACA,0F;AACA,oF;AACA,wE;;;;AAIA,2BAAYA,eAAZ,mB;;AAEMC,wB;;;;;AAKJC,yC,CAA4C,oCAA8B;AACxE,MAAKC,OAAL,CAAaC,KAAb,CAAmBC,YAAnB;AACE,sDAAqCC,0BAArC,EAAiEC,OAAQ,MAAKC,KAAL,CAAWD,MAApF,GADF;;AAGD,C;;AAEDE,sB,CAAyB,UAAM;AAC7B,MAAKC,IAAL,CAAUC,0BAAV,CAAqCC,YAArC;AACD,C;;AAEQ;AACP,GAAMC,OAAQ,GAAIC,KAAJ,EAAd;;AAEA,GAAMC,iBAAkB,KAAKP,KAAL,CAAWD,MAAX,CAAkBS,gBAAlB,CAAmCC,KAA3D;;AAEA,GAAMC,gBAAiBH,gBAAgBI,GAAhB,CAAoB,6BAAuB;AAChE,GAAMJ,iBAAkBK,oBAAoBC,IAA5C;AACA,GAAMC,SAAU,uCAAkBP,gBAAgBQ,oBAAlC,CAAhB;AACA,GAAMC,SAAU,uCAAkBT,gBAAgBU,oBAAlC,CAAhB;;AAEA,GAAMC,kBAAmB,oCAAe,GAAIZ,KAAJ,CAASQ,QAAQK,OAAR,GAAoBH,QAAQG,OAAR,EAA7B,CAAf,CAAzB;AACA,GAAMC,iBAAkB;AACtB,GAAId,KAAJ,CAASQ,QAAQK,OAAR,GAAoBH,QAAQG,OAAR,EAApB,CAAwC,OAAjD,CADsB,CAAxB;;;AAIA,MAAO;AACLE,MAAO,QAAUd,gBAAgBe,oBAD5B;AAELC,MAAOL,gBAFF;AAGLM,IAAKJ,eAHA,CAAP;;AAKD,CAfsB,CAAvB;;AAiBAK,QAAQC,GAAR,CAAYhB,cAAZ;;AAEA;AACE;AACE,0CAAM,kBAAmB,IAAzB;;AAEE;AACE,MAAM,kCADR;AAEE,SAAS,0BAFX,EAFF;;;AAOE,0DAAa,OAAQA,cAArB,CAAqC,YAAa,GAAIJ,KAAJ,CAAS,IAAT,CAAe,CAAf,CAAkB,CAAlB,CAAlD,EAPF,CADF,CADF;;;;;AAcD,C,sCArDoC,gBAAMqB,S,EAAvClC,wB,CACGmC,Y,CAAe,CACpBhC,MAAO,qBAAMiC,SAAN,CAAgBC,WADH,C;;;AAuDT,qBAAMC,eAAN,CAAsBtC,wBAAtB,CAAgD;AAC7DuC,UAAW;AACTjC,OAAQ;;;;;;;;;;;;AAYF,sCAA4BkC,WAA5B,CAAwC,QAAxC,CAZE,GADC,CADkD,CAAhD,C","file":"Translaticiarum_Calendar.js","sourcesContent":["// @flow\n\nimport { Card, CardHeader } from 'material-ui/Card'\nimport ContentAdd from 'material-ui/svg-icons/content/add'\nimport moment from 'moment'\nimport React from 'react'\nimport BigCalendar from 'react-big-calendar'\nimport Relay from 'react-relay'\n\nimport { dateFromUTCString, dateUTCToLocal } from '../../../../webapp/scripts/DateTimeHelpers'\nimport ResponsiveContentArea from '../../../../webapp/components/ResponsiveContentArea'\nimport Translaticiarum_addMutation from '../../relay/Translaticiarum_addMutation'\nimport Translaticiarum_Properties from './Translaticiarum_Properties'\n\n// Setup the localizer by providing the moment (or globalize) Object\n// to the correct localizer.\nBigCalendar.momentLocalizer(moment) // or globalizeLocalizer\n\nclass Translaticiarum_Calendar extends React.Component {\n  static contextTypes = {\n    relay: Relay.PropTypes.Environment,\n  }\n\n  _handle_updateHandler_Translaticiarum_Add = Translaticiarum_properties => {\n    this.context.relay.commitUpdate(\n      new Translaticiarum_addMutation({ ...Translaticiarum_properties, Viewer: this.props.Viewer }),\n    )\n  }\n\n  _handle_onTouchTap_Add = () => {\n    this.refs.Translaticiarum_Properties._handle_Open()\n  }\n\n  render() {\n    const today = new Date()\n\n    const translaticiarum = this.props.Viewer.Translaticiarums.edges\n\n    const calendarEvents = translaticiarum.map(translaticiarumEdge => {\n      const translaticiarum = translaticiarumEdge.node\n      const theDate = dateFromUTCString(translaticiarum.Translaticiarum_Date)\n      const theTime = dateFromUTCString(translaticiarum.Translaticiarum_Time)\n\n      const theDateTimeStart = dateUTCToLocal(new Date(theDate.getTime() + theTime.getTime()))\n      const theDateTimeStop = dateUTCToLocal(\n        new Date(theDate.getTime() + theTime.getTime() + 7200000),\n      )\n\n      return {\n        title: 'Type ' + translaticiarum.Translaticiarum_Type,\n        start: theDateTimeStart,\n        end: theDateTimeStop,\n      }\n    })\n\n    console.log(calendarEvents)\n\n    return (\n      <ResponsiveContentArea>\n        <Card initiallyExpanded={true}>\n\n          <CardHeader\n            title=\"Calendar view of Translaticiarum\"\n            subtitle=\"Using React Big Calendar\"\n          />\n\n          <BigCalendar events={calendarEvents} defaultDate={new Date(2017, 6, 1)} />\n\n        </Card>\n      </ResponsiveContentArea>\n    )\n  }\n}\n\nexport default Relay.createContainer(Translaticiarum_Calendar, {\n  fragments: {\n    Viewer: () => Relay.QL`\n      fragment on Viewer {\n        Translaticiarums(first: 2147483647) {\n          edges {\n            node {\n              id,\n              Translaticiarum_Type,\n              Translaticiarum_Date,\n              Translaticiarum_Time,\n            },\n          },\n        },\n        ${Translaticiarum_addMutation.getFragment('Viewer')},\n      }\n    `,\n  },\n})\n"]}