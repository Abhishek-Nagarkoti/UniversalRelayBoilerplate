{"version":3,"sources":["../../../../units/urb-account-management/scripts/scorePassword_Simple.js"],"names":["scorePassword_Simple","pass","uniqueLettersAwardUntilRepetitions","variationAwardCoefficient","score","letters","Object","i","length","variations","digits","test","lower","upper","nonWords","variationCount","check"],"mappings":";;AAEwBA,oB,CAAT,QAASA,qBAAT;AACbC,IADa;AAEbC,kCAFa;AAGbC,yBAHa;;AAKf;AACE,GAAIC,OAAQ,CAAZ;AACA,GAAI,CAACH,IAAL;AACI,MAAO,EAAP;;;AAGJ,GAAII,SAAU,GAAIC,OAAJ,EAAd;AACA,IAAK,GAAIC,GAAE,CAAX,CAAcA,EAAEN,KAAKO,MAArB,CAA6BD,GAA7B;AACA;AACIF,QAAQJ,KAAKM,CAAL,CAAR,EAAmB,CAACF,QAAQJ,KAAKM,CAAL,CAAR,GAAoB,CAArB,EAA0B,CAA7C;AACAH,OAASF,mCAAqCG,QAAQJ,KAAKM,CAAL,CAAR,CAA9C;AACH;;;AAGD,GAAIE,YAAa;AACbC,OAAQ,KAAKC,IAAL,CAAUV,IAAV,CADK;AAEbW,MAAO,QAAQD,IAAR,CAAaV,IAAb,CAFM;AAGbY,MAAO,QAAQF,IAAR,CAAaV,IAAb,CAHM;AAIba,SAAU,KAAKH,IAAL,CAAUV,IAAV,CAJG,CAAjB;;;AAOA,GAAIc,gBAAiB,CAArB;AACA,IAAK,GAAIC,MAAT,GAAkBP,WAAlB;AACIM,gBAAmBN,WAAWO,KAAX,GAAqB,IAAtB,CAA8B,CAA9B,CAAkC,CAApD,CADJ;;AAGAZ,OAAS,CAACW,eAAiB,CAAlB,EAAuBZ,yBAAhC;;AAEA,MAAOC,MAAP;AACD","file":"scorePassword_Simple.js","sourcesContent":["// @flow weak\n\nexport default function scorePassword_Simple(\n  pass,\n  uniqueLettersAwardUntilRepetitions,\n  variationAwardCoefficient,\n)\n{\n  let score = 0\n  if (!pass)\n      return 0\n\n  // award every unique letter until 5 repetitions\n  let letters = new Object()\n  for (var i=0; i<pass.length; i++)\n  {\n      letters[pass[i]] = (letters[pass[i]] || 0) + 1\n      score += uniqueLettersAwardUntilRepetitions / letters[pass[i]]\n  }\n\n  // bonus points for mixing it up\n  let variations = {\n      digits: /\\d/.test(pass),\n      lower: /[a-z]/.test(pass),\n      upper: /[A-Z]/.test(pass),\n      nonWords: /\\W/.test(pass),\n  }\n\n  let variationCount = 0\n  for (var check in variations)\n      variationCount += (variations[check] == true) ? 1 : 0\n\n  score += (variationCount - 1) * variationAwardCoefficient\n\n  return score\n}\n"]}