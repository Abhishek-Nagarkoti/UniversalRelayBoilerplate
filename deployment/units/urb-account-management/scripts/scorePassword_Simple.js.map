{"version":3,"sources":["../../../../units/urb-account-management/scripts/scorePassword_Simple.js"],"names":["scorePassword_Simple","pass","uniqueLettersAwardUntilRepetitions","variationAwardCoefficient","score","letters","Object","i","length","variations","digits","test","lower","upper","nonWords","variationCount","check"],"mappings":";;AAEwBA,oB,CAAT,QAASA,qBAAT;AACbC,IADa;AAEbC,kCAFa;AAGbC,yBAHa;AAIb;AACA,GAAIC,OAAQ,CAAZ;AACA,GAAI,CAACH,IAAL,CAAW,MAAO,EAAP;;;AAGX,GAAII,SAAU,GAAIC,OAAJ,EAAd;AACA,IAAK,GAAIC,GAAI,CAAb,CAAgBA,EAAIN,KAAKO,MAAzB,CAAiCD,GAAjC,CAAsC;AACpCF,QAAQJ,KAAKM,CAAL,CAAR,EAAmB,CAACF,QAAQJ,KAAKM,CAAL,CAAR,GAAoB,CAArB,EAA0B,CAA7C;AACAH,OAASF,mCAAqCG,QAAQJ,KAAKM,CAAL,CAAR,CAA9C;AACD;;;AAGD,GAAIE,YAAa;AACfC,OAAQ,KAAKC,IAAL,CAAUV,IAAV,CADO;AAEfW,MAAO,QAAQD,IAAR,CAAaV,IAAb,CAFQ;AAGfY,MAAO,QAAQF,IAAR,CAAaV,IAAb,CAHQ;AAIfa,SAAU,KAAKH,IAAL,CAAUV,IAAV,CAJK,CAAjB;;;AAOA,GAAIc,gBAAiB,CAArB;AACA,IAAK,GAAIC,MAAT,GAAkBP,WAAlB,EAA8BM,gBAAkBN,WAAWO,KAAX,GAAqB,IAArB,CAA4B,CAA5B,CAAgC,CAAlD,CAA9B;;AAEAZ,OAAS,CAACW,eAAiB,CAAlB,EAAuBZ,yBAAhC;;AAEA,MAAOC,MAAP;AACD","file":"scorePassword_Simple.js","sourcesContent":["// @flow\n\nexport default function scorePassword_Simple(\n  pass,\n  uniqueLettersAwardUntilRepetitions,\n  variationAwardCoefficient,\n) {\n  let score = 0\n  if (!pass) return 0\n\n  // award every unique letter until 5 repetitions\n  let letters = new Object()\n  for (var i = 0; i < pass.length; i++) {\n    letters[pass[i]] = (letters[pass[i]] || 0) + 1\n    score += uniqueLettersAwardUntilRepetitions / letters[pass[i]]\n  }\n\n  // bonus points for mixing it up\n  let variations = {\n    digits: /\\d/.test(pass),\n    lower: /[a-z]/.test(pass),\n    upper: /[A-Z]/.test(pass),\n    nonWords: /\\W/.test(pass),\n  }\n\n  let variationCount = 0\n  for (var check in variations) variationCount += variations[check] == true ? 1 : 0\n\n  score += (variationCount - 1) * variationAwardCoefficient\n\n  return score\n}\n"]}