{"version":3,"sources":["../../../../../units/urb-account-management/app/components/Logout.js"],"names":["Logout","props","context","handle_onPress_Logout","logout","goToRouteByNameAndParams","userName","Viewer","User_DisplayName","styles","container","Component","createContainer","fragments","create","flex","justifyContent","alignItems","backgroundColor"],"mappings":";;AAEA,uC;AACA,4B;AACA;AACA;;AAEA,yD;AACA,0D;AACA,oD;;AAEMA,M;AACJ,gBAAYC,KAAZ,CAAmBC,OAAnB,CAA4B;AACpBD,KADoB,CACbC,OADa;;;AAI5BC,qBAJ4B,CAIJ,UAAM;;AAE5B,uBAAaC,MAAb,CAAoB,iBAAM,qBAAUC,wBAAV,CAAmC,aAAnC,CAAkD,EAAlD,CAAN,EAApB;AACD,CAP2B,cAE3B,C;;AAOQ;AACP,GAAIC,UAAW,KAAKL,KAAL,CAAWM,MAAX,CAAkBC,gBAAjC;AACA,GAAI,CAACF,QAAL,CAAeA,SAAW,EAAX;AACf;AACE,iDAAM,MAAOG,OAAOC,SAApB;AACE,iFADF;AAEE,kEAAYJ,QAAZ,CAFF;AAGE,gDAAQ,KAAK,QAAb,CAAsB,MAAM,SAA5B,CAAsC,QAAS,KAAKH,qBAApD,EAHF,CADF;;;AAOD,C,oBApBkB,gBAAMQ,S;;;AAuBZ,qBAAMC,eAAN,CAAsBZ,MAAtB,CAA8B;AAC3Ca,UAAW;AACTN,OAAQ,wUADC,CADgC,CAA9B,C;;;;;;;;AAUf,GAAME,QAAS,wBAAWK,MAAX,CAAkB;AAC/BJ,UAAW;AACTK,KAAM,CADG;AAETC,eAAgB,QAFP;AAGTC,WAAY,SAHH;AAITC,gBAAiB,SAJR,CADoB,CAAlB,CAAf","file":"Logout.js","sourcesContent":["// @flow\n\nimport Relay from 'react-relay'\nimport React from 'react'\nimport { StyleSheet, View, Text } from 'react-native'\nimport { FormLabel } from 'react-native-elements'\n\nimport Button from '../../../../app/components/Button'\nimport NetworkLayer from '../../../../app/NetworkLayer'\nimport UrlRouter from '../../../../app/UrlRouter'\n\nclass Logout extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n  }\n\n  handle_onPress_Logout = () => {\n    // TODO x0100 Here the server should be properly called\n    NetworkLayer.logout(() => UrlRouter.goToRouteByNameAndParams('/user/login', {}))\n  }\n\n  render() {\n    let userName = this.props.Viewer.User_DisplayName\n    if (!userName) userName = ''\n    return (\n      <View style={styles.container}>\n        <FormLabel>Logged in as</FormLabel>\n        <FormLabel>{userName}</FormLabel>\n        <Button kind=\"action\" title=\"Log Out\" onPress={this.handle_onPress_Logout} />\n      </View>\n    )\n  }\n}\n\nexport default Relay.createContainer(Logout, {\n  fragments: {\n    Viewer: variables => Relay.QL`\n      fragment on Viewer {\n        User_DisplayName\n      }\n    `,\n  },\n})\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'stretch',\n    backgroundColor: '#f0f0f0',\n  },\n})\n"]}