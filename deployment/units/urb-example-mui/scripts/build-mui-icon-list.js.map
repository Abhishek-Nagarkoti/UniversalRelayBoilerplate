{"version":3,"sources":["../../../../units/urb-example-mui/scripts/build-mui-icon-list.js"],"names":["fs","require","rrs","importsSource","cardItemsSource","key","forEach","file","console","log","fileLines","readFileSync","split","index","found","length","indexOf","fileName","substring","replace","moduleName","trim","push","sourceCode","join","writeFileSync"],"mappings":"AAAA,GAAMA,IAAKC,QAAQ,IAAR,CAAX;AACA,GAAMC,KAAMD,QAAQ,wBAAR,CAAZ;;AAEA,GAAIE,eAAgB,EAApB;AACA,GAAIC,iBAAkB,EAAtB;AACA,GAAIC,KAAM,CAAV;;AAEAH,IAAI,uCAAJ,EAA6CI,OAA7C,CAAqD,SAASC,IAAT,CAAe;AAClE;AACEA,OAAS,uDAAT;AACAA,OAAS,6CAFX;AAGE;AACAC,QAAQC,GAAR,CAAY,eAAiBF,IAA7B;AACA,GAAIG,WAAYV,GAAGW,YAAH,CAAgBJ,IAAhB,CAAsB,MAAtB,EAA8BK,KAA9B,CAAoC,IAApC,CAAhB;AACA,GAAIC,OAAQ,CAAZ;AACEC,MAAQ,KADV;;;;;AAMA,MAAOA,QAAU,KAAV,EAAmBD,MAAQH,UAAUK,MAA5C,CAAoD;AAClD,GAAIL,UAAUG,KAAV,EAAiBG,OAAjB,CAAyB,oBAAzB,EAAiD,CAAC,CAAtD,CAAyD;AACvD,GAAIC,UAAWV,KAAKW,SAAL,CAAe,CAAf,CAAkBX,KAAKQ,MAAL,CAAc,CAAhC,EAAmCI,OAAnC,CAA2C,eAA3C,CAA4D,EAA5D,CAAf;AACA,GAAIC,YAAaV,UAAUG,KAAV,EAAiBM,OAAjB,CAAyB,oBAAzB,CAA+C,EAA/C,EAAmDA,OAAnD,CAA2D,GAA3D,CAAgE,EAAhE,EAAoEE,IAApE,EAAjB;;AAEAlB,cAAcmB,IAAd,WAA6BF,UAA7B,YAAiDH,QAAjD;AACAb,gBAAgBkB,IAAhB;AACgCjB,KADhC,oBACuDe,UADvD,qBACqFH,QADrF,iBAC6GG,UAD7G;;AAGAhB,gBAAgBkB,IAAhB;;AAEAR,MAAQ,IAAR;AACD,CAXD,IAWOD;AACR;AACF;AACF,CA5BD;;AA8BA,GAAIU,YAAa;;;;;;;;;;;;AAYfpB,cAAcqB,IAAd,CAAmB,IAAnB,CAZe;;;;;;;;;;;AAuBfpB,gBAAgBoB,IAAhB,CAAqB,IAArB,CAvBe,yRAAjB;;;;;;;;;;;;;;;;;;;;;AA4CAxB,GAAGyB,aAAH,CAAiB,wDAAjB,CAA2EF,WAAWC,IAAX,CAAgB,IAAhB,CAA3E","file":"build-mui-icon-list.js","sourcesContent":["const fs = require('fs')\nconst rrs = require('recursive-readdir-sync')\n\nlet importsSource = []\nlet cardItemsSource = []\nlet key = 0\n\nrrs('./node_modules/material-ui/svg-icons/').forEach(function(file) {\n  if (\n    file !== 'node_modules/material-ui/svg-icons/index-generator.js' &&\n    file !== 'node_modules/material-ui/svg-icons/index.js'\n  ) {\n    console.log('ðŸ“–  Reading ' + file)\n    let fileLines = fs.readFileSync(file, 'utf8').split('\\n')\n    let index = 0,\n      found = false\n\n    // In order to display all the icons, comment out the following:\n    //if( key > 50 ) return;\n\n    while (found === false && index < fileLines.length) {\n      if (fileLines[index].indexOf('exports.default = ') > -1) {\n        let fileName = file.substring(0, file.length - 3).replace('node_modules/', '') //.replace( 'svg-icons', 'lib/svg-icons' );\n        let moduleName = fileLines[index].replace('exports.default = ', '').replace(';', '').trim()\n\n        importsSource.push(`import ${moduleName} from '${fileName}';`)\n        cardItemsSource.push(\n          `            <ListItem key=\"${key++}\" primaryText=\"${moduleName}\" secondaryText=\"${fileName}\" leftIcon={<${moduleName} />} />`,\n        )\n        cardItemsSource.push(`            <Divider inset={true} />`)\n\n        found = true\n      } else index++\n    }\n  }\n})\n\nlet sourceCode = [\n  `// @flow`,\n  ``,\n  `import React from 'react';`,\n  `import Relay from 'react-relay';`,\n  ``,\n  `import {Card} from 'material-ui/Card';`,\n  `import {List, ListItem} from 'material-ui/List';`,\n  `import Divider from 'material-ui/Divider';`,\n  ``,\n  `import ResponsiveContentArea from '../../../../webapp/components/ResponsiveContentArea'`,\n  ``,\n  importsSource.join('\\n'),\n  // `import IconNotificationsEventAvailable from 'material-ui/svg-icons/notification/event-available';`,\n  ``,\n  `class MUI_Icons extends React.Component`,\n  `{`,\n  `  render( )`,\n  `  {`,\n  `    return (`,\n  `     <ResponsiveContentArea>`,\n  `        <Card>`,\n  `          <List>`,\n  cardItemsSource.join('\\n'),\n  // `            <ListItem key=\"2\" primaryText=\"IconNotificationsEventAvailable\" leftIcon={<IconNotificationsEventAvailable />} />`,\n  // `            <Divider inset={true} />`,\n  `          </List>`,\n  `        </Card>`,\n  `      </ResponsiveContentArea>`,\n  `    )`,\n  `  }`,\n  `}`,\n  ``,\n  `export default Relay.createContainer(MUI_Icons, {`,\n  `  fragments: {`,\n  `    Viewer: () => Relay.QL\\``,\n  `      fragment on Viewer {`,\n  `        User_IsAnonymous,`,\n  `      }`,\n  `    \\`,`,\n  `  },`,\n  `});`,\n]\n\nfs.writeFileSync('./units/urb-example-mui/webapp/components/MUI_Icons.js', sourceCode.join('\\n'))\n"]}