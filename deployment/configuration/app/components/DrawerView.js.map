{"version":3,"sources":["../../../../configuration/app/components/DrawerView.js"],"names":["styles","create","container","flex","marginTop","justifyContent","alignItems","backgroundColor","greetingEnvelope","height","marginLeft","marginRight","greetingText","fontSize","color","list","DrawerView","openRoute","routeName","options","context","drawer","close","goToRouteByURL","isAnonymous","props","Viewer","User_IsAnonymous","sceneStyle","User_DisplayName","Component","contextTypes","PropTypes","object","propTypes","name","string","style","title","createContainer","fragments"],"mappings":";;AAEA,4B;AACA,uC;AACA;AACA;;AAEA,iD;;AAEA,GAAMA,QAAS,wBAAWC,MAAX,CAAmB;AAChCC;AACA;AACEC,KAAM,CADR;AAEEC,UAAW,EAFb;AAGEC,eAAgB,YAHlB;AAIEC,WAAY,SAJd;AAKEC,gBAAiB,SALnB,CAFgC;;AAShCC;AACA;AACEC,OAAQ,EADV;AAEEC,WAAY,EAFd;AAGEC,YAAa,EAHf;AAIEN,eAAgB,QAJlB;AAKEC,WAAY,QALd,CAVgC;;AAiBhCM;AACA;AACEC,SAAU,EADZ;AAEEC,MAAO,SAFT,CAlBgC;;AAsBhCC;AACA;AACEZ,KAAM,CADR,CAvBgC,CAAnB,CAAf,C;;;;AA4BMa,U;;;;;;;;;;;;;;AAcJC,S,CAAY,SAAEC,SAAF,CAAaC,OAAb;AACZ;AACE,MAAKC,OAAL,CAAaC,MAAb,CAAoBC,KAApB;;;;;AAKA,oBAAUC,cAAV,CAA0BL,SAA1B;AACD,C;;;AAGD;AACE,GAAMM,aAAc,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,gBAAtC;AACA;AACE,iDAAM,MAAQ,CAAE3B,OAAOE,SAAT,CAAoB,KAAKuB,KAAL,CAAWG,UAA/B,CAAd;AACE,iDAAM,MAAQ,CAAE5B,OAAOQ,gBAAT,CAAd;AACE,iDAAM,MAAQR,OAAOY,YAArB;AACU,KAAQY,YAAc,UAAd,CAA2B,KAAKC,KAAL,CAAWC,MAAX,CAAkBG,gBAArD,CADV,CADF,CADF;;;AAME,yDAAM,eAAiB7B,OAAOe,IAA9B;AACIS,aAAe,6DAAU,QAAU,yBAAM,QAAKP,SAAL,CAAgB,aAAhB,CAAN,EAApB,CAA4D,MAAM,OAAlE,CAA0E,YAAc,IAAxF,EADnB;AAEE,6DAAU,QAAU,yBAAM,QAAKA,SAAL,CAAgB,OAAhB,CAAN,EAApB,CAAsD,MAAM,OAA5D,CAAoE,YAAc,IAAlF,EAFF;AAGE,6DAAU,QAAU,yBAAM,QAAKA,SAAL,CAAgB,eAAhB,CAAN,EAApB,CAA8D,MAAM,KAApE,CAA0E,YAAc,IAAxF,EAHF;AAIM,CAACO,WAAH,EAAoB,6DAAU,QAAU,yBAAM,QAAKP,SAAL,CAAgB,gBAAhB,CAAN,EAApB,CAA+D,MAAM,iBAArE,CAAuF,YAAc,IAArG,EAJxB;AAKM,CAACO,WAAH,EAAoB,6DAAU,QAAU,yBAAM,QAAKP,SAAL,CAAgB,gBAAhB,CAAN,EAApB,CAA+D,MAAM,cAArE,CAAoF,YAAc,IAAlG,EALxB;AAMM,CAACO,WAAH,EAAoB,6DAAU,QAAU,yBAAM,QAAKP,SAAL,CAAgB,eAAhB,CAAN,EAApB,CAA8D,MAAM,SAApE,CAA8E,YAAc,IAA5F,EANxB;AAOM,CAACO,WAAH,EAAoB,6DAAU,QAAU,yBAAM,QAAKP,SAAL,CAAgB,0BAAhB,CAAN,EAApB,CAAyE,MAAM,aAA/E,CAA6F,YAAc,IAA3G,EAPxB;AAQM,CAACO,WAAH,EAAoB,6DAAU,QAAU,yBAAM,QAAKP,SAAL,CAAgB,cAAhB,CAAN,EAApB,CAA6D,MAAM,SAAnE,CAA6E,YAAc,IAA3F,EARxB,CANF,CADF;;;;AAmBD,C,wBA9CsB,gBAAMa,S,EAAzBd,U,CAEGe,Y,CACP,CACEV,OAAQ,gBAAMW,SAAN,CAAgBC,MAD1B,C,CAHIjB,U,CAOGkB,S,CACP,CACEC,KAAM,gBAAMH,SAAN,CAAgBI,MADxB,CAEER,WAAY,kBAAKM,SAAL,CAAeG,KAF7B,CAGEC,MAAO,gBAAMN,SAAN,CAAgBI,MAHzB,C;;;AAyCa,qBAAMG,eAAN,CAAuBvB,UAAvB,CAAmC;AAChDwB,UAAW;AACTd,OAAQ,0YADC,CADqC,CAAnC,C","file":"DrawerView.js","sourcesContent":["// @flow weak\n\nimport React from 'react'\nimport Relay from 'react-relay'\nimport { StyleSheet, View, Text } from 'react-native'\nimport { List, ListItem } from 'react-native-elements'\n\nimport UrlRouter from '../../../app/UrlRouter'\n\nconst styles = StyleSheet.create( {\n  container:\n  {\n    flex: 1,\n    marginTop: 20,\n    justifyContent: 'flex-start',\n    alignItems: 'stretch',\n    backgroundColor: '#ffffff',\n  },\n  greetingEnvelope:\n  {\n    height: 64,\n    marginLeft: 15,\n    marginRight: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  greetingText:\n  {\n    fontSize: 20,\n    color: '#000000',\n  },\n  list:\n  {\n    flex: 1,\n  }\n} )\n\nclass DrawerView extends React.Component\n{\n  static contextTypes =\n  {\n    drawer: React.PropTypes.object,\n  }\n\n  static propTypes =\n  {\n    name: React.PropTypes.string,\n    sceneStyle: View.propTypes.style,\n    title: React.PropTypes.string,\n  }\n\n  openRoute = ( routeName, options ) =>\n  {\n    this.context.drawer.close( )\n\n    // TODO: Just for testing use go to URL with parsing in order to test\n    // TODO x1000 change it to pass params for speed\n    //UrlRouter.goToRouteByNameAndParams( routeName, options )\n    UrlRouter.goToRouteByURL( routeName )\n  }\n\n  render( )\n  {\n    const isAnonymous = this.props.Viewer.User_IsAnonymous\n    return (\n      <View style={ [ styles.container, this.props.sceneStyle ] }>\n        <View style={ [ styles.greetingEnvelope ] }>\n          <Text style={ styles.greetingText }>\n            Hello { ' ' + ( isAnonymous ? 'Stranger' : this.props.Viewer.User_DisplayName ) }\n          </Text>\n        </View>\n        <List containerStyle={ styles.list }>\n          { isAnonymous && <ListItem onPress={ () => this.openRoute( '/user/login' ) } title=\"Login\" hideChevron={ true } /> }\n          <ListItem onPress={ () => this.openRoute( '/todo' ) } title=\"To Do\" hideChevron={ true } />\n          <ListItem onPress={ () => this.openRoute( '/villa/search' ) } title=\"Map\" hideChevron={ true } />\n          { ( !isAnonymous ) && <ListItem onPress={ () => this.openRoute( '/paymentmethod' ) } title=\"Payment Methods\" hideChevron={ true } /> }\n          { ( !isAnonymous ) && <ListItem onPress={ () => this.openRoute( '/user/location' ) } title=\"Set Location\" hideChevron={ true } /> }\n          { ( !isAnonymous ) && <ListItem onPress={ () => this.openRoute( '/user/profile' ) } title=\"Profile\" hideChevron={ true } /> }\n          { ( !isAnonymous ) && <ListItem onPress={ () => this.openRoute( '/user/messages/thread/55' ) } title=\"Test Thread\" hideChevron={ true } /> }\n          { ( !isAnonymous ) && <ListItem onPress={ () => this.openRoute( '/user/logout' ) } title=\"Log Out\" hideChevron={ true } /> }\n        </List>\n      </View>\n    )\n  }\n}\n\nexport default Relay.createContainer( DrawerView, {\n  fragments: {\n    Viewer: () => Relay.QL`\n      fragment on Viewer {\n        User_IsAnonymous,\n        User_DisplayName\n      }\n    `\n  }\n} )\n"]}