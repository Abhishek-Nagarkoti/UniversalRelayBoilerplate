{"version":3,"sources":["../../../../configuration/app/components/DrawerView.js"],"names":["styles","create","container","flex","marginTop","justifyContent","alignItems","backgroundColor","greetingEnvelope","height","marginLeft","marginRight","greetingText","fontSize","color","list","DrawerView","openRoute","routeName","options","context","drawer","close","goToRouteByURL","isAnonymous","props","Viewer","User_IsAnonymous","sceneStyle","User_DisplayName","Component","contextTypes","PropTypes","object","propTypes","name","string","style","title","createContainer","fragments"],"mappings":";;AAEA,4B;AACA,uC;AACA;AACA;;AAEA,iD;;AAEA,GAAMA,QAAS,wBAAWC,MAAX,CAAkB;AAC/BC,UAAW;AACTC,KAAM,CADG;AAETC,UAAW,EAFF;AAGTC,eAAgB,YAHP;AAITC,WAAY,SAJH;AAKTC,gBAAiB,SALR,CADoB;;AAQ/BC,iBAAkB;AAChBC,OAAQ,EADQ;AAEhBC,WAAY,EAFI;AAGhBC,YAAa,EAHG;AAIhBN,eAAgB,QAJA;AAKhBC,WAAY,QALI,CARa;;AAe/BM,aAAc;AACZC,SAAU,EADE;AAEZC,MAAO,SAFK,CAfiB;;AAmB/BC,KAAM;AACJZ,KAAM,CADF,CAnByB,CAAlB,CAAf,C;;;;AAwBMa,U;;;;;;;;;;;AAWJC,S,CAAY,SAACC,SAAD,CAAYC,OAAZ,CAAwB;AAClC,MAAKC,OAAL,CAAaC,MAAb,CAAoBC,KAApB;;;;;AAKA,oBAAUC,cAAV,CAAyBL,SAAzB;AACD,C;;AAEQ;AACP,GAAMM,aAAc,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,gBAAtC;AACA;AACE,iDAAM,MAAO,CAAC3B,OAAOE,SAAR,CAAmB,KAAKuB,KAAL,CAAWG,UAA9B,CAAb;AACE,iDAAM,MAAO,CAAC5B,OAAOQ,gBAAR,CAAb;AACE,iDAAM,MAAOR,OAAOY,YAApB;AACS,KAAOY,YAAc,UAAd,CAA2B,KAAKC,KAAL,CAAWC,MAAX,CAAkBG,gBAApD,CADT,CADF,CADF;;;AAME,yDAAM,eAAgB7B,OAAOe,IAA7B;AACGS;AACC;AACE,QAAS,yBAAM,QAAKP,SAAL,CAAe,aAAf,CAAN,EADX;AAEE,MAAM,OAFR;AAGE,YAAa,IAHf,EAFJ;;AAOE,6DAAU,QAAS,yBAAM,QAAKA,SAAL,CAAe,OAAf,CAAN,EAAnB,CAAkD,MAAM,OAAxD,CAAgE,YAAa,IAA7E,EAPF;AAQE;AACE,QAAS,yBAAM,QAAKA,SAAL,CAAe,eAAf,CAAN,EADX;AAEE,MAAM,KAFR;AAGE,YAAa,IAHf,EARF;;AAaG,CAACO,WAAD;AACC;AACE,QAAS,yBAAM,QAAKP,SAAL,CAAe,gBAAf,CAAN,EADX;AAEE,MAAM,iBAFR;AAGE,YAAa,IAHf,EAdJ;;AAmBG,CAACO,WAAD;AACC;AACE,QAAS,yBAAM,QAAKP,SAAL,CAAe,gBAAf,CAAN,EADX;AAEE,MAAM,cAFR;AAGE,YAAa,IAHf,EApBJ;;AAyBG,CAACO,WAAD;AACC;AACE,QAAS,yBAAM,QAAKP,SAAL,CAAe,eAAf,CAAN,EADX;AAEE,MAAM,SAFR;AAGE,YAAa,IAHf,EA1BJ;;AA+BG,CAACO,WAAD;AACC;AACE,QAAS,yBAAM,QAAKP,SAAL,CAAe,0BAAf,CAAN,EADX;AAEE,MAAM,aAFR;AAGE,YAAa,IAHf,EAhCJ;;AAqCG,CAACO,WAAD;AACC;AACE,QAAS,yBAAM,QAAKP,SAAL,CAAe,cAAf,CAAN,EADX;AAEE,MAAM,SAFR;AAGE,YAAa,IAHf,EAtCJ,CANF,CADF;;;;;AAqDD,C,wBA3EsB,gBAAMa,S,EAAzBd,U,CACGe,Y,CAAe,CACpBV,OAAQ,gBAAMW,SAAN,CAAgBC,MADJ,C,CADlBjB,U,CAKGkB,S,CAAY,CACjBC,KAAM,gBAAMH,SAAN,CAAgBI,MADL,CAEjBR,WAAY,kBAAKM,SAAL,CAAeG,KAFV,CAGjBC,MAAO,gBAAMN,SAAN,CAAgBI,MAHN,C;;;AAyEN,qBAAMG,eAAN,CAAsBvB,UAAtB,CAAkC;AAC/CwB,UAAW;AACTd,OAAQ,0YADC,CADoC,CAAlC,C","file":"DrawerView.js","sourcesContent":["// @flow\n\nimport React from 'react'\nimport Relay from 'react-relay'\nimport { StyleSheet, View, Text } from 'react-native'\nimport { List, ListItem } from 'react-native-elements'\n\nimport UrlRouter from '../../../app/UrlRouter'\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20,\n    justifyContent: 'flex-start',\n    alignItems: 'stretch',\n    backgroundColor: '#ffffff',\n  },\n  greetingEnvelope: {\n    height: 64,\n    marginLeft: 15,\n    marginRight: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  greetingText: {\n    fontSize: 20,\n    color: '#000000',\n  },\n  list: {\n    flex: 1,\n  },\n})\n\nclass DrawerView extends React.Component {\n  static contextTypes = {\n    drawer: React.PropTypes.object,\n  }\n\n  static propTypes = {\n    name: React.PropTypes.string,\n    sceneStyle: View.propTypes.style,\n    title: React.PropTypes.string,\n  }\n\n  openRoute = (routeName, options) => {\n    this.context.drawer.close()\n\n    // TODO: Just for testing use go to URL with parsing in order to test\n    // TODO x1000 change it to pass params for speed\n    //UrlRouter.goToRouteByNameAndParams( routeName, options )\n    UrlRouter.goToRouteByURL(routeName)\n  }\n\n  render() {\n    const isAnonymous = this.props.Viewer.User_IsAnonymous\n    return (\n      <View style={[styles.container, this.props.sceneStyle]}>\n        <View style={[styles.greetingEnvelope]}>\n          <Text style={styles.greetingText}>\n            Hello {' ' + (isAnonymous ? 'Stranger' : this.props.Viewer.User_DisplayName)}\n          </Text>\n        </View>\n        <List containerStyle={styles.list}>\n          {isAnonymous &&\n            <ListItem\n              onPress={() => this.openRoute('/user/login')}\n              title=\"Login\"\n              hideChevron={true}\n            />}\n          <ListItem onPress={() => this.openRoute('/todo')} title=\"To Do\" hideChevron={true} />\n          <ListItem\n            onPress={() => this.openRoute('/villa/search')}\n            title=\"Map\"\n            hideChevron={true}\n          />\n          {!isAnonymous &&\n            <ListItem\n              onPress={() => this.openRoute('/paymentmethod')}\n              title=\"Payment Methods\"\n              hideChevron={true}\n            />}\n          {!isAnonymous &&\n            <ListItem\n              onPress={() => this.openRoute('/user/location')}\n              title=\"Set Location\"\n              hideChevron={true}\n            />}\n          {!isAnonymous &&\n            <ListItem\n              onPress={() => this.openRoute('/user/profile')}\n              title=\"Profile\"\n              hideChevron={true}\n            />}\n          {!isAnonymous &&\n            <ListItem\n              onPress={() => this.openRoute('/user/messages/thread/55')}\n              title=\"Test Thread\"\n              hideChevron={true}\n            />}\n          {!isAnonymous &&\n            <ListItem\n              onPress={() => this.openRoute('/user/logout')}\n              title=\"Log Out\"\n              hideChevron={true}\n            />}\n        </List>\n      </View>\n    )\n  }\n}\n\nexport default Relay.createContainer(DrawerView, {\n  fragments: {\n    Viewer: () => Relay.QL`\n      fragment on Viewer {\n        User_IsAnonymous,\n        User_DisplayName\n      }\n    `,\n  },\n})\n"]}